{"version":3,"file":null,"sources":["../src/js/utility.js","../src/js/data/RibbonBaseData.js","../src/js/data/RibbonTabData.js","../src/js/data/RibbonAppTabData.js","../src/js/data/RibbonTitlebarData.js","../src/js/RibbonBase.jsx","../src/js/RibbonTitlebar.jsx","../src/js/RibbonItem.jsx","../src/js/RibbonTooltip.jsx","../src/js/data/RibbonTooltipData.js","../src/js/RibbonButton.jsx","../src/js/RibbonPushButton.jsx","../src/js/RibbonToggleButton.jsx","../src/js/data/RibbonItemData.js","../src/js/data/RibbonButtonData.js","../src/js/data/RibbonPushButtonData.js","../src/js/data/RibbonToggleButtonData.js","../src/js/RibbonGroup.jsx","../src/js/RibbonRadioButtonGroup.jsx","../src/js/data/RibbonGroupData.js","../src/js/data/RibbonRadioButtonGroupData.js","../src/js/RibbonPanel.jsx","../src/js/data/RibbonPanelData.js","../src/js/RibbonTab.jsx","../src/js/RibbonAppMenuSeperator.jsx","../src/js/RibbonAppMenuItem.jsx","../src/js/RibbonAppMenuButton.jsx","../src/js/data/RibbonAppMenuItemData.js","../src/js/data/RibbonAppMenuButtonData.js","../src/js/RibbonAppTab.jsx","../src/js/Ribbon.jsx","../src/js/RibbonTask.js","../src/js/RibbonTaskManager.js","../src/js/RibbonTaskExecuter.js","../src/js/RibbonCtrl.jsx","../src/js/data/index.js","../src/js/index.js"],"sourcesContent":["/**\n * @author yiskang / http://github.com/yiskang\n */\n\n'use strict';\n\n/**\n * Create new RFC4122 v4 GUID based on timeStamp.\n * @return {string}\t- New guid\n */\nexport const newGUID = () => {\n  var d = new Date().getTime();\n\n  var guid = 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(\n    /[xy]/g,\n    ( c ) => {\n      var r = ( d + Math.random() * 16 ) % 16 | 0;\n      d = Math.floor( d / 16 );\n      return ( c == 'x' ? r : ( r & 0x3 | 0x8 ) ).toString( 16 );\n    });\n\n  return guid;\n};\n\n/**\n * Check input is GUID.\n * @param {string} - Target guid.\n * @return {bool} -\tIf the input is a GUID, then return true.\n */\nexport const isGUID = ( guid ) => {\n  //const pattern = /^[0-9a-f]{4}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{4}$/i;\n  const pattern = /^[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$/i;\n  return pattern.test( guid );\n};\n\n/**\n * Find proper (first) item suited with input condition in an array.\n * @param {array} items -\tArray of searching target.\n * @param {func} predicate - Predicate function for describe which item is goingo to return.\n * @return {object} - Target item.\n */\nexport const findItem = ( items = [], predicate ) => {\n  predicate = ( predicate instanceof Function ) ? predicate : ( item ) => { return true; };\n\n  for( let i = 0; i < items.length; i++ ) {\n    let item = items[i];\n    if( predicate( item ) ) return item;\n  }\n};\n\n/**\n * Create namespace.\n * @param {string} s - namespace (e.g. 'RiibonUI.Ribbon').\n * @return {Object} - Namespace,\n */\t\nexport const namespace = ( s ) => {\n  var ns = typeof window !== 'undefined' && window !== null ? window : self;\n\n  var parts = s.split( '.' );\n  for( var i = 0; i < parts.length; i++ ) {\n    ns[ parts[i] ] = ns[ parts[i] ] || {};\n    ns = ns[ parts[i] ];\n  }\n\n  return ns;\n};\n\nconst utility = {\n  newGUID,\n  isGUID,\n  findItem,\n  namespace\n};\n\nexport default utility;\n","/**\n * @author yiskang / http://github.com/yiskang\n */\n\n'use strict';\n\nimport { newGUID } from '../utility';\n\nconst Id = Symbol( 'id' );\nconst Name = Symbol( 'name' );\nconst DisplayName = Symbol( 'displayName' );\nconst Enabled = Symbol( 'enabled' );\nconst Hidden = Symbol( 'hidden' );\n\n/**\n * RibbonBaseData\n * @class\n */\nexport default class RibbonBaseData {\n  /**\n   * RibbonBaseData constructor\n   * @param {string} name - The name of this instance used by the internal mechanism.\n   * @param {string} displayName - The name of this instance shown on the user interface, might be a localized string.\n   */\n  constructor( name, displayName ) {\n    if( typeof name !== 'string' ) throw 'name is required.';\n\n    this[Id] = newGUID();\n    this[Name] = name;\n    this[DisplayName] = ( typeof name !== 'string' ) ? name : displayName;\n    this[Enabled] = true;\n    this[Hidden] = false;\n  }\n\n  /**\n   * Instance uuid used by the internal mechanism.\n   * @return {string} - The UUID.\n   */\n  get id() {\n    return this[Id];\n  }\n\n  /**\n   * Instance name used by the internal mechanism.\n   * @return {string} - Instance name.\n   */\n  get name() {\n    return this[Name];\n  }\n\n  /**\n   * Instance name shown on the user interface, might be a localized string.\n   * @return {string} - Instance name.\n   */\n  get displayName() {\n    return this[DisplayName];\n  }\n\n  /**\n   * Instance name shown on the user interface, might be a localized string.\n   * @param {string} [name] - Instance name.\n   */\n  set displayName( name ) {\n    if( typeof name !== 'string' ) throw 'Input type should be a string.';\n\n    this[DisplayName] = name;\n  }\n\n  /**\n   * Instance edis/en-able status.\n   * @return {bool} - If false, make instance be disabled.\n   */\n  get enabled() {\n    return this[Enabled];\n  }\n\n  /**\n   * Instance edis/en-able status.\n   * @return {bool} [enabled = true] - If false, make instance be disabled.\n   */\n  set enabled( enabled = true ) {\n    this[Enabled] = ( enabled === true );\n  }\n\n  /**\n   * Instance is hidden or not.\n   * @return {bool} - If false, instance is going to disppear on the UI.\n   */\n  get hidden() {\n    return this[Hidden];\n  }\n\n  /**\n   * Instance edis/en-able status.\n   * @return {bool} [hidden = false] - If false, instance is going to disppear on the UI.\n   */\n  set hidden( hidden = false ) {\n    this[Hidden] = ( hidden === true );\n  }\n}\n","/**\n * @author yiskang / http://github.com/yiskang\n */\n\n'use strict';\n\nimport RibbonBaseData from './RibbonBaseData';\n\nconst\tActived = Symbol( 'actived' );\nconst Panels = Symbol( 'panels' );\n\n/**\n * RibbonTabData\n * @extends RibbonBaseData\n * @class\n */\nexport default class RibbonTabData extends RibbonBaseData {\n  /**\n   * RibbonTabData constructor\n   * @param {string} name - The name of this instance used by the internal mechanism.\n   * @param {string} displayName - The name of this instance shown on the user interface, might be a localized string.\n   */\n  constructor( name, displayName ) {\n    super( name, displayName );\n\n    this[Actived] = false;\n    this[Panels] = [];\n  }\n\n  /**\n   * Tab type.\n   * @return {string} - Tab type for identification.\n   */\n  get type() {\n    return 'ui-ribbon-tab-normal';\n  }\n\n  /**\n   * Tab actived state.\n   * @return {bool} - If true, it repsents tab is selected currently.\n   */\n  get actived() {\n    return this[Actived];\n  }\n\n  /**\n   * Tab actived state.\n   * @return {bool} [actived = false] - If true, it repsents tab is selected currently.\n   */\n  set actived( actived = false ) {\n    this[Actived] = ( actived === true );\n  }\n\n  /**\n   * Tab's children panels\n   * @return {RibbonPanelData[]} - Ribbon panel data.\n   */\n  get panels() {\n    return this[Panels];\n  }\n\n  /**\n   * Tab's children panels\n   * @param {RibbonPanelData[]} [panels = []] - Ribbon panel data.\n   */\n  set panels( panels = [] ) {\n    this[Panels] = panels;\n  }\n}\n","/**\n * @author yiskang / http://github.com/yiskang\n */\n\n'use strict';\n\nimport RibbonTabData from './RibbonTabData';\n\nconst Items = Symbol( 'items' );\n\n/**\n * RibbonAppTabData\n * @class\n */\nexport default class RibbonAppTabData extends RibbonTabData {\n  /**\n   * RibbonAppTabData constructor\n   * @param {string} [displayName = 'File'] - The name of this instance shown on the user interface, might be a localized string.\n   */\n  constructor( displayName = 'File' ) {\n    super( 'AppTab', displayName );\n\n    this[Items] = [];\n  }\n\n  /**\n   * Tab type.\n   * @return {string} - Tab type for identification.\n   * @override\n   */\n  get type() {\n    return 'ui-ribbon-tab-application';\n  }\n\n  /**\n   * Panel's children items.\n   * @return {RibbonItemData[]} - Ribbon item data.\n   */\n  get items() {\n    return this[Items];\n  }\n\n  /**\n   * Panel's children items.\n   * @return {RibbonItemData[]} [items = []]- Ribbon item data.\n   */\n  set items( items = [] ) {\n    this[Items] = items;\n  }\n}\n","/**\n * @author yiskang / http://github.com/yiskang\n */\n\n'use strict';\n\nimport RibbonBaseData from './RibbonBaseData';\n\n/**\n * RibbonTitlebarData\n * @class\n */\nexport default class RibbonTitlebarData extends RibbonBaseData {\n  /**\n   * RibbonTitlebarData constructor\n   * @param {string} title - The name of this instance shown on the user interface, might be a localized string.\n   */\n  constructor( title ) {\n    if( typeof title !== 'string' ) title = 'React Ribbon';\n\n    super( 'AppTitlebar', title );\n  }\n\n  /**\n   * App title.\n   * @return {string}\n   */\n  get title() {\n    return this.displayName;\n  }\n\n  /**\n   * App title\n   * @param {string} title\n   */\n  set title( title ) {\n    this.displayName = title;\n  }\n}\n","/**\n * @author yiskang / http://github.com/yiskang\n */\n\n'use strict';\n\nimport React from 'react';\nimport { newGUID } from './utility';\n\n/**\n * RibbonBase\n * @extends React.Component\n * @class\n */\nexport default class RibbonBase extends React.Component {\n  /**\n   * RibbonBase constructor\n   * @param {object} props - React component properties\n   */\n  constructor( props ) {\n    super( props );\n\n    let displayName = ( typeof props.displayName === 'string' ) ? props.displayName : name;\n    let enabled = ( props.enabled == false ) ? false : true;\n    let hidden = ( props.hidden === true );\n\n    this.state = {\n      displayName,\n      enabled,\n      hidden\n    };\n  }\n\n  /**\n   * Instance id for internal identification and HTML id attribute.\n   * @return {string} - The UUID.\n   */\n  get id() {\n    return this.props.id;\n  }\n\n  /**\n   * Instance name for internal identification.\n   * @return {string} - Instance name.\n   */\n  get name() {\n    return this.props.name;\n  }\n\n  /**\n   * Instance name shown on the user interface, might be a localized string.\n   * @return {string} - Instance name.\n   */\n  get displayName() {\n    return this.state.displayName;\n  }\n\n  /**\n   * Instance name shown on the user interface, might be a localized string.\n   * @param {string} - Instance name.\n   */\n  set displayName( name ) {\n    if( typeof name !== 'string' ) throw 'Input type should be a string.';\n\n    const prop = { displayName: name };\n    const onStateChange = this.props.onStateChange;\n    onStateChange && onStateChange( this.id, prop );\n\n    this.setState( prop );\n  }\n\n  /**\n   * Instance edis/en-able status.\n   * @return {bool} - If false, make instance be disabled.\n   */\n  get enabled() {\n    return this.state.enabled;\n  }\n\n  /**\n   * Instance edis/en-able status.\n   * @param {bool} [enabled = true] - If false, make instance be disabled.\n   */\n  set enabled( enabled = true ) {\n    if( this.hidden ) return;\n\n    const isEnabled = ( enabled === true );\n\n    const prop = { enabled: isEnabled };\n    const onStateChange = this.props.onStateChange;\n    onStateChange && onStateChange( this.id, prop );\n\n    this.setState( prop );\n  }\n\n  /**\n   * Instance is hidden or not.\n   * @return {bool} - If false, instance is going to disppear on the UI.\n   */\n  get hidden() {\n    return this.state.hidden;\n  }\n\n  /**\n   * Instance is hidden or not.\n   * @return {bool} [hidden = false]- If false, instance is going to disppear on the UI.\n   */\n  set hidden( hidden = false ) {\n    const isHidden = ( hidden === true );\n    const isEnabled = !isHidden;\n\n    const prop = { hidden: isHidden, enabled: isEnabled };\n    const onStateChange = this.props.onStateChange;\n    onStateChange && onStateChange( this.id, prop );\n\n    this.setState( prop );\n  }\n}\n\nRibbonBase.propTypes = {\n  id: React.PropTypes.string.isRequired,\n  name: React.PropTypes.string.isRequired,\n  displayName: React.PropTypes.string,\n  enabled: React.PropTypes.bool,\n  hidden: React.PropTypes.bool,\n  onStateChange: React.PropTypes.func\n};\n\nRibbonBase.defaultProps = {\n  id: newGUID(),\n  enabled: true,\n  hidden: false\n};\n","/**\n * @author yiskang / http://github.com/yiskang\n */\n\n'use strict';\n\nimport React from 'react';\nimport ClassNames from 'classnames';\nimport RibbonBase from './RibbonBase';\n\n/**\n * RibbonTitlebar\n * @class\n */\nexport default class RibbonTitlebar extends RibbonBase {\n  /**\n   * RibbonTitlebar constructor\n   * @param {object} props - React component properties\n   */\n  constructor( props ) {\n    super( props );\n  }\n\n  /**\n   * Ribbon main title\n   * @return {string} - Ribbon title\n   */\n  get title() {\n    return this.displayName;\n  }\n\n  /**\n   * Ribbon main title\n   * @param {string} title - Ribbon title\n   */\n  set title( title ) {\n    if( typeof title !== 'string' ) throw 'Input type should be a string.';\n\n    this.displayName = title;\n  }\n\n  /**\n   * Toggle titlebar be displayed or hiden.\n   */\n  toggleDisplay() {\n    this.hidden = ( !this.hidden );\n  }\n\n  render() {\n    const dynCSS = ClassNames({\n      'ui-ribbon-invisible': this.hidden\n    });\n\n    return (\n      <div className={ 'ui-ribbon-title ' + dynCSS }>\n        <span>{ this.title }</span>\n      </div>\n    );\n  }\n}\n\nRibbonTitlebar.propTypes = {\n  onStateChange: React.PropTypes.func\n};\n","/**\n * @author yiskang / http://github.com/yiskang\n */\n\n'use strict';\n\nimport React from 'react';\nimport RibbonBase from './RibbonBase';\nimport { newGUID } from './utility';\n\n/**\n * RibbonItem\n * @extends RibbonBase\n * @class\n */\nexport default class RibbonItem extends RibbonBase {\n  /**\n   * RibbonItem constructor\n   * @param {object} props - React component properties\n   */\n  constructor( props ) {\n    super( props );\n    \n    let actived = ( props.actived === true );\n\n    this.state = Object.assign( this.state, { actived } );\n  }\n\n  /**\n   * Item type.\n   * @return {string} - Item type for identification.\n   */\n  get type() {\n    return this.props.type;\n  }\n  \n  /**\n   * Item actived state.\n   * @return {bool} - If true, it repsents item is actived currently.\n   */\n  get actived() {\n    return this.state.actived;\n  }\n\n  /**\n   * Item actived state.\n   * @return {bool} [actived = false] - If true, it repsents item is actived currently.\n   */\n  set actived( actived = false ) {\n    const isActived = ( actived === true );\n    const prop = { actived: isActived };\n\n    const onStateChange = this.props.onStateChange;\n    onStateChange && onStateChange( this.id, prop );\n\n    this.setState( prop );\n  }\n}\n\nRibbonItem.propTypes = {\n  id: React.PropTypes.string.isRequired,\n  type: React.PropTypes.string.isRequired,\n  actived: React.PropTypes.bool,\n  onStateChange: React.PropTypes.func\n};\n\nRibbonItem.defaultProps = {\n  id: newGUID(),\n  type: 'ui-ribbon-panel-item',\n  actived: false\n};\n","/**\n * @author yiskang / http://github.com/yiskang\n */\n\n'use strict';\n\nimport React from 'react';\nimport ClassNames from 'classnames';\nimport RibbonBase from './RibbonBase';\n\n/**\n * RibbonTooltip\n * @class\n */\nexport default class RibbonTooltip extends RibbonBase {\n  /**\n   * RibbonTooltip constructor\n   * @param {object} props - React component properties\n   */\n  constructor( props ) {\n    super( props );\n\n    this.state = Object.assign( this.state,\n      {\n        content: props.content\n      });\n  }\n\n  /**\n   * Tooltip title.\n   * @return {string} - Ribbon tooltip title.\n   */\n  get title() {\n    return this.displayName;\n  }\n\n  /**\n   * Tooltip title.\n   * @return {string} title - Ribbon tooltip title.\n   */\n  set title( title ) {\n    if( typeof title !== 'string' ) throw 'Input type should be a string.';\n\n    this.displayName = title;\n  }\n\n  /**\n   * Tooltip content.\n   * @return {string} - Tooltip content.\n   */\n  get content() {\n    return this.state.content;\n  }\n\n  /**\n   * Tooltip content.\n   * @return {string} - Tooltip content.\n   */\n  set content( content = '' ) {\n    if( typeof content !== 'string' ) throw 'Input content should be a string.';\n\n    const prop = { content };\n    const onStateChange = this.props.onStateChange;\n    onStateChange && onStateChange( this.id, prop );\n\n    this.setState( prop );\n  }\n\n  /**\n   * Instance is hidden or not.\n   * @return {bool} - If false, instance is going to disppear on the UI.\n   * @override\n   */\n  get hidden() {\n    return this.state.hidden;\n  }\n\n  /**\n   * Instance is hidden or not.\n   * @return {bool} [hidden = false]- If false, instance is going to disppear on the UI.\n   * @override\n   */\n  set hidden( hidden = false ) {\n    const isHidden = ( hidden === true );\n\n    const prop = { hidden: isHidden };\n    const onStateChange = this.props.onStateChange;\n    onStateChange && onStateChange( this.id, prop );\n\n    this.setState( prop );\n  }\n\n  /**\n   * Make this tooltip appear.\n   */\n  show() {\n    this.hidden = false;\n  }\n\n  /**\n   * Make this tooltip disappear.\n   */\n  hide() {\n    this.hidden = true;\n  }\n\n  render() {\n    const dynCSS = ClassNames({\n      'ui-ribbon-tooltip-visible': ( this.hidden === false )\n    });\n\n    const createTitle = () => {\n      if( this.title )\n        return ( <strong>{ this.title }</strong> );\n    };\n\n    const createContent = () => {\n      if( this.content )\n        return ( <p>{ this.content }</p> );\n    };\n\n    return (\n      <div id={ this.id } className={ 'ui-ribbon-tooltip ' + dynCSS }>\n        { createTitle() }\n        { createContent() }\n      </div>\n    );\n  }\n}\n\nRibbonTooltip.propTypes = {\n  content: React.PropTypes.string,\n  onStateChange: React.PropTypes.func\n};\n","/**\n * @author yiskang / http://github.com/yiskang\n */\n\n'use strict';\n\nimport RibbonBaseData from './RibbonBaseData';\n\nconst Content = Symbol( 'content' );\n\n/**\n * RibbonTooltipData\n * @extends RibbonBaseData\n * @class\n */\nexport default class RibbonTooltipData extends RibbonBaseData {\n  /**\n   * RibbonTooltipData constructor\n   * @param {string} name - The name of this instance used by the internal mechanism.\n   * @param {string} displayName - The name of this instance shown on the user interface, might be a localized string.\n   */\n  constructor( title, content ) {\n    if( typeof title !== 'string' ) throw 'Tooltip title cannot be empty.';\n\n    super( 'RibbonTooltip', title );\n\n    this[Content] = ( typeof content !== 'string' ) ? undefined : content;\n    this.hidden = true;\n  }\n\n  /**\n   * App title.\n   * @return {string}\n   */\n  get title() {\n    return this.displayName;\n  }\n\n  /**\n   * App title\n   * @param {string} title\n   */\n  set title( title ) {\n    this.displayName = title;\n  }\n\n  /**\n   * Tooltip content.\n   * @return {string} - Tooltip content.\n   */\n  get content() {\n    return this[Content];\n  }\n\n  /**\n   * Tooltip content.\n   * @return {string} - Tooltip content.\n   */\n  set content( content ) {\n    if( typeof content !== 'string' ) throw 'Input content should be a type of string.';\n\n    this[Content] = content;\n  }\n}\n","/**\n * @author yiskang / http://github.com/yiskang\n */\n\n'use strict';\n\nimport React from 'react';\nimport ClassNames from 'classnames';\nimport RibbonItem from './RibbonItem';\nimport RibbonTooltip from './RibbonTooltip';\nimport RibbonTooltipData from './data/RibbonTooltipData';\nimport { newGUID } from './utility';\n\n/**\n * RibbonButton\n * @extends RibbonItem\n * @class\n */\nexport default class RibbonButton extends RibbonItem {\n  /**\n   * RibbonButton constructor\n   * @param {object} props - React component properties\n   */\n  constructor( props ) {\n    super( props );\n\n    let icon = props.icon;\n    let tooltip = props.tooltip;\n    let toggleable = ( props.toggleable === true );\n    let clickHandler = props.clickHandler;\n\n    this.state = Object.assign( this.state,\n      {\n        icon,\n        tooltip,\n        toggleable,\n        clickHandler\n      });\n\n    this.handleClick = this.handleClick.bind( this );\n    this.handleMouseOver = this.handleMouseOver.bind( this );\n    this.handleMouseOut = this.handleMouseOut.bind( this );\n  }\n\n  /**\n   * Button role.\n   * @return {string}\n   */\n  get role() {\n    return this.props.role;\n  }\n\n  /**\n   * Button icon.\n   * @return {string} - Button icon path.\n   */\n  get icon() {\n    return this.state.icon;\n  }\n\n  /**\n   * Button icon.\n   * @return {string} icon - Button icon path.\n   */\n  set icon( icon ) {\n    if( typeof icon !== 'string' ) throw 'Input type should be a string.';\n\n    const prop = { icon };\n    const onStateChange = this.props.onStateChange;\n    onStateChange && onStateChange( this.id, prop );\n\n    this.setState( prop );\n  }\n\n  /**\n   * Button toggleable state.\n   * @return {bool} - If true, it repsents button is toggled currently.\n   */\n  get toggleable() {\n    return this.state.toggleable;\n  }\n\n  /**\n   * Button toggleable state.\n   * @return {bool} [toggleable = false] - If true, it repsents button is toggled currently.\n   */\n  set toggleable( toggleable = false ) {\n    const isToggleable = ( toggleable === true );\n\n    const prop = { toggleable: isToggleable };\n    const onStateChange = this.props.onStateChange;\n    onStateChange && onStateChange( this.id, prop );\n\n    this.setState( prop );\n  }\n\n  /**\n   * Button click eveent handler.\n   * @return {Function} - Click eveent handler.\n   */\n  get clickHandler() {\n    return this.state.clickHandler;\n  }\n\n  /**\n   * Button click eveent handler.\n   * @param {Function} handler - Click eveent handler.\n   */\n  set clickHandler( handler ) {\n    if( !(handler instanceof Function) )\n      throw 'Input clicking handler is invalid.';\n\n    const prop = { clickHandler: handler };\n    const onStateChange = this.props.onStateChange;\n    onStateChange && onStateChange( this.id, prop );\n\n    this.setState( prop );\n  }\n\n  /**\n   * Button tooltip comopent.\n   * @return {RibbonTooltip} - Rendered RibbonTooltip component.\n   */\n  get tooltip() {\n    return this.refs.tooltip;\n  }\n\n  set tooltip( tooltip ) {\n    if( !(tooltip instanceof RibbonTooltipData) )\n      throw '[RibbonButton] Input tooltip data is invalid.';\n\n    const prop = { tooltip };\n    const onStateChange = this.props.onStateChange;\n    onStateChange && onStateChange( this.id, prop );\n\n    this.setState( prop );\n  }\n\n  /**\n   * Create tooltip\n   * @return {RibbonTooltip} - RibbonTooltip instance (not rendered).\n   */\n  createTooltip() {\n    const scope = this;\n    const data = this.state.tooltip;\n    if( !data ) return;\n\n    if( !(data instanceof RibbonTooltipData) && data )\n      return console.log( '%c[RibbonButton] Input tooltip data is invalid.', 'color:red;' );\n\n    const updateTooltip = ( id, data ) => {\n      let tooltip = scope.state.tooltip;\n\n      if( tooltip.id !== id ) return;\n\n      Object.assign( tooltip, data );\n\n      const prop = { tooltip };\n      const onStateChange = scope.props.onStateChange;\n      onStateChange && onStateChange( scope.id, prop );\n\n      scope.setState( prop );\n    };\n\n    return (\n      <RibbonTooltip\n        key={ data.id }\n        id={ data.id }\n        name={ data.name }\n        displayName={ data.title }\n        content={ data.content }\n        enabled={ data.enabled }\n        hidden={ data.hidden }\n        onStateChange={ updateTooltip }\n        ref=\"tooltip\" />\n    );\n  }\n\n  /**\n   * Button clicking event handler.\n   */\n  handleClick( event ) {\n    if( !this.enabled ) return;\n\n    const clickHandler = this.props.clickHandler;\n    clickHandler && clickHandler( event );\n  }\n\n  /**\n   * Button hovering over event handler.\n   */\n  handleMouseOver() {\n    const tooltip = this.tooltip;\n    tooltip && tooltip.show();\n  }\n\n  /**\n   * Button hovering out event handler.\n   */\n  handleMouseOut() {\n    const tooltip = this.tooltip;\n    tooltip && tooltip.hide();\n  }\n\n  render() {\n    const outerDynCSS = ClassNames({\n      'ui-ribbon-disabled': ( this.enabled === false ),\n      'ui-ribbon-invisible': this.hidden\n    });\n\n    const innerDynCSS = ClassNames({\n      'ui-ribbon-active': this.actived\n    });\n\n    const formatLegend = ( legend ) => {\n      const texts = legend.split( '\\\\n' );\n      let guid = newGUID();\n      let result = <span key={ guid } id={ guid }>{ legend }</span>;\n\n      if( texts.length > 1 ) {\n        result = texts.map(( txt ) => {\n          let guid = newGUID();\n          return (\n              <span key={ guid } id={ guid }>\n                { txt }\n                <br />\n              </span>\n          );\n        });\n      }\n      return result;\n    };\n\n    return (\n      <a\n        key={ this.id }\n        id={ this.id }\n        className={ outerDynCSS }\n        onClick={ this.handleClick }\n        onMouseOver={ this.handleMouseOver }\n        onMouseOut={ this.handleMouseOut } >\n\n        <div\n          role={ this.role }\n          className={ 'ui-ribbon-button ' + this.type + ' ui-ribbon-relative ui-ribbon-inline ui-ribbon-center ' + innerDynCSS } >\n\n          <img src={ this.icon } />\n          <div className=\"ui-ribbon-button-legend\">\n            { formatLegend( this.displayName ) }\n          </div>\n          { this.createTooltip() }\n        </div>\n      </a>\n    );\n  }\n}\n\nRibbonButton.propTypes = {\n  id: React.PropTypes.string.isRequired,\n  role: React.PropTypes.string.isRequired,\n  type: React.PropTypes.string.isRequired,\n  icon: React.PropTypes.string,\n  tooltip: React.PropTypes.instanceOf( RibbonTooltipData ),\n  toggleable: React.PropTypes.bool,\n  clickHandler: React.PropTypes.func,\n  onStateChange: React.PropTypes.func\n};\n\nRibbonButton.defaultProps = {\n  id: newGUID(),\n  role: 'ui-ribbon-button',\n  type: 'ui-ribbon-button',\n  icon: '',\n  toggleable: false\n};\n","/**\n * @author yiskang / http://github.com/yiskang\n */\n\n'use strict';\n\nimport React from 'react';\nimport ClassNames from 'classnames';\nimport RibbonButton from './RibbonButton';\n\n/**\n * RibbonPushButton\n * @class\n */\nexport default class RibbonPushButton extends RibbonButton {\n  /**\n   * RibbonPushButton constructor\n   * @param {object} props - React component properties\n   */\n  constructor( props ) {\n    super( props );\n  }\n\n  render() {\n    const dynCSS = ClassNames({\n      'ui-ribbon-disabled': ( this.enabled === false ),\n      'ui-ribbon-invisible': this.hidden\n    });\n\n    return (\n      <div className={ 'ui-ribbon-button-group ui-ribbon-inline ' + dynCSS }>\n        { super.render() }\n      </div>\n    );\n  }\n}\n\nRibbonPushButton.propTypes = {\n  type: React.PropTypes.string.isRequired,\n  onStateChange: React.PropTypes.func\n};\n\nRibbonPushButton.defaultProps = {\n  type: 'ui-ribbon-button-big'\n};\n","/**\n * @author yiskang / http://github.com/yiskang\n */\n\n'use strict';\n\nimport React from 'react';\nimport RibbonPushButton from './RibbonPushButton';\n\n/**\n * RibbonToggleButton\n * @class\n */\nexport default class RibbonToggleButton extends RibbonPushButton {\n  /**\n   * RibbonToggleButton constructor\n   * @param {object} props - React component properties\n   */\n  constructor( props ) {\n    super( props );\n\n    this.handleClick = this.handleClick.bind( this );\n  }\n\n  /**\n   * Button clicking event handler.\n   * @override\n   */\n  handleClick( event ) {\n    if( !this.enabled ) return;\n\n    if( this.toggleable ) {\n      const isActived = !this.actived;\n\n      const prop = { actived: isActived };\n      const onStateChange = this.props.onStateChange;\n      onStateChange && onStateChange( this.id, prop );\n\n      this.setState( prop );\n\n      // For de/activating button by changing button's actived property.\n      const onGroupCurrentChange = this.props.onGroupCurrentChange;\n      onGroupCurrentChange && onGroupCurrentChange();\n    }\n\n    const clickHandler = this.props.clickHandler;\n    clickHandler && clickHandler( event );\n  }\n}\n\nRibbonToggleButton.propTypes = {\n  type: React.PropTypes.string.isRequired,\n  role: React.PropTypes.string.isRequired,\n  onGroupCurrentChange: React.PropTypes.func,\n  onStateChange: React.PropTypes.func\n};\n\nRibbonToggleButton.defaultProps = {\n  role: 'ui-ribbon-button-toggle',\n  type: 'ui-ribbon-button-big'\n};\n","/**\n * @author yiskang / http://github.com/yiskang\n */\n\n'use strict';\n\nimport RibbonBaseData from './RibbonBaseData';\n\nconst\tActived = Symbol( 'actived' );\n\n/**\n * RibbonItemData\n * @extends RibbonBaseData\n * @class\n */\nexport default class RibbonItemData extends RibbonBaseData {\n  /**\n   * RibbonItemData constructor\n   * @param {string} name - The name of this instance used by the internal mechanism.\n   * @param {string} displayName - The name of this instance shown on the user interface, might be a localized string.\n   */\n  constructor( name, displayName ) {\n    super( name, displayName );\n\n    this[Actived] = false;\n  }\n\n  /**\n   * Item type.\n   * @return {string} - Item type for identification.\n   */\n  get type() {\n    return 'ui-ribbon-panel-item';\n  }\n\n  /**\n   * Item actived state.\n   * @return {bool} - If true, it repsents item is actived currently.\n   */\n  get actived() {\n    return this[Actived];\n  }\n\n  /**\n   * Item actived state.\n   * @return {bool} [actived = false] - If true, it repsents item is actived currently.\n   */\n  set actived( actived = false ) {\n    this[Actived] = ( actived === true );\n  }\n}\n","/**\n * @author yiskang / http://github.com/yiskang\n */\n\n'use strict';\n\nimport RibbonItemData from './RibbonItemData';\nimport RibbonTooltipData from './RibbonTooltipData';\n\nconst\tIcon = Symbol( 'icon' );\nconst Tooltip = Symbol( 'tooltip' );\nconst Toggleable = Symbol( 'toggleable' );\nconst ClickHandler = Symbol( 'clickHandler' );\n\n/**\n * RibbonButtonData\n * @extends RibbonItemData\n * @class\n */\nexport default class RibbonButtonData extends RibbonItemData {\n  /**\n   * RibbonButtonData constructor\n   * @param {string} name - The name of this instance used by the internal mechanism.\n   * @param {string} displayName - The name of this instance shown on the user interface, might be a localized string.\n   */\n  constructor( name, displayName ) {\n    super( name, displayName );\n\n    this[Icon] = '';\n    this[Tooltip] = undefined;\n    this[Toggleable] = false;\n    this[ClickHandler] = undefined;\n  }\n\n  /**\n   * Button role.\n   * @return {string}\n   * @override\n   */\n  get role() {\n    return 'ui-ribbon-button';\n  }\n\n  /**\n   * Button icon path.\n   * @return {string} - Button icon full path or relative path.\n   */\n  get icon() {\n    return this[Icon];\n  }\n\n  /**\n   * Button icon path.\n   * @param {string} icon - Button icon full path or relative path.\n   */\n  set icon( icon ) {\n    if( typeof icon !== 'string' ) throw 'Input type should be a string.';\n\n    this[Icon] = icon;\n  }\n\n  /**\n   * Button tooltip data.\n   * @return {RibbonTooltipData} - Ribbon button tooltip data.\n   */\n  get tooltip() {\n    return this[Tooltip];\n  }\n\n  /**\n   * Button tooltip data.\n   * @param {RibbonTooltipData} tooltip - Ribbon button tooltip data.\n   */\n  set tooltip( tooltip ) {\n    if( !(tooltip instanceof RibbonTooltipData) )\n      throw 'Input data is not a type of RibbonTooltipData.';\n\n    this[Tooltip] = tooltip;\n  }\n\n  /**\n   * Button toggleable state.\n   * @return {bool} - If true, it repsents button is toggled currently.\n   */\n  get toggleable() {\n    return this[Toggleable];\n  }\n\n  /**\n   * Button toggleable state.\n   * @return {bool} [toggleable = false] - If true, it repsents button is toggled currently.\n   */\n  set toggleable( toggleable = false ) {\n    this[Toggleable] = ( toggleable === true );\n  }\n\n  /**\n   * Button\tclick eveent handler.\n   * @return {Function} - Click eveent handler.\n   */\n  get clickHandler() {\n    return this[ClickHandler];\n  }\n\n  /**\n   * Button\tclick eveent handler.\n   * @param {Function} handler - Click eveent handler.\n   */\n  set clickHandler( handler ) {\n    if( !(handler instanceof Function) )\n      throw 'Input clicking handler is invalid.';\n\n    this[ClickHandler] = handler;\n  }\n}\n","/**\n * @author yiskang / http://github.com/yiskang\n */\n\n'use strict';\n\nimport RibbonButtonData from './RibbonButtonData';\n\n/**\n * RibbonPushButtonData\n * @extends RibbonButtonData\n * @class\n */\nexport default class RibbonPushButtonData extends RibbonButtonData {\n  /**\n   * RibbonPushButtonData constructor\n   * @param {string} name - The name of this instance used by the internal mechanism.\n   * @param {string} displayName - The name of this instance shown on the user interface, might be a localized string.\n   */\n  constructor( name, displayName ) {\n    super( name, displayName );\n  }\n\n  /**\n   * Button type.\n   * @return {string} -\tButton type for identification.\n   * @override\n   */\n  get type() {\n    return 'ui-ribbon-button-big';\n  }\n}\n","/**\n * @author yiskang / http://github.com/yiskang\n */\n\n'use strict';\n\nimport RibbonPushButtonData from './RibbonPushButtonData';\n\n/**\n * RibbonToggleButtonData\n * @extends RibbonPushButtonData\n * @class\n */\nexport default class RibbonToggleButtonData extends RibbonPushButtonData {\n  /**\n   * RibbonToggleButtonData constructor\n   * @param {string} name - The name of this instance used by the internal mechanism.\n   * @param {string} displayName - The name of this instance shown on the user interface, might be a localized string.\n   */\n  constructor( name, displayName ) {\n    super( name, displayName );\n  }\n\n  /**\n   * Button role.\n   * @return {string}\n   * @override\n   */\n  get role() {\n    return 'ui-ribbon-button-toggle';\n  }\n\n  /**\n   * Button toggleable state.\n   * @return {bool} - If true, it repsents button is toggled currently.\n   * @override\n   */\n  get toggleable() {\n    return true;\n  }\n}\n","/**\n * @author yiskang / http://github.com/yiskang\n */\n\n'use strict';\n\nimport React from 'react';\nimport ClassNames from 'classnames';\nimport RibbonItem from './RibbonItem';\nimport RibbonButton from './RibbonButton';\nimport RibbonPushButton from './RibbonPushButton';\nimport RibbonToggleButton from './RibbonToggleButton';\nimport RibbonItemData from './data/RibbonItemData';\nimport RibbonButtonData from './data/RibbonButtonData';\nimport RibbonPushButtonData from './data/RibbonPushButtonData';\nimport RibbonToggleButtonData from './data/RibbonToggleButtonData';\nimport { newGUID } from './utility';\n\nconst Items = Symbol( 'items' );\n\n/**\n * RibbonGroup\n * @extends RibbonItem\n * @class\n */\nexport default class RibbonGroup extends RibbonItem {\n  /**\n   * RibbonGroup constructor\n   * @param {object} props - React component properties\n   */\n  constructor( props ) {\n    super( props );\n\n    this.state = Object.assign( this.state,\n      {\n        items: [].concat( props.items )\n      });\n\n    this[Items] = [];\n  }\n\n  /**\n   * Panel's children items\n   * @return {[RibbonButtonData]} - Ribbon item data.\n   */\n  get items() {\n    return this[Items];\n  }\n\n  /**\n   * Instance edis/en-able status.\n   * @return {bool} - If false, make instance be disabled.\n   */\n  get enabled() {\n    return super.enabled;\n  }\n\n  /**\n   * Instance edis/en-able status.\n   * @param {bool} [enabled = true] - If false, make instance be disabled.\n   */\n  set enabled( enabled = true ) {\n    if( this.hidden ) return;\n\n    const isEnabled = ( enabled === true );\n    super.enabled = isEnabled;\n\n    // Cascaded applying changes\n    this.items.map( ( item ) => {\n      item.enabled = isEnabled;\n    });\n  }\n\n  /**\n   * Instance is hidden or not.\n   * @return {bool} - If false, instance is going to disppear on the UI.\n   */\n  get hidden() {\n    return super.hidden;\n  }\n\n  /**\n   * Instance is hidden or not.\n   * @return {bool} [hidden = false]- If false, instance is going to disppear on the UI.\n   */\n  set hidden( hidden = false ) {\n    const isHidden = ( hidden === true );\n    super.hidden = isHidden;\n\n    // Cascaded applying changes\n    this.items.map( ( item ) => {\n      item.hidden = isHidden;\n    });\n  }\n\n  /**\n   * Add new RibbonButton by given data.\n   * @param {RibbonButtonData} itemData - Ribbon button data for creating new item in the RibbonGroup.\n   * @return {RibbonButton} - Rendered RibbonButton component.\n   */\n  addItem( itemData ) {\n    const idx = this.items.findIndex( ( item ) => ( item.id == itemData.id || item.name === itemData.name ) );\n    if( !(itemData instanceof RibbonButtonData) || idx !== -1 )\n      return console.log( '%c[RibbonGroup] Input itemData is invalid or duplicate.', 'color:red;' );\n\n    const items = this.state.items.concat( itemData );\n\n    const prop = { items };\n    const onStateChange = this.props.onStateChange;\n    onStateChange && onStateChange( this.id, prop );\n\n    this.setState( prop );\n\n    return this.items[ this.items.length -1 ];\n  }\n\n  componentWillUpdate( nextProps, nextState ) {\n    this[Items].length = 0;\n  }\n\n  render() {\n    const scope = this;\n    const items = this.state.items;\n\n    const updateItem = ( id, data ) => {\n      let items = scope.state.items;\n      const item = items.find( ( item ) => item.id === id );\n      if( !item ) return;\n\n      Object.assign( item, data );\n\n      const prop = { items };\n      const onStateChange = scope.props.onStateChange;\n      onStateChange && onStateChange( scope.id, prop );\n\n      scope.setState( prop );\n    };\n\n    const createItem = ( item ) => {\n      let result;\n      if( item.type === 'ui-ribbon-button-big' ) {\n        const RibbonPushButtonLike = ( item.role === 'ui-ribbon-button-toggle' ) ? RibbonToggleButton : RibbonPushButton;\n        result = (\n          <RibbonPushButtonLike\n            key={ item.id }\n            id={ item.id }\n            name={ item.name }\n            displayName={ item.displayName }\n            enabled={ item.enabled }\n            hidden={ item.hidden }\n            type={ item.type }\n            actived={ item.actived }\n            icon={ item.icon }\n            tooltip={ item.tooltip }\n            toggleable={ item.toggleable }\n            clickHandler={ item.clickHandler }\n            onStateChange={ updateItem }\n            ref={ ( c ) => { if( c ) scope.items.push( c ); } } />\n          );\n      }\n\n      return result;\n    };\n\n    const dynCSS = ClassNames({\n      'ui-ribbon-disabled': ( this.enabled === false ),\n      'ui-ribbon-invisible': this.hidden\n    });\n\n    return (\n      <div\n        key={ this.id }\n        id={ this.id }\n        className={ 'ui-ribbon-group ui-ribbon-inline ' + dynCSS }>\n\n        { items.map( createItem ) }\n      </div>\n    );\n  }\n}\n\nRibbonGroup.propTypes = {\n  id: React.PropTypes.string.isRequired,\n  items: React.PropTypes.arrayOf( React.PropTypes.instanceOf( RibbonButtonData ) ),\n  onStateChange: React.PropTypes.func\n};\n\nRibbonGroup.defaultProps = {\n  id: newGUID(),\n  items: []\n};\n","/**\n * @author yiskang / http://github.com/yiskang\n */\n\n'use strict';\n\nimport React from 'react';\nimport ClassNames from 'classnames';\nimport RibbonGroup from './RibbonGroup';\nimport RibbonToggleButton from './RibbonToggleButton';\nimport RibbonToggleButtonData from './data/RibbonToggleButtonData';\nimport { newGUID } from './utility';\n\nconst Current = Symbol( 'current' );\nconst Default = Symbol( 'default' );\n\n/**\n * RibbonRadioButtonGroup\n * @extends RibbonGroup\n * @class\n */\nexport default class RibbonRadioButtonGroup extends RibbonGroup {\n  /**\n   * RibbonRadioButtonGroup constructor\n   * @param {object} props - React component properties\n   */\n  constructor( props ) {\n    super( props );\n\n    this[Current] = undefined;\n    this[Default] = undefined;\n  }\n\n  /**\n   * Current actived RibbonToggleButton.\n   * @return {string} - RibbonToggleButton id.\n   */\n  get current() {\n    return this[Current];\n  }\n\n  /**\n   * Current actived RibbonToggleButton.\n   * @param {string} id - RibbonToggleButton id.\n   */\n  set current( id ) {\n    const current = this.items.find( ( item ) => item.id === id && item.enabled );\n    if( !current ) throw '[RibbonRadioButtonGroup] Input id not exists or disabled.';\n\n    current.actived = true;\n    this[Current] = id;\n\n    if( !this.default )\n      this.default = id;\n\n    this.items.map( ( item ) => {\n      if( item.id !== id ) item.actived = false;\n    });\n  }\n\n  /**\n   * Default actived RibbonToggleButton.\n   * @return {string} - RibbonToggleButton id.\n   */\n  get default() {\n    return this[Default];\n  }\n\n  /**\n   * Default actived RibbonToggleButton.\n   * @param {string} - RibbonToggleButton id.\n   */\n  set default( id ) {\n    const item = this.items.find( ( item ) => item.id === id && item.enabled );\n    if( !item ) throw '[RibbonRadioButtonGroup] Input id not exists or disabled.';\n\n    this[Default] = id;\n\n    if( !this.current )\n      this.current = id;\n  }\n\n  /**\n   * Reset current item to the default.\n   */\n  resetCurrent() {\n    this.current = this.default;\n  }\n\n  /**\n   * Add new RibbonToggleButton by given data.\n   * @param {RibbonToggleButtonData} itemData - Ribbon button data for creating new item in the RibbonRadioButtonGroup.\n   * @return {RibbonToggleButton} - Rendered RibbonToggleButton component.\n   * @override\n   */\n  addItem( itemData ) {\n    if( !(itemData instanceof RibbonToggleButtonData) )\n      return console.log( '%c[RibbonGroup] Input itemData is invalid or duplicate.', 'color:red;' );\n\n    const item = super.addItem( itemData );\n\n    if( !this.default )\n      this.default = item.id;\n\n    return item;\n  }\n\n  render() {\n    const scope = this;\n    const items = this.state.items;\n\n    const updateCurrentItem = ( id ) => {\n      if( typeof id !== 'string' ) return;\n\n      scope.current = id;\n    };\n\n    const updateItem = ( id, data ) => {\n      let items = scope.state.items;\n      const item = items.find( ( item ) => item.id === id );\n      if( !item ) return;\n\n      Object.assign( item, data );\n\n      const prop = { items };\n      const onStateChange = scope.props.onStateChange;\n      onStateChange && onStateChange( scope.id, prop );\n\n      scope.setState( prop );\n    };\n\n    const createItem = ( item ) => {\n      return (\n        <RibbonToggleButton\n          key={ item.id }\n          id={ item.id }\n          name={ item.name }\n          displayName={ item.displayName }\n          enabled={ item.enabled }\n          hidden={ item.hidden }\n          type={ item.type }\n          actived={ item.actived }\n          icon={ item.icon }\n          tooltip={ item.tooltip }\n          toggleable={ item.toggleable }\n          clickHandler={ item.clickHandler }\n          onGroupCurrentChange={ () => { updateCurrentItem( item.id ); } }\n          onStateChange={ updateItem }\n          ref={ ( c ) => { if( c ) scope.items.push( c ); } } />\n      );\n    };\n\n    const dynCSS = ClassNames({\n      'ui-ribbon-disabled': ( this.enabled === false ),\n      'ui-ribbon-invisible': this.hidden\n    });\n\n    return (\n      <div\n        key={ this.id }\n        id={ this.id }\n        className={ 'ui-ribbon-group ui-ribbon-inline ' + dynCSS }>\n\n        { items.map( createItem ) }\n      </div>\n    );\n  }\n}\n\nRibbonGroup.propTypes = {\n  id: React.PropTypes.string.isRequired,\n  items: React.PropTypes.arrayOf( React.PropTypes.instanceOf( RibbonToggleButtonData ) ),\n  onStateChange: React.PropTypes.func\n};\n\nRibbonGroup.defaultProps = {\n  id: newGUID(),\n  items: []\n};\n","/**\n * @author yiskang / http://github.com/yiskang\n */\n\n'use strict';\n\nimport RibbonItemData from './RibbonItemData';\n\nconst Items = Symbol( 'items' );\n\n/**\n * RibbonGroupData\n * @extends RibbonItemData\n * @class\n */\nexport default class RibbonGroupData extends RibbonItemData {\n  /**\n   * RibbonGroupData constructor\n   * @param {string} name - The name of this instance used by the internal mechanism.\n   * @param {string} displayName - The name of this instance shown on the user interface, might be a localized string.\n   */\n  constructor( name, displayName ) {\n    super( name, displayName );\n\n    this[Items] = [];\n  }\n\n  /**\n   * Button type.\n   * @return {string} -\tButton type for identification.\n   * @override\n   */\n  get type() {\n    return 'ui-ribbon-group';\n  }\n\n  /**\n   * Panel's children items.\n   * @return {RibbonItemData[]} - Ribbon item data.\n   */\n  get items() {\n    return this[Items];\n  }\n\n  /**\n   * Panel's children items.\n   * @return {RibbonItemData[]} [items = []]- Ribbon item data.\n   */\n  set items( items = [] ) {\n    this[Items] = items;\n  }\n}\n","/**\n * @author yiskang / http://github.com/yiskang\n */\n\n'use strict';\n\nimport RibbonGroupData from './RibbonGroupData';\n\n/**\n * RibbonRadioButtonGroupData\n * @extends RibbonGroupData\n * @class\n */\nexport default class RibbonRadioButtonGroupData extends RibbonGroupData {\n  /**\n   * RibbonRadioButtonGroupData constructor\n   * @param {string} name - The name of this instance used by the internal mechanism.\n   * @param {string} displayName - The name of this instance shown on the user interface, might be a localized string.\n   */\n  constructor( name, displayName ) {\n    super( name, displayName );\n  }\n\n  /**\n   * Button type.\n   * @return {string} -\tButton type for identification.\n   * @override\n   */\n  get type() {\n    return 'ui-ribbon-radio-group';\n  }\n}\n","/**\n * @author yiskang / http://github.com/yiskang\n */\n\n'use strict';\n\nimport React from 'react';\nimport ClassNames from 'classnames';\nimport RibbonBase from './RibbonBase';\nimport RibbonItem from './RibbonItem';\nimport RibbonButton from './RibbonButton';\nimport RibbonPushButton from './RibbonPushButton';\nimport RibbonToggleButton from './RibbonToggleButton';\nimport RibbonGroup from './RibbonGroup';\nimport RibbonRadioButtonGroup from './RibbonRadioButtonGroup';\nimport RibbonItemData from './data/RibbonItemData';\nimport RibbonButtonData from './data/RibbonButtonData';\nimport RibbonPushButtonData from './data/RibbonPushButtonData';\nimport RibbonToggleButtonData from './data/RibbonToggleButtonData';\nimport RibbonGroupData from './data/RibbonGroupData';\nimport RibbonRadioButtonGroupData from './data/RibbonRadioButtonGroupData';\nimport { newGUID } from './utility';\n\nconst Items = Symbol( 'items' );\n\n/**\n * RibbonPanel\n * @extends RibbonBase\n * @class\n */\nexport default class RibbonPanel extends RibbonBase {\n  /**\n   * RibbonPanel constructor\n   * @param {object} props - React component properties\n   */\n  constructor( props ) {\n    super( props );\n\n    this.state = Object.assign( this.state,\n      {\n        items: [].concat( props.items )\n      });\n\n    this[Items] = [];\n  }\n\n  /**\n   * Panel has seperator or not.\n   * @return {bool} - If true, panel will be seperated with other panels by a panel seperator.\n   */\n  get seperator() {\n    return this.props.seperator;\n  }\n\n  /**\n   * Panel's children items\n   * @return {[RibbonItemData]} - Ribbon item data.\n   */\n  get items() {\n    return this[Items];\n  }\n\n  /**\n   * Instance edis/en-able status.\n   * @return {bool} - If false, make instance be disabled.\n   */\n  get enabled() {\n    return super.enabled;\n  }\n\n  /**\n   * Instance edis/en-able status.\n   * @param {bool} [enabled = true] - If false, make instance be disabled.\n   */\n  set enabled( enabled = true ) {\n    if( this.hidden ) return;\n\n    const isEnabled = ( enabled === true );\n    super.enabled = isEnabled;\n\n    // Cascaded applying changes\n    this.items.map( ( item ) => {\n      item.enabled = isEnabled;\n    });\n  }\n\n  /**\n   * Instance is hidden or not.\n   * @return {bool} - If false, instance is going to disppear on the UI.\n   */\n  get hidden() {\n    return super.hidden;\n  }\n\n  /**\n   * Instance is hidden or not.\n   * @return {bool} [hidden = false]- If false, instance is going to disppear on the UI.\n   */\n  set hidden( hidden = false ) {\n    const isHidden = ( hidden === true );\n    super.hidden = isHidden;\n\n    // Cascaded applying changes\n    this.items.map( ( item ) => {\n      item.hidden = isHidden;\n    });\n  }\n\n  /**\n   * Add new RibbonItem by given data.\n   * @param {RibbonItemData} itemData - Ribbon item data for creating new item on the panel.\n   * @return {RibbonItem} - Rendered RibbonItem component.\n   */\n  addItem( itemData ) {\n    const idx = this.items.findIndex( ( item ) => ( item.id == itemData.id || item.name === itemData.name ) );\n    if( !(itemData instanceof RibbonItemData) || idx !== -1 )\n      return console.log( '%c[RibbonPanel] Input itemData is invalid or duplicate.', 'color:red;' );\n\n    const items = this.state.items.concat( itemData );\n\n    const prop = { items };\n    const onStateChange = this.props.onStateChange;\n    onStateChange && onStateChange( this.id, prop );\n\n    this.setState( prop );\n\n    return this.items[ this.items.length -1 ];\n  }\n\n  componentWillUpdate( nextProps, nextState ) {\n    this[Items].length = 0;\n  }\n\n  render() {\n    const scope = this;\n    const items = this.state.items;\n\n    const outerDynCSS = ClassNames({\n      'ui-ribbon-disabled': ( this.enabled === false ),\n      'ui-ribbon-invisible': this.hidden,\n      'ui-ribbon-inline': ( this.hidden === false )\n    });\n\n    const innerDynCSS = ClassNames({\n      'ui-ribbon-empty': ( items.length === 0 ),\n      'ui-riibon-panel-single-btn': ( items.length === 1 ),\n    });\n\n    const legendDynCSS = ClassNames({\n      'ui-ribbon-disabled': ( this.enabled === false )\n    });\n\n    const updateItem = ( id, data ) => {\n      let items = scope.state.items;\n      const item = items.find( ( item ) => item.id === id );\n      if( !item ) return;\n\n      Object.assign( item, data );\n\n      const prop = { items };\n      const onStateChange = scope.props.onStateChange;\n      onStateChange && onStateChange( scope.id, prop );\n\n      scope.setState( prop );\n    };\n\n    const createItem = ( item ) => {\n      let result;\n      if( item.type === 'ui-ribbon-radio-group' || item.type === 'ui-ribbon-group' ) {\n        const RibbonGroupLike = ( item.type === 'ui-ribbon-group' ) ? RibbonGroup : RibbonRadioButtonGroup;\n        result = (\n          <RibbonGroupLike\n            key={ item.id }\n            id={ item.id }\n            name={ item.name }\n            displayName={ item.displayName }\n            enabled={ item.enabled }\n            hidden={ item.hidden }\n            type={ item.type }\n            items={ item.items }\n            actived={ item.actived }\n            onStateChange={ updateItem }\n            ref={ ( c ) => { if( c ) scope.items.push( c ); } } />\n          );\n      } else if ( item.type === 'ui-ribbon-button-big' ) {\n        const RibbonPushButtonLike = ( item.role === 'ui-ribbon-button-toggle' ) ? RibbonToggleButton : RibbonPushButton;\n        result = (\n          <RibbonPushButtonLike\n            key={ item.id }\n            id={ item.id }\n            name={ item.name }\n            displayName={ item.displayName }\n            enabled={ item.enabled }\n            hidden={ item.hidden }\n            type={ item.type }\n            actived={ item.actived }\n            icon={ item.icon }\n            tooltip={ item.tooltip }\n            toggleable={ item.toggleable }\n            clickHandler={ item.clickHandler }\n            onStateChange={ updateItem }\n            ref={ ( c ) => { if( c ) scope.items.push( c ); } } />\n          );\n      }\n\n      return result;\n    };\n\n    const createSeperator = ( seperator = true ) => {\n      if( seperator )\n        return(\n          <div className=\"ui-ribbon-panel-seperator ui-ribbon-relative ui-ribbon-inline\"></div>\n        );\n    };\n\n    return (\n      <div\n        key={ this.id }\n        className={ 'ui-ribbon-panel-container ui-ribbon-relative ' + outerDynCSS }>\n        { createSeperator( this.seperator ) }\n\n        <div className={ 'ui-ribbon-panel ui-ribbon-relative ui-ribbon-inline ' + innerDynCSS }>\n          <div className=\"ui-ribbon-panel-contents\">\n            { items.map( createItem ) }\n\n            <div className={ 'ui-ribbon-panel-legend ui-ribbon-absolute ' + legendDynCSS }>\n              { this.displayName }\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nRibbonPanel.propTypes = {\n  id: React.PropTypes.string.isRequired,\n  seperator: React.PropTypes.bool,\n  items: React.PropTypes.arrayOf( React.PropTypes.instanceOf( RibbonItemData ) ),\n  onStateChange: React.PropTypes.func\n};\n\nRibbonPanel.defaultProps = {\n  id: newGUID(),\n  seperator: true,\n  items: []\n};\n","/**\n * @author yiskang / http://github.com/yiskang\n */\n\n'use strict';\n\nimport RibbonBaseData from './RibbonBaseData';\n\nconst Seperator = Symbol( 'seperator' );\nconst Items = Symbol( 'items' );\n\n/**\n * RibbonPanelData\n * @extends RibbonBaseData\n * @class\n */\nexport default class RibbonPanelData extends RibbonBaseData {\n  /**\n   * RibbonPanelData constructor\n   * @param {string} name - The name of this instance used by the internal mechanism.\n   * @param {string} displayName - The name of this instance shown on the user interface, might be a localized string.\n   */\n  constructor( name, displayName ) {\n    super( name, displayName );\n\n    this[Seperator] = true;\n    this[Items] = [];\n  }\n\n  /**\n   * Panel has seperator or not.\n   * @return {bool} - If true, panel will be seperated with other panels by a panel seperator.\n   */\n  get seperator() {\n    return this[Seperator];\n  }\n\n  /**\n   * Panel has seperator or not.\n   * @param {bool} [seperator = true] - If true, panel will be seperated with other panels by a panel seperator.\n   */\n  set seperator( seperator = true ) {\n    this[Seperator] = ( seperator === true );\n  }\n\n  /**\n   * Panel's children items.\n   * @return {RibbonItemData[]} - Ribbon item data.\n   */\n  get items() {\n    return this[Items];\n  }\n\n  /**\n   * Panel's children items.\n   * @return {RibbonItemData[]} [items = []]- Ribbon item data.\n   */\n  set items( items = [] ) {\n    this[Items] = items;\n  }\n}\n","/**\n * @author yiskang / http://github.com/yiskang\n */\n\n'use strict';\n\nimport React from 'react';\nimport ClassNames from 'classnames';\nimport RibbonBase from './RibbonBase';\nimport RibbonPanel from './RibbonPanel';\nimport RibbonPanelData from './data/RibbonPanelData';\nimport { newGUID } from './utility';\n\nconst Panels = Symbol( 'panels' );\n\n/**\n * RibbonTab\n * @extends RibbonBase\n * @class\n */\nexport default class RibbonTab extends RibbonBase {\n  /**\n   * RibbonTab constructor\n   * @param {object} props - React component properties\n   */\n  constructor( props ) {\n    super( props );\n\n    let actived = ( props.actived === true );\n\n    this.state = Object.assign( this.state,\n      {\n        actived: actived,\n        panels: [].concat( props.panels )\n      });\n\n    this[Panels] = [];\n\n    this.handleClick = this.handleClick.bind( this );\n  }\n\n  /**\n   * Tab type.\n   * @return {string} - Tab type for identification.\n   */\n  get type() {\n    return this.props.type;\n  }\n\n  /**\n   * Instance edis/en-able status.\n   * @return {bool} - If false, make instance be disabled.\n   */\n  get enabled() {\n    return super.enabled;\n  }\n\n  /**\n   * Instance edis/en-able status.\n   * @param {bool} [enabled = true] - If false, make instance be disabled.\n   */\n  set enabled( enabled = true ) {\n    if( this.hidden ) return;\n\n    const isEnabled = ( enabled === true );\n\n    const prop = { enabled: isEnabled, actived: false };\n    const onStateChange = this.props.onStateChange;\n    onStateChange && onStateChange( this.id, prop );\n\n    // Cascaded applying changes\n    this.panels.map( ( panel ) => {\n      panel.enabled = isEnabled;\n    });\n\n    this.setState( prop );\n  }\n\n  /**\n   * Instance is hidden or not.\n   * @return {bool} - If false, instance is going to disppear on the UI.\n   */\n  get hidden() {\n    return super.hidden;\n  }\n\n  /**\n   * Instance is hidden or not.\n   * @return {bool} [hidden = false]- If false, instance is going to disppear on the UI.\n   */\n  set hidden( hidden = false ) {\n    const isHidden = ( hidden === true );\n    const isEnabled = !isHidden;\n\n    const prop = { hidden: isHidden, enabled: isEnabled, actived: false };\n    const onStateChange = this.props.onStateChange;\n    onStateChange && onStateChange( this.id, prop );\n\n    // Cascaded applying changes\n    this.panels.map( ( panel ) => {\n      panel.hidden = isHidden;\n    });\n\n    this.setState( prop );\n  }\n\n  /**\n   * Tab actived state.\n   * @return {bool} - If true, it repsents tab is selected currently.\n   */\n  get actived() {\n    return this.state.actived;\n  }\n\n  /**\n   * Tab actived state.\n   * @return {bool} [actived = false] - If true, it repsents tab is selected currently.\n   */\n  set actived( actived = false ) {\n    const isActived = ( actived === true );\n    const prop = { actived: isActived };\n\n    const onStateChange = this.props.onStateChange;\n    onStateChange && onStateChange( this.id, prop );\n\n    this.setState( prop );\n  }\n\n  /**\n   * Tab's children panels\n   * @return {[RibbonPanelData]} - Ribbon panel data.\n   */\n  get panels() {\n    return this[Panels];\n  }\n\n  /**\n   * Add new panel by given data.\n   * @param {RibbonPanelData} panelData - Ribbon panel data for creating new panel.\n   * @return {RibbonPanel} - Rendered RibbonPanel component.\n   */\n  addPanel( panelData ) {\n    const idx = this.panels.findIndex( ( panel ) => ( panel.id == panelData.id || panel.name === panelData.name ) );\n    if( !(panelData instanceof RibbonPanelData) || idx !== -1 )\n      return console.log( '%c[RibbonTab] Input panelData is invalid or duplicate.', 'color:red;' );\n\n    panelData.seperator = ( this.panels.length !== 0 );\n    const panels = this.state.panels.concat( panelData );\n\n    const prop = { panels };\n    const onStateChange = this.props.onStateChange;\n    onStateChange && onStateChange( this.id, prop );\n\n    this.setState( prop );\n\n    return this.panels[ this.panels.length -1 ];\n  }\n\n  componentWillUpdate( nextProps, nextState ) {\n    this[Panels].length = 0;\n  }\n\n  /**\n   * Tab clicking event handler\n   */\n  handleClick() {\n    if( this.type === 'ui-ribbon-tab-application' ) return;\n\n    const onClick = this.props.onClick;\n    onClick && onClick( this.id );\n  }\n\n  render() {\n    const scope = this;\n    const panels = this.state.panels;\n    const dynCSS = ClassNames({\n      'ui-ribbon-active': this.actived,\n      'ui-ribbon-disabled': ( this.enabled === false ),\n      'ui-ribbon-invisible': this.hidden,\n      'ui-ribbon-inline': ( this.hidden === false )\n    });\n\n    const updatePanel = ( id, data ) => {\n      let panels = scope.state.panels;\n      const panel = panels.find( ( panel ) => panel.id === id );\n      if( !panel ) return;\n\n      Object.assign( panel, data );\n\n      const prop = { panels };\n      const onStateChange = scope.props.onStateChange;\n      onStateChange && onStateChange( scope.id, prop );\n\n      scope.setState( prop );\n    };\n\n    const createPanel = ( panel ) => {\n      return (\n        <RibbonPanel\n          key={ panel.id }\n          id={ panel.id }\n          name={ panel.name }\n          displayName={ panel.displayName }\n          enabled={ panel.enabled }\n          hidden={ panel.hidden }\n          seperator={ panel.seperator }\n          items={ panel.items }\n          onStateChange={ updatePanel }\n          ref={ ( c ) => { if( c ) scope.panels.push( c ) ;} } />\n      );\n    };\n\n    return (\n      <li\n        key={ this.id }\n        id={ this.id }\n        className={ this.type + ' ' + dynCSS }\n        role=\"ui-ribbon-tab\"\n        onClick={ this.handleClick } >\n\n        <span className=\"ui-ribbon-uppercase\">{ this.displayName }</span>\n        <div className=\"ui-ribbon-tab-contents ui-ribbon-absolute\">\n          { panels.map( createPanel ) }\n        </div>\n      </li>\n    );\n  }\n}\n\nRibbonTab.propTypes = {\n  id: React.PropTypes.string.isRequired,\n  type: React.PropTypes.string.isRequired,\n  actived: React.PropTypes.bool,\n  panels: React.PropTypes.arrayOf( React.PropTypes.instanceOf( RibbonPanelData ) ),\n  onStateChange: React.PropTypes.func\n};\n\nRibbonTab.defaultProps = {\n  id: newGUID(),\n  type: 'ui-ribbon-tab-normal',\n  actived: false,\n  panels: []\n};\n","/**\n * @author yiskang / http://github.com/yiskang\n */\n\n'use strict';\n\nimport React from 'react';\nimport { newGUID } from './utility';\n\n/**\n * RibbonAppMenuSeperator\n * @extends RibbonBase\n * @class\n */\nexport default class RibbonAppMenuSeperator extends React.Component {\n  /**\n   * RibbonAppMenuSeperator constructor\n   * @param {object} props - React component properties\n   */\n  constructor( props ) {\n    super( props );\n  }\n\n  /**\n   * Item type.\n   * @return {string} - Item type for identification.\n   */\n  get type() {\n    return 'ui-ribbon-seperator';\n  }\n\n  render() {\n    return (\n      <li key={ this.id } id={ this.id} className=\"ui-ribbon-seperator\">\n          <div className=\"ui-ribbon-seperator\"></div>\n      </li>\n    );\n  }\n}\n\nRibbonAppMenuSeperator.propTypes = {\n  id: React.PropTypes.string.isRequired\n};\n\nRibbonAppMenuSeperator.defaultProps = {\n  id: newGUID()\n};","/**\n * @author yiskang / http://github.com/yiskang\n */\n\n'use strict';\n\nimport React from 'react';\nimport ClassNames from 'classnames';\nimport RibbonBase from './RibbonBase';\nimport RibbonAppMenuSeperator from './RibbonAppMenuSeperator';\nimport { newGUID } from './utility';\n\n/**\n * RibbonAppMenuItem\n * @extends RibbonBase\n * @class\n */\nexport default class RibbonAppMenuItem extends RibbonBase {\n  /**\n   * RibbonAppMenuItem constructor\n   * @param {object} props - React component properties\n   */\n  constructor( props ) {\n    super( props );\n\n    let actived = ( props.actived === true );\n    let content = props.content;\n\n    this.state = Object.assign( this.state,\n      {\n        actived: actived,\n        content: content\n      });\n\n    this.handleClick = this.handleClick.bind( this );\n  }\n\n  /**\n   * Item type.\n   * @return {string} - Item type for identification.\n   */\n  get type() {\n    return this.props.type;\n  }\n\n  /**\n   * Panel has seperator or not.\n   * @return {bool} - If true, panel will be seperated with other panels by a panel seperator.\n   */\n  get seperator() {\n    return this.props.seperator;\n  }\n\n  /**\n   * Instance edis/en-able status.\n   * @return {bool} - If false, make instance be disabled.\n   */\n  get enabled() {\n    return super.enabled;\n  }\n\n  /**\n   * Instance edis/en-able status.\n   * @param {bool} [enabled = true] - If false, make instance be disabled.\n   */\n  set enabled( enabled = true ) {\n    if( this.hidden ) return;\n\n    const isEnabled = ( enabled === true );\n    super.enabled = isEnabled;\n  }\n\n  /**\n   * Instance is hidden or not.\n   * @return {bool} - If false, instance is going to disppear on the UI.\n   */\n  get hidden() {\n    return super.hidden;\n  }\n\n  /**\n   * Instance is hidden or not.\n   * @return {bool} [hidden = false]- If false, instance is going to disppear on the UI.\n   */\n  set hidden( hidden = false ) {\n    const isHidden = ( hidden === true );\n    super.hidden = isHidden;\n  }\n\n  /**\n   * Tab actived state.\n   * @return {bool} - If true, it repsents tab is selected currently.\n   */\n  get actived() {\n    return this.state.actived;\n  }\n\n  /**\n   * Tab actived state.\n   * @return {bool} [actived = false] - If true, it repsents tab is selected currently.\n   */\n  set actived( actived = false ) {\n    const isActived = ( actived === true );\n    const prop = { actived: isActived };\n\n    const onStateChange = this.props.onStateChange;\n    onStateChange && onStateChange( this.id, prop, true );\n\n    this.setState( prop );\n  }\n\n  /**\n   * Menu content handler for rendering app menu content.\n   * @return {Function} - Menu content handler.\n   */\n  get content() {\n    return this.state.content;\n  }\n\n  /**\n   * Menu content handler for rendering app menu content.\n   * @param {Function} [content] - Menu content handler.\n   */\n  set content( content ) {\n    if( !(content instanceof Function) ) throw 'Input content handler is invalid.';\n\n    const prop = { content };\n    const onStateChange = this.props.onStateChange;\n    onStateChange && onStateChange( this.id, prop );\n\n    this.setState( prop );\n  }\n\n  /**\n   * Tab clicking event handler\n   */\n  handleClick() {\n    const onMenuClick = this.props.onMenuClick;\n    onMenuClick && onMenuClick( this.id );\n  }\n\n  render() {\n    const scope = this;\n    const dynCSS = ClassNames({\n      'ui-ribbon-active': this.actived,\n      'ui-ribbon-disabled': ( this.enabled === false ),\n      'ui-ribbon-invisible': this.hidden\n    });\n\n    const createSeperator = ( seperator = true ) => {\n      if( seperator ) {\n        const id = newGUID();\n        return(\n          <RibbonAppMenuSeperator key={ id } id={ id } />\n        );\n      }\n    };\n\n    return (\n      <div>\n        { createSeperator( this.seperator ) }\n        <li key={ this.id } className={ dynCSS } onClick={ this.handleClick }>\n            <div> { this.displayName } </div>\n        </li>\n      </div>\n    );\n  }\n}\n\nRibbonAppMenuItem.propTypes = {\n  id: React.PropTypes.string.isRequired,\n  type: React.PropTypes.string.isRequired,\n  seperator: React.PropTypes.bool,\n  actived: React.PropTypes.bool,\n  content: React.PropTypes.func,\n  onMenuClick: React.PropTypes.func,\n  onStateChange: React.PropTypes.func\n};\n\nRibbonAppMenuItem.defaultProps = {\n  id: newGUID(),\n  type: 'ui-ribbon-app-menu-normal',\n  seperator: false,\n  actived: false\n};","/**\n * @author yiskang / http://github.com/yiskang\n */\n\n'use strict';\n\nimport React from 'react';\nimport RibbonAppMenuItem from './RibbonAppMenuItem';\nimport { newGUID } from './utility';\n\n/**\n * RibbonAppMenuButton\n * @extends RibbonAppMenuItem\n * @class\n */\nexport default class RibbonAppMenuButton extends RibbonAppMenuItem {\n  /**\n   * RibbonAppMenuButton constructor\n   * @param {object} props - React component properties\n   */\n  constructor( props ) {\n    super( props );\n\n    this.handleClick = this.handleClick.bind( this );\n  }\n\n  /**\n   * Button click eveent handler.\n   * @return {Function} - Click eveent handler.\n   */\n  get clickHandler() {\n    return this.state.content;\n  }\n\n  /**\n   * Button click eveent handler.\n   * @param {Function} handler - Click eveent handler.\n   */\n  set clickHandler( handler ) {\n    if( !(handler instanceof Function) ) throw 'Input clicking handler is invalid.';\n\n    this.content = handler;\n  }\n\n  /**\n   * Menu clicking event handler\n   */\n  handleClick( event ) {\n    if( !this.enabled ) return;\n\n    const onClick = this.state.content;\n    onClick && onClick( event );\n  }\n}\n\nRibbonAppMenuButton.propTypes = {\n  id: React.PropTypes.string.isRequired,\n  type: React.PropTypes.string.isRequired,\n  seperator: React.PropTypes.bool,\n  actived: React.PropTypes.bool,\n  content: React.PropTypes.func,\n  onStateChange: React.PropTypes.func\n};\n\nRibbonAppMenuButton.defaultProps = {\n  id: newGUID(),\n  type: 'ui-ribbon-app-menu-button',\n  seperator: true,\n  actived: false\n};","/**\n * @author yiskang / http://github.com/yiskang\n */\n\n'use strict';\n\nimport RibbonBaseData from './RibbonBaseData';\n\nconst Seperator = Symbol( 'seperator' );\nconst\tActived = Symbol( 'actived' );\nconst Content = Symbol( 'contnet' );\n\n/**\n * RibbonAppMenuItemData\n * @extends RibbonBaseData\n * @class\n */\nexport default class RibbonAppMenuItemData extends RibbonBaseData {\n  /**\n   * RibbonAppMenuItemData constructor\n   * @param {string} name - The name of this instance used by the internal mechanism.\n   * @param {string} displayName - The name of this instance shown on the user interface, might be a localized string.\n   */\n  constructor( name, displayName ) {\n    super( name, displayName );\n\n    this[Seperator] = false;\n    this[Actived] = false;\n    this[Content] = undefined;\n  }\n\n  /**\n   * Menu type.\n   * @return {string} -\tButton type for identification.\n   * @override\n   */\n  get type() {\n    return 'ui-ribbon-app-menu-normal';\n  }\n\n  /**\n   * Panel has seperator or not.\n   * @return {bool} - If true, panel will be seperated with other panels by a panel seperator.\n   */\n  get seperator() {\n    return this[Seperator];\n  }\n\n  /**\n   * Panel has seperator or not.\n   * @param {bool} [seperator = true] - If true, panel will be seperated with other panels by a panel seperator.\n   */\n  set seperator( seperator = true ) {\n    this[Seperator] = ( seperator === true );\n  }\n\n  /**\n   * Tab actived state.\n   * @return {bool} - If true, it repsents tab is selected currently.\n   */\n  get actived() {\n    return this[Actived];\n  }\n\n  /**\n   * Tab actived state.\n   * @return {bool} [actived = false] - If true, it repsents tab is selected currently.\n   */\n  set actived( actived = false ) {\n    this[Actived] = ( actived === true );\n  }\n\n  /**\n   * Menu content handler for rendering app menu content.\n   * @return {Function} - Menu content handler.\n   */\n  get content() {\n    return this[Content];\n  }\n\n  /**\n   * Menu content handler for rendering app menu content.\n   * @param {Function} [content] - Menu content handler.\n   */\n  set content( content ) {\n    if( !(content instanceof Function) ) throw 'Input content handler is invalid.';\n\n    this[Content] = content;\n  }\n}\n","/**\n * @author yiskang / http://github.com/yiskang\n */\n\n'use strict';\n\nimport RibbonAppMenuItemData from './RibbonAppMenuItemData';\n\n/**\n * RibbonAppMenuButtonData\n * @extends RibbonAppMenuItemData\n * @class\n */\nexport default class RibbonAppMenuButtonData extends RibbonAppMenuItemData {\n  /**\n   * RibbonAppMenuButtonData constructor\n   * @param {string} name - The name of this instance used by the internal mechanism.\n   * @param {string} displayName - The name of this instance shown on the user interface, might be a localized string.\n   */\n  constructor( name, displayName ) {\n    super( name, displayName );\n  }\n\n  /**\n   * Menu type.\n   * @return {string} -\tButton type for identification.\n   * @override\n   */\n  get type() {\n    return 'ui-ribbon-app-menu-button';\n  }\n}\n","/**\n * @author yiskang / http://github.com/yiskang\n */\n\n'use strict';\n\nimport React from 'react';\nimport ClassNames from 'classnames';\nimport RibbonBase from './RibbonBase';\nimport RibbonAppMenuItem from './RibbonAppMenuItem';\nimport RibbonAppMenuButton from './RibbonAppMenuButton';\nimport RibbonAppMenuItemData from './data/RibbonAppMenuItemData';\nimport RibbonAppMenuButtonData from './data/RibbonAppMenuButtonData';\nimport { newGUID } from './utility';\n\nconst Items = Symbol( 'items' );\nconst Current = Symbol( 'current' );\nconst Default = Symbol( 'default' );\n\n/**\n * RibbonAppTab\n * @extends RibbonBase\n * @class\n */\nexport default class RibbonAppTab extends RibbonBase {\n  /**\n   * RibbonAppTab constructor\n   * @param {object} props - React component properties\n   */\n  constructor( props ) {\n    super( props );\n\n    this.state = Object.assign( this.state,\n      {\n        items: [].concat( props.items )\n      });\n\n    this[Items] = [];\n    this[Current] = undefined;\n    this[Default] = undefined;\n\n    this.handleClick = this.handleClick.bind( this );\n    this.handleClose = this.handleClose.bind( this );\n    this.handleItemClick = this.handleItemClick.bind( this );\n  }\n\n  /**\n   * Tab type.\n   * @return {string} - Tab type for identification.\n   */\n  get type() {\n    return this.props.type;\n  }\n\n  /**\n   * Panel's children items\n   * @return {[RibbonItemData]} - Ribbon item data.\n   */\n  get items() {\n    return this[Items];\n  }\n\n  /**\n   * Current actived RibbonAppMenuItem.\n   * @return {string} - RibbonAppMenuItem id.\n   */\n  get current() {\n    return this[Current];\n  }\n\n  /**\n   * Current actived RibbonAppMenuItem.\n   * @param {string} id - RibbonAppMenuItem id.\n   */\n  set current( id ) {\n    const current = this.items.find( ( item ) => item.id === id && item.type !== 'ui-ribbon-app-menu-button' && item.enabled );\n    if( !current ) throw '[RibbonAppTab] Input id not exists or disabled.'\n\n    current.actived = true;\n    this[Current] = id;\n\n    if( !this.default )\n      this.default = id;\n\n    this.items.map( ( item ) => {\n      if( item.id !== id ) item.actived = false;\n    });\n  }\n\n  /**\n   * Default actived RibbonAppMenuItem.\n   * @return {string} - RibbonAppMenuItem id.\n   */\n  get default() {\n    return this[Default];\n  }\n\n  /**\n   * Default actived RibbonAppMenuItem.\n   * @param {string} - RibbonAppMenuItem id.\n   */\n  set default( id ) {\n    const item = this.items.find( ( item ) => item.id === id && item.type !== 'ui-ribbon-app-menu-button' && item.enabled );\n    if( !item ) throw '[RibbonAppTab] Input id not exists or disabled.'\n\n    this[Default] = id;\n\n    if( !this.current )\n      this.current = id;\n  }\n\n  /**\n   * Reset current item to the default.\n   */\n  resetCurrent() {\n    this.current = this.default;\n  }\n\n  /**\n   * Instance edis/en-able status.\n   * @return {bool} - If false, make instance be disabled.\n   */\n  get enabled() {\n    return super.enabled;\n  }\n\n  /**\n   * Instance edis/en-able status.\n   * @param {bool} [enabled = true] - If false, make instance be disabled.\n   */\n  set enabled( enabled = true ) {\n    if( this.hidden ) return;\n\n    const isEnabled = ( enabled === true );\n\n    const prop = { enabled: isEnabled, actived: false };\n    const onStateChange = this.props.onStateChange;\n    onStateChange && onStateChange( this.id, prop, true );\n\n    this.setState( prop );\n\n    // Cascaded applying changes\n    this.items.map( ( item ) => {\n      item.enabled = isEnabled;\n    });\n  }\n\n  /**\n   * Instance is hidden or not.\n   * @return {bool} - If false, instance is going to disppear on the UI.\n   */\n  get hidden() {\n    return super.hidden;\n  }\n\n  /**\n   * Instance is hidden or not.\n   * @return {bool} [hidden = false]- If false, instance is going to disppear on the UI.\n   */\n  set hidden( hidden = false ) {\n    const isHidden = ( hidden === true );\n    const isEnabled = !isHidden;\n\n    const prop = { hidden: isHidden, enabled: isEnabled, actived: false };\n    const onStateChange = this.props.onStateChange;\n    onStateChange && onStateChange( this.id, prop, true );\n\n    this.setState( prop );\n\n    // Cascaded applying changes\n    this.items.map( ( item ) => {\n      item.hidden = isHidden;\n    });\n  }\n\n  /**\n   * Tab actived state.\n   * @return {bool} - If true, it repsents tab is selected currently.\n   */\n  get actived() {\n    return this.state.actived;\n  }\n\n  /**\n   * Tab actived state.\n   * @return {bool} [actived = false] - If true, it repsents tab is selected currently.\n   */\n  set actived( actived = false ) {\n    const isActived = ( actived === true );\n    const prop = { actived: isActived };\n\n    const onStateChange = this.props.onStateChange;\n    onStateChange && onStateChange( this.id, prop, true );\n\n    this.setState( prop );\n  }\n\n  /**\n   * Add new RibbonAppMenuItem by given data.\n   * @param {RibbonAppMenuItemData} itemData - Ribbon item data for creating new item on the app menu.\n   * @return {RibbonAppMenuItem} - Rendered RibbonAppMenuItem component.\n   */\n  addItem( itemData ) {\n    const idx = this.items.findIndex( ( item ) => ( item.id === itemData.id || item.name === itemData.name ) );\n    if( !(itemData instanceof RibbonAppMenuItemData) || idx !== -1 )\n      return console.log( '%c[RibbonAppTab] Input itemData is invalid or duplicate.', 'color:red;' );\n\n    const items = this.state.items.concat( itemData );\n\n    const prop = { items };\n    const onStateChange = this.props.onStateChange;\n    onStateChange && onStateChange( this.id, prop, true );\n\n    this.setState( prop );\n\n    const item = this.items[ this.items.length -1 ];\n    if( !(item instanceof RibbonAppMenuButton) && !this.default )\n      this.default = item.id;\n\n    return item;\n  }\n\n  /**\n   * Active target item by given id.\n   * @param {string} itemId - Item Id.\n   */\n  activeItemById( itemId ) {\n    if( typeof itemId !== 'string' ) return console.log( '%c[RibbonAppTab] ItemId should be a string.', 'color:red;' );\n\n    const item = this.items.find( ( item ) => item.id === itemId );\n    if( !item ) throw '[RibbonAppTab] Input item id not exists.';\n\n    item.actived = true;\n  }\n\n  componentWillUpdate() {\n    this[Items].length = 0;\n  }\n\n  /**\n   * Tab clicking event handler\n   */\n  handleClick() {\n    const onClick = this.props.onClick;\n    onClick && onClick( this.id );\n  }\n\n  handleClose( event ) {\n    event.stopPropagation();\n\n    this.actived = false;\n  }\n\n  /**\n   * Tab clicking event handler\n   */\n  handleItemClick( itemId ) {\n    this.activeItemById( itemId );\n  }\n\n  render() {\n    const scope = this;\n    const dynCSS = ClassNames({\n      'ui-ribbon-active': this.actived,\n      'ui-ribbon-disabled': ( this.enabled === false ),\n      'ui-ribbon-invisible': this.hidden,\n      'ui-ribbon-inline': ( this.hidden === false )\n    });\n\n    const updateCurrentItem = ( id ) => {\n      if( typeof id !== 'string' ) return;\n\n      scope[Current] = id;\n    };\n\n    const createItem = ( item ) => {\n      if( item.type === 'ui-ribbon-app-menu-button' ) {\n        return (\n          <RibbonAppMenuButton\n            key={ item.id }\n            id={ item.id }\n            name={ item.name }\n            displayName={ item.displayName }\n            enabled={ item.enabled }\n            hidden={ item.hidden }\n            type={ item.type }\n            actived={ item.actived }\n            content={ item.content }\n            seperator={ item.seperator }\n            onStateChange={ updateItem }\n            ref={ ( c ) => { if( c ) scope.items.push( c ); } } />\n        );\n      } else {\n        return (\n          <RibbonAppMenuItem\n            key={ item.id }\n            id={ item.id }\n            name={ item.name }\n            displayName={ item.displayName }\n            enabled={ item.enabled }\n            hidden={ item.hidden }\n            type={ item.type }\n            actived={ item.actived }\n            content={ item.content }\n            seperator={ item.seperator }\n            onMenuClick={ scope.handleItemClick }\n            onStateChange={ updateItem }\n            ref={ ( c ) => { if( c ) scope.items.push( c ); } } />\n        );\n      }\n    };\n\n    const nextOpt = ( id, data ) => {\n      // For de/activating menu by changing menu's actived property.\n      if( data.hasOwnProperty( 'actived' ) ) {\n        if( data.actived === true ) {\n          scope.items.map( ( item ) => {\n            if( item.id !== id ) item.actived = false;\n          });\n\n          updateCurrentItem( id );\n        } else {\n          // For activing other menu while current menu is diabled.\n          if( data.hasOwnProperty( 'enabled' ) && ( data.enabled === false ) ) {\n            const item = scope.items.find( ( item ) => ( item.id !== id && item.enabled === true && item.type !== 'ui-ribbon-app-menu-button' ) );\n            if( !item ) return;\n\n            item.actived = true;\n            updateCurrentItem( id );\n          }\n        }\n      }\n    };\n\n    const updateItem = ( id, data ) => {\n      let items = scope.state.items;\n      const item = items.find( ( item ) => item.id === id );\n      if( !item ) return;\n\n      Object.assign( item, data );\n\n      const prop = { items };\n      const onStateChange = scope.props.onStateChange;\n      onStateChange && onStateChange( scope.id, prop );\n\n      scope.setState( prop );\n\n      if( item.type === 'ui-ribbon-app-menu-button' ) return;\n\n      nextOpt( id, data );\n    };\n\n    const renderItemContent = ( id ) => {\n      if( !id ) return;\n\n      let items = scope.state.items;\n      const item = items.find( ( item ) => item.id === id );\n      if( !item ) return;\n\n      const content = item.content;\n      if( !content ) return;\n\n      return content();\n    };\n\n    return (\n      <li\n        key={ this.id }\n        id={ this.id }\n        className={ this.type + ' ' + dynCSS }\n        role=\"ui-ribbon-tab\"\n        onClick={ this.handleClick } >\n\n        <span className=\"ui-ribbon-uppercase\">{ this.displayName }</span>\n        <div className=\"ui-ribbon-tab-application-contents ui-ribbon-absolute\">\n          <div id=\"ribbon-nav-application-menu\">\n            <div className=\"ribbon-nav-back-arrow\" onClick={ this.handleClose }></div>\n            <ul role=\"ribbon-nav-application-menu-items\">\n              { this.state.items.map( createItem ) }\n            </ul>\n          </div>\n          <div role=\"ribbon-nav-application-menu-content\">\n            <div className=\"ribbon-content-area\">\n              { renderItemContent( this.current ) }\n            </div>\n          </div>\n        </div>\n      </li>\n    );\n  }\n}\n\nRibbonAppTab.propTypes = {\n  id: React.PropTypes.string.isRequired,\n  type: React.PropTypes.string.isRequired,\n  actived: React.PropTypes.bool,\n  items: React.PropTypes.arrayOf( React.PropTypes.instanceOf( RibbonAppMenuItemData ) ),\n  onStateChange: React.PropTypes.func\n};\n\nRibbonAppTab.defaultProps = {\n  id: newGUID(),\n  type: 'ui-ribbon-tab-application',\n  actived: false,\n  items: []\n};","/**\n * @author yiskang / http://github.com/yiskang\n */\n\n'use strict';\n\nimport React from 'react';\nimport RibbonTabData from './data/RibbonTabData';\nimport RibbonAppTabData from './data/RibbonAppTabData';\nimport RibbonTitlebarData from './data/RibbonTitlebarData';\nimport RibbonTitlebar from './RibbonTitlebar';\nimport RibbonTab from './RibbonTab';\nimport RibbonAppTab from './RibbonAppTab';\nimport { newGUID } from './utility';\n\nconst Tabs = Symbol( 'tabs' );\n\n/**\n * Ribbon\n * @extends React.Component\n * @class\n */\nexport default class Ribbon extends React.Component {\n  /**\n   * RibbonBase constructor\n   * @param {object} props - React component properties\n   */\n  constructor( props ) {\n    super( props );\n\n    let appTab = new RibbonAppTabData();\n    let tabs = [ appTab ].concat( props.tabs );\n    let titlebar = new RibbonTitlebarData();\n\n    this.state = {\n      tabs: tabs,\n      titlebar: titlebar\n    };\n\n    this[Tabs] = [];\n\n    this.handleTabClick = this.handleTabClick.bind( this );\n  }\n\n  /**\n   * Content tabs\n   * @return {RibbonTab[]} - Array of RibbonTabs.\n   */\n  get tabs() {\n    return this[Tabs];\n  }\n\n  /**\n   * Toggle to show or hide app titlebar.\n   */\n  toggleAppTitle() {\n    this.refs.titlebar.toggleDisplay();\n  }\n\n  /**\n   * Add new tab by given data.\n   * @param {RibbonTabData} tabData - Ribbon tab data for creating new tab.\n   * @return {RibbonTab} - Rendered RibbonTab component.\n   */\n  addTab( tabData ) {\n    const idx = this.tabs.findIndex( ( tab ) => ( tab.id == tabData.id || tab.name === tabData.name ) );\n    if( !(tabData instanceof RibbonTabData) || idx !== -1 )\n      return console.log( '%c[Ribbon] Input tabData is invalid or duplicate.', 'color:red;' );\n\n    tabData.actived = ( this.tabs.length === 1 );\n    const tabs = this.state.tabs.concat( tabData );\n    this.setState({ tabs });\n\n    return this.tabs[ this.tabs.length - 1 ];\n  }\n\n  /**\n   * Active target tab by given id.\n   * @param {string} tabId - Tab Id.\n   */\n  activeTabById( tabId ) {\n    if( typeof tabId !== 'string' ) return console.log( '%c[Ribbon] TabId should be a string.', 'color:red;' );\n\n    const tab = this.tabs.find( ( tab ) => tab.id === tabId );\n    if( !tab ) throw '[Ribbon] Input tab id not exists.';\n\n    tab.actived = true;\n  }\n\n  /**\n   * Tab clicking event handler\n   */\n  handleTabClick( tabId ) {\n    this.activeTabById( tabId );\n  }\n\n  componentWillUpdate() {\n    this[Tabs].length = 0;\n  }\n\n  render() {\n    const scope = this;\n    const otherTabs = this.state.tabs;\n\n    const updateTitlebar = ( id, data ) => {\n      let titlebar = scope.state.titlebar;\n\n      if( titlebar.id !== id ) return;\n\n      Object.assign( titlebar, data );\n      scope.setState({ titlebar });\n    };\n\n    const createTitleBar = () => {\n      const data = scope.state.titlebar;\n      return (\n        <RibbonTitlebar\n          key={ data.id }\n          id={ data.id }\n          name={ data.name }\n          displayName={ data.title }\n          enabled={ data.enabled }\n          hidden={ data.hidden }\n          ref=\"titlebar\"\n          onStateChange={ updateTitlebar } />\n      );\n    };\n\n    const nextOpt = ( id, data ) => {\n      // For de/activating tab by changing tab's actived property.\n      if( data.hasOwnProperty( 'actived' ) ) {\n        if( data.actived === true ) {\n          scope.tabs.map( ( tab ) => {\n            if( tab.id !== id ) tab.actived = false;\n          });\n        } else {\n          // For activing other tab while current tab is diabled.\n          if( data.hasOwnProperty( 'enabled' ) && ( data.enabled === false ) ) {\n            const tab = scope.tabs.find( ( tab ) => ( tab.id !== id && tab.enabled === true && tab.type !== 'ui-ribbon-tab-application' ) );\n            if( !tab ) return;\n\n            tab.actived = true;\n          }\n        }\n      }\n    };\n\n    const updateTab = ( id, data, stopPropagation = false ) => {\n      let tabs = scope.state.tabs;\n      const tab = tabs.find( ( tab ) => tab.id === id );\n      if( !tab ) return;\n\n      Object.assign( tab, data );\n      scope.setState({ tabs });\n\n      if( !stopPropagation ) nextOpt( id, data );\n    };\n\n    const createTab = ( tab ) => {\n      if( tab.type === 'ui-ribbon-tab-application' ) {\n        return (\n          <RibbonAppTab\n            key={ tab.id }\n            id={ tab.id }\n            name={ tab.name }\n            displayName={ tab.displayName }\n            type={ tab.type }\n            enabled={ tab.enabled }\n            hidden={ tab.hidden }\n            actived={ tab.actived }\n            items={ tab.items }\n            onClick={ scope.handleTabClick }\n            onStateChange={ updateTab }\n            ref={ ( c ) => { if( c ) scope.tabs.push( c ) } } />\n        );\n      } else {\n        return (\n          <RibbonTab\n            key={ tab.id }\n            id={ tab.id }\n            name={ tab.name }\n            displayName={ tab.displayName }\n            type={ tab.type }\n            enabled={ tab.enabled }\n            hidden={ tab.hidden }\n            actived={ tab.actived }\n            panels={ tab.panels }\n            onClick={ scope.handleTabClick }\n            onStateChange={ updateTab }\n            ref={ ( c ) => { if( c ) scope.tabs.push( c ) } } />\n        );\n      }\n    };\n\n    return (\n      <div id=\"RibbonUI\">\n        { createTitleBar() }\n        <div className=\"ui-ribbon-window\">\n          <div id=\"ui-ribbon-main\" className=\"ui-ribbon-main ui-ribbon-border-bottom\">\n            <div className=\"ui-ribbon-tab-container ui-ribbon-border-bottom\">\n              <ul role=\"ui-ribbon-tabs\" className=\"ui-ribbon-nowrap ui-ribbon-nopadding ui-ribbon-nomargin\">\n                { otherTabs.map( createTab ) }\n              </ul>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nRibbon.propTypes = {\n  id: React.PropTypes.string.isRequired,\n  tabs: React.PropTypes.arrayOf( React.PropTypes.instanceOf( RibbonTabData ) )\n};\n\nRibbon.defaultProps = {\n  id: newGUID(),\n  tabs: []\n};\n","/**\n * @author yiskang / http://github.com/yiskang\n */\n\n'use strict';\n\nimport Ribbon from './Ribbon';\n\nconst RibbonInst = Symbol( 'ribbon' );\nconst Options = Symbol( 'options' );\n\n/**\n * RibbonTask\n * @class\n * @classdesc For bulk creating or modifying Ribbon contents.\n */\nexport default class RibbonTask {\n  /**\n   * RibbonTask constructor.\n   * @param {Ribbon} ribbon - Rendered Ribbon component.\n   * @param {object} options - Task options.\n   */\n  constructor( ribbon, options ) {\n    if( !(ribbon instanceof Ribbon ) ) throw 'No Ribbon instance available.';\n\n    this[RibbonInst] = ribbon;\n    this[Options] = options;\n  }\n\n  /**\n   * Rendered Ribbon component.\n   * @return {Ribbon}\n   */\n  get ribbon() {\n    return this[RibbonInst];\n  }\n\n  /**\n   * Task options.\n   * @return {object}\n   */\n  get options() {\n    return this[Options];\n  }\n\n  /**\n   * Execute task content.\n   * @return {bool} If true, it represents this task was executed by the Ribbon.\n   */\n  execute() {\n    return true;\n  }\n\n  /**\n   * Discard all changes.\n   * @return {bool} If true, it represents changes made by this task was removed from the Ribbon.\n   */\n  discard() {\n    return true;\n  }\n}\n","/**\n * @author yiskang / http://github.com/yiskang\n */\n\n'use strict';\n\nimport RibbonTask from './RibbonTask';\n\n/**\n * Registered RibbonTask.\n * @private {RibbonTask[]}\n */\nconst Tasks = Symbol( 'tasks' );\n\n/**\n * Check wether input class is instance of RibbonTask or not.\n * @param {RibbonTask} task\n * @return {bool} - If true, it reprents task is a instance of the RibbonTask.\n */\nconst checkTaskType = ( task ) => {\n  if( task.prototype instanceof RibbonTask ) return true;\n  \n  return false;\n};\n\n/**\n * RibbonTaskManager\n * @class\n * @classdesc Task manager class for Ribbon UI.\n */\nexport default class RibbonTaskManager {\n  /**\n   * RibbonTaskManager constructor\n   */\n  constructor() {\n    this[Tasks] = {};\n\n    checkTaskType.bind( this );\n  }\n\n  /**\n   * All registered RibbonTask.\n   * @return {RibbonTask[]}\n   */\n  get tasks() {\n    return this[Tasks];\n  }\n\n  /**\n   * Register RibbonTask.\n   * @param {string} taskId - Task Identification.\n   * @param {RibbonTask} task - Content instance of RibbonTask.\n   * @return {bool} - If task is not type of RibbonTask or registered, it will return false.\n   */\n  register( taskId, task ) {\n    if( !checkTaskType( task ) || this.getTask( taskId ) ) return false;\n\n    this[Tasks][taskId] = task;\n\n    return true;\n  }\n\n  /**\n   * Unregister RibbonTask.\n   * @param {string} taskId - Task Identification.\n   * @return {bool} - If task is not registered, it will return false.\n   */\n  unregister( taskId ) {\n    if( !this.getTask( taskId ) ) return false;\n\n    delete this[Tasks][taskId];\n\n    return true;\n  }\n\n  /**\n   * Get registered task by given id.\n   * @param {string} taskId - Task Identification.\n   * @return {null | RibbonTask} - Return task definition if task is existed.\n   */\n  getTask( taskId ) {\n    if( this.tasks.hasOwnProperty( taskId ) ) {\n      return this.tasks[ taskId ];\n    }\n    return null;\n  }\n}\n","/**\n * @author yiskang / http://github.com/yiskang\n */\n\n'use strict';\n\nimport Ribbon from './Ribbon';\nimport RibbonTaskManager from './RibbonTaskManager';\n\nconst RibbonInst = Symbol( 'ribbon' );\nconst Tasks = Symbol( 'tasks' );\nconst TaskManager = Symbol( 'taskManager' );\n\n/**\n * RibbonTaskExecuter\n * @class\n * @classdesc\tClass for executing tasks to create or modify Ribbon contents.\n */\nexport default class RibbonTaskExecuter {\n  /**\n   * RibbonTaskExecuter constructor.\n   * @param {Ribbon} ribbon - Rendered Ribbon component.\n   * @param {RibbonTaskManager} taskManager -\tRibbonTaskManager instance.\n   */\n  constructor( ribbon, taskManager ) {\n    if( !(ribbon instanceof Ribbon ) ) throw 'No Ribbon instance available.';\n    if( !(taskManager instanceof RibbonTaskManager ) ) throw 'No RibbonTaskManager instance available.';\n\n    this[RibbonInst] = ribbon;\n    this[TaskManager] = taskManager;\n    this[Tasks] = {};\n  }\n\n  /**\n   * Rendered Ribbon component.\n   * @return {Ribbon}\n   */\n  get ribbon() {\n    return this[RibbonInst];\n  }\n\n  /**\n   * Task\tmanager instance.\n   * @return {RibbonTaskManager}\n   */\n  get manager() {\n    return this[TaskManager];\n  }\n\n  /**\n   * All executed tasks.\n   * @return {RibbonTask[]}\n   */\n  get tasks() {\n    return this[Tasks];\n  }\n\n  /**\n   * Execute registered task.\n   * @param {string} taskId - Task Identification.\n   * @return {bool} - If task is not registered or failed to execute, it will return false.\n   */\n  execute( taskId, options ) {\n    let result = false;\n\n    if( !this.getTask( taskId ) ) {\n      const taskClass = this.manager.getTask( taskId );\n\n      if( taskClass ) {\n        const task = new taskClass( this.ribbon, options );\n        result = task.execute();\n\n        if( result === true ) {\n          this[Tasks][taskId] = task;\n\n          console.log( '[RibbonTaskExecuter] Task executed: `%s`.', taskId );\n        }\n      } else {\n        console.log( '[RibbonTaskExecuter] Task not found: `%s`.', taskId );\n      }\n    } else {\n      console.log( '[RibbonTaskExecuter] Task already executed: `%s`.', taskId );\n    }\n\n    return result;\n  }\n\n  /**\n   * Discard executed task.\n   * @param {string} taskId - Task Identification.\n   * @return {bool} - If task is not registered or failed to discard changes, it will return false.\n   */\n  discard( taskId ) {\n    let result = false;\n    const task = this.getTask( taskId );\n\n    if( !task ) {\n      console.log( '[RibbonTaskExecuter] Task not found: `%s`.', taskId );\n    } else {\n      result = task.discard();\n      if( !result ) throw 'Failed to discard chnages in task: `' + taskId + '`.';\n\n      delete this[Tasks][taskId];\n      console.log( '[RibbonTaskExecuter] Task content discarded: `%s`.', taskId );\n    }\n\n    return result;\n  }\n\n  /**\n   * Get executed task by given id.\n   * @param {string} taskId - Task Identification.\n   * @return {null | RibbonTask} - Return task definition if task is existed.\n   */\n  getTask( taskId ) {\n    if( this.tasks.hasOwnProperty( taskId ) ) {\n      return this.tasks[ taskId ];\n    }\n\n    return null;\n  }\n}\n","/**\n * @author yiskang / http://github.com/yiskang\n */\n\n'use strict';\n\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport Ribbon from './Ribbon';\nimport RibbonTaskManager from './RibbonTaskManager';\nimport RibbonTaskExecuter from './RibbonTaskExecuter';\n\nconst Container = Symbol( 'container' );\nconst MainRibbon = Symbol( 'mainRibbon' );\nconst TaskManager = Symbol( 'taskManager' );\nconst TaskExecuter = Symbol( 'taskExecuter' );\n\n/**\n * RibbonCtrl\n * @class\n */\nexport default class RibbonCtrl {\n  /**\n   * RibbonCtrl constructor\n   */\n  constructor() {\n    this[TaskManager] = new RibbonTaskManager();\n    this[Container] = undefined;\n    this[MainRibbon] = undefined;\n    this[TaskExecuter] = undefined;\n  }\n\n  /**\n   * Ribbon instance.\n   * @return {Ribbon} - Rendered Ribbon component.\n   */\n  get mainRibbon() {\n    return this[MainRibbon];\n  }\n\n  /**\n   * Ribbon container\n   * @return {HTMLElement} - React render target DOM element.\n   */\n  get container() {\n    return this[Container];\n  }\n\n  /**\n   * Ribbon container\n   * @param {HTMLElement} container - React render target DOM element.\n   */\n  set container( container ) {\n    if( !(container instanceof HTMLElement) ) throw '[RibbonCtrl] Input container must be a HTML DOM element.';\n\n    this[Container] = container;\n  }\n\n  /**\n   * RibbonTaskManager instance.\n   * @return {RibbonTaskManager}\n   */\n  get taskManager() {\n    return this[TaskManager];\n  }\n\n  /**\n   * RibbonTaskExecuter instance.\n   * @return {RibbonTaskExecuter}\n   */\n  get taskExecuter() {\n    return this[TaskExecuter];\n  }\n\n  /**\n   * Register RibbonTask.\n   * @param {string} taskId - Task Identification.\n   * @param {RibbonTask} task - Content instance of RibbonTask.\n   * @return {bool} - If task is not type of RibbonTask or registered, it will return false.\n   */\n  registerTask( taskId, task ) {\n    if( !this.taskManager ) return false;\n\n    return this.taskManager.register( taskId, task );\n  }\n\n  /**\n   * Unregister RibbonTask.\n   * @param {string} taskId - Task Identification.\n   * @return {bool} - If task is not registered, it will return false.\n   */\n  unregisterTask( taskId ) {\n    if( !this.taskManager ) return false;\n\n    return this.taskManager.unregister( taskId );\n  }\n\n  /**\n   * Execute registered RibbonTask.\n   * @param {string} taskId - Task Identification.\n   * @return {bool} - If task is not registered or failed to execute, it will return false.\n   */\n  executeTask( taskId, options ) {\n    if( !this.taskExecuter ) return false;\n\n    return this.taskExecuter.execute( taskId, options );\n  }\n\n  /**\n   * Discard executed RibbonTask.\n   * @param {string} taskId - Task Identification.\n   * @return {bool} - If task is not registered or failed to discard changes, it will return false.\n   */\n  discardTask( taskId ) {\n    if( !this.taskExecuter ) return false;\n\n    return this.taskExecuter.discard( taskId );\n  }\n\n  /**\n   * Start UI rendering.\n   * @return {Promise} - Result.\n   * @resolve {RibbonCtrl} - Self RibbonCtrl instance.\n   * @reject {object} - Errors.\n   */\n  run() {\n    const scope = this;\n\n    return new Promise( ( resolve, reject ) => {\n      try {\n        const container = scope.container;\n        const taskManager = scope.taskManager;\n\n        scope[MainRibbon] = ReactDOM.render( <Ribbon />, container );\n        scope[TaskExecuter] = new RibbonTaskExecuter( scope.mainRibbon, taskManager );\n\n        resolve( scope );\n      } catch( error ) {\n        reject( error );\n      }\n    });\n  }\n}\n","/**\n * @author yiskang / http://github.com/yiskang\n */\n\n'use strict';\n\nimport RibbonBaseData from './RibbonBaseData';\nimport RibbonTitlebarData from './RibbonTitlebarData';\nimport RibbonTabData from './RibbonTabData';\nimport RibbonAppTabData from './RibbonAppTabData';\nimport RibbonPanelData from './RibbonPanelData';\nimport RibbonAppMenuItemData from './RibbonAppMenuItemData';\nimport RibbonAppMenuButtonData from './RibbonAppMenuButtonData';\nimport RibbonItemData from './RibbonItemData';\nimport RibbonButtonData from './RibbonButtonData';\nimport RibbonPushButtonData from './RibbonPushButtonData';\nimport RibbonToggleButtonData from './RibbonToggleButtonData';\nimport RibbonTooltipData from './RibbonTooltipData';\nimport RibbonGroupData from './RibbonGroupData';\nimport RibbonRadioButtonGroupData from './RibbonRadioButtonGroupData';\n\nconst Data = {\n  RibbonBaseData,\n  RibbonTitlebarData,\n  RibbonTabData,\n  RibbonAppTabData,\n  RibbonPanelData,\n  RibbonAppMenuItemData,\n  RibbonAppMenuButtonData,\n  RibbonItemData,\n  RibbonButtonData,\n  RibbonPushButtonData,\n  RibbonToggleButtonData,\n  RibbonTooltipData,\n  RibbonGroupData,\n  RibbonRadioButtonGroupData\n};\n\nexport default Data;\n","/**\n * @author yiskang / http://github.com/yiskang\n */\n\n'use strict';\n\nimport Ribbon from './Ribbon';\nimport RibbonBase from './RibbonBase';\nimport RibbonTab from './RibbonTab';\nimport RibbonAppTab from './RibbonAppTab';\nimport RibbonAppMenuItem from './RibbonAppMenuItem';\nimport RibbonAppMenuButton from './RibbonAppMenuButton';\nimport RibbonPanel from './RibbonPanel';\nimport RibbonTitlebar from './RibbonTitlebar';\nimport RibbonItem from './RibbonItem';\nimport RibbonButton from './RibbonButton';\nimport RibbonTooltip from './RibbonTooltip';\nimport RibbonPushButton from './RibbonPushButton';\nimport RibbonToggleButton from './RibbonToggleButton';\nimport RibbonGroup from './RibbonGroup';\nimport RibbonRadioButtonGroup from './RibbonRadioButtonGroup';\nimport RibbonCtrl from './RibbonCtrl';\nimport RibbonTask from './RibbonTask';\nimport RibbonTaskManager from './RibbonTaskManager';\nimport RibbonTaskExecuter from './RibbonTaskExecuter';\nimport Utility from './utility';\nimport Data from './data';\n\nconst ReactRibbon = {\n  Ribbon,\n  RibbonBase,\n  RibbonTab,\n  RibbonAppTab,\n  RibbonAppMenuItem,\n  RibbonAppMenuButton,\n  RibbonPanel,\n  RibbonTitlebar,\n  RibbonItem,\n  RibbonButton,\n  RibbonTooltip,\n  RibbonPushButton,\n  RibbonToggleButton,\n  RibbonGroup,\n  RibbonRadioButtonGroup,\n  RibbonCtrl,\n  RibbonTask,\n  RibbonTaskManager,\n  RibbonTaskExecuter,\n  Utility,\n  Data\n};\n\n/**\n * Module exposure.\n */\nexport default ReactRibbon;"],"names":["Actived","Items","Panels","Seperator","Content","Current","Default","RibbonInst","Tasks","TaskManager"],"mappings":"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"}
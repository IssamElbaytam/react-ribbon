{"version":3,"file":null,"sources":["../src/js/utility.js","../src/js/data/RibbonBaseData.js","../src/js/data/RibbonTabData.js","../src/js/data/RibbonAppTabData.js","../src/js/data/RibbonTitlebarData.js","../src/js/RibbonBase.jsx","../src/js/RibbonTitlebar.jsx","../src/js/RibbonItem.jsx","../src/js/RibbonTooltip.jsx","../src/js/data/RibbonTooltipData.js","../src/js/RibbonButton.jsx","../src/js/RibbonPushButton.jsx","../src/js/RibbonToggleButton.jsx","../src/js/data/RibbonItemData.js","../src/js/data/RibbonButtonData.js","../src/js/data/RibbonPushButtonData.js","../src/js/data/RibbonToggleButtonData.js","../src/js/RibbonGroup.jsx","../src/js/RibbonRadioButtonGroup.jsx","../src/js/data/RibbonGroupData.js","../src/js/data/RibbonRadioButtonGroupData.js","../src/js/RibbonPanel.jsx","../src/js/data/RibbonPanelData.js","../src/js/RibbonTab.jsx","../src/js/RibbonAppMenuItem.jsx","../src/js/data/RibbonAppMenuItemData.js","../src/js/RibbonAppTab.jsx","../src/js/Ribbon.jsx","../src/js/RibbonTask.js","../src/js/RibbonTaskManager.js","../src/js/RibbonTaskExecuter.js","../src/js/RibbonCtrl.jsx","../src/js/data/index.js","../src/js/index.js","../src/js/test/RibbonCtrl.js","../src/js/test/modules.js","../src/js/test/tasks/DemoTask.js","../src/js/test/tasks/ViewerDemoTask.js","../src/js/test/index.js"],"sourcesContent":["/**\n * @author yiskang / http://github.com/yiskang\n */\n\n'use strict';\n\n/**\n * Create new RFC4122 v4 GUID based on timeStamp.\n * @return {string}\t- New guid\n */\nexport const newGUID = () => {\n\tvar d = new Date().getTime();\n\n\tvar guid = 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(\n\t\t/[xy]/g,\n\t\t( c ) => {\n\t\t\tvar r = ( d + Math.random() * 16 ) % 16 | 0;\n\t\t\td = Math.floor( d / 16 );\n\t\t\treturn ( c == 'x' ? r : ( r & 0x3 | 0x8 ) ).toString( 16 );\n\t\t});\n\n\treturn guid;\n};\n\n/**\n * Check input is GUID.\n * @param {string} - Target guid.\n * @return {bool} -\tIf the input is a GUID, then return true.\n */\nexport const isGUID = ( guid ) => {\n\t//const pattern = /^[0-9a-f]{4}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{4}$/i;\n\tconst pattern = /^[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$/i;\n\treturn pattern.test( guid );\n};\n\n/**\n * Find proper (first) item suited with input condition in an array.\n * @param {array} items -\tArray of searching target.\n * @param {func} predicate - Predicate function for describe which item is goingo to return.\n * @return {object} - Target item.\n */\nexport const findItem = ( items = [], predicate ) => {\n\tpredicate = ( predicate instanceof Function ) ? predicate : ( item ) => { return true };\n\n\tfor( let i = 0; i < items.length; i++ ) {\n\t\tlet item = items[i];\n\t\tif( predicate( item ) ) return item;\n\t}\n};\n\n/**\n * Create namespace.\n * @param {string} s - namespace (e.g. 'RiibonUI.Ribbon').\n * @return {Object} - Namespace,\n */\t\nexport const namespace = ( s ) => {\n\tvar ns = typeof window !== 'undefined' && window !== null ? window : self;\n\n\tvar parts = s.split( '.' );\n\tfor( var i = 0; i < parts.length; i++ ) {\n\t\tns[ parts[i] ] = ns[ parts[i] ] || {};\n\t\tns = ns[ parts[i] ];\n\t}\n\n\treturn ns;\n};\n\nconst utility = {\n\tnewGUID,\n\tisGUID,\n\tfindItem,\n\tnamespace\n};\n\nexport default utility;\n","/**\n * @author yiskang / http://github.com/yiskang\n */\n\n'use strict';\n\nimport { newGUID } from '../utility';\n\nconst Id = Symbol( 'id' );\nconst Name = Symbol( 'name' );\nconst DisplayName = Symbol( 'displayName' );\nconst Enabled = Symbol( 'enabled' );\nconst Hidden = Symbol( 'hidden' );\n\n/**\n * RibbonBaseData\n * @class\n */\nexport default class RibbonBaseData {\n\t/**\n\t * RibbonBaseData constructor\n\t * @param {string} name - The name of this instance used by the internal mechanism.\n\t * @param {string} displayName - The name of this instance shown on the user interface, might be a localized string.\n\t */\n\tconstructor( name, displayName ) {\n\t\tif( typeof name !== 'string' ) throw 'name is required.';\n\n\t\tthis[Id] = newGUID();\n\t\tthis[Name] = name;\n\t\tthis[DisplayName] = ( typeof name !== 'string' ) ? name : displayName;\n\t\tthis[Enabled] = true;\n\t\tthis[Hidden] = false;\n\t}\n\n\t/**\n\t * Instance uuid used by the internal mechanism.\n\t * @return {string} - The UUID.\n\t */\n\tget id() {\n\t\treturn this[Id];\n\t}\n\n\t/**\n\t * Instance name used by the internal mechanism.\n\t * @return {string} - Instance name.\n\t */\n\tget name() {\n\t\treturn this[Name];\n\t}\n\n\t/**\n\t * Instance name shown on the user interface, might be a localized string.\n\t * @return {string} - Instance name.\n\t */\n\tget displayName() {\n\t\treturn this[DisplayName];\n\t}\n\n\t/**\n\t * Instance name shown on the user interface, might be a localized string.\n\t * @param {string} [name] - Instance name.\n\t */\n\tset displayName( name ) {\n\t\tif( typeof name !== 'string' ) throw 'Input type should be a string.';\n\n\t\tthis[DisplayName] = name;\n\t}\n\n\t/**\n\t * Instance edis/en-able status.\n\t * @return {bool} - If false, make instance be disabled.\n\t */\n\tget enabled() {\n\t\treturn this[Enabled];\n\t}\n\n\t/**\n\t * Instance edis/en-able status.\n\t * @return {bool} [enabled = true] - If false, make instance be disabled.\n\t */\n\tset enabled( enabled = true ) {\n\t\tthis[Enabled] = ( enabled === true );\n\t}\n\n\t/**\n\t * Instance is hidden or not.\n\t * @return {bool} - If false, instance is going to disppear on the UI.\n\t */\n\tget hidden() {\n\t\treturn this[Hidden];\n\t}\n\n\t/**\n\t * Instance edis/en-able status.\n\t * @return {bool} [hidden = false] - If false, instance is going to disppear on the UI.\n\t */\n\tset hidden( hidden = false ) {\n\t\tthis[Hidden] = ( hidden === true );\n\t}\n}\n","/**\n * @author yiskang / http://github.com/yiskang\n */\n\n'use strict';\n\nimport RibbonBaseData from './RibbonBaseData';\n\nconst\tActived = Symbol( 'actived' );\nconst Panels = Symbol( 'panels' );\n\n/**\n * RibbonTabData\n * @extends RibbonBaseData\n * @class\n */\nexport default class RibbonTabData extends RibbonBaseData {\n\t/**\n\t * RibbonTabData constructor\n\t * @param {string} name - The name of this instance used by the internal mechanism.\n\t * @param {string} displayName - The name of this instance shown on the user interface, might be a localized string.\n\t */\n\tconstructor( name, displayName ) {\n\t\tsuper( name, displayName );\n\n\t\tthis[Actived] = false;\n\t\tthis[Panels] = [];\n\t}\n\n\t/**\n\t * Tab type.\n\t * @return {string} - Tab type for identification.\n\t */\n\tget type() {\n\t\treturn 'ui-ribbon-tab-normal';\n\t}\n\n\t/**\n\t * Tab actived state.\n\t * @return {bool} - If true, it repsents tab is selected currently.\n\t */\n\tget actived() {\n\t\treturn this[Actived]\n\t}\n\t\n\t/**\n\t * Tab actived state.\n\t * @return {bool} [actived = false] - If true, it repsents tab is selected currently.\n\t */\n\tset actived( actived = false ) {\n\t\tthis[Actived] = ( actived === true );\n\t}\n\n\t/**\n\t * Tab's children panels\n\t * @return {RibbonPanelData[]} - Ribbon panel data.\n\t */\n\tget panels() {\n\t\treturn this[Panels];\n\t}\n\n\t/**\n\t * Tab's children panels\n\t * @param {RibbonPanelData[]} [panels = []] - Ribbon panel data.\n\t */\n\tset panels( panels = [] ) {\n\t\tthis[Panels] = panels;\n\t}\n}\n","/**\n * @author yiskang / http://github.com/yiskang\n */\n\n'use strict';\n\nimport RibbonTabData from './RibbonTabData';\n\nconst Items = Symbol( 'items' );\n\n/**\n * RibbonAppTabData\n * @class\n */\nexport default class RibbonAppTabData extends RibbonTabData {\n\t/**\n\t * RibbonAppTabData constructor\n\t * @param {string} [displayName = 'File'] - The name of this instance shown on the user interface, might be a localized string.\n\t */\n\tconstructor( displayName = 'File' ) {\n\t\tsuper( 'AppTab', displayName );\n\n\t\tthis[Items] = [];\n\t}\n\n\t/**\n\t * Tab type.\n\t * @return {string} - Tab type for identification.\n\t * @override\n\t */\n\tget type() {\n\t\treturn 'ui-ribbon-tab-application';\n\t}\n\n\t/**\n\t * Panel's children items.\n\t * @return {RibbonItemData[]} - Ribbon item data.\n\t */\n\tget items() {\n\t\treturn this[Items];\n\t}\n\n\t/**\n\t * Panel's children items.\n\t * @return {RibbonItemData[]} [items = []]- Ribbon item data.\n\t */\n\tset items( items = [] ) {\n\t\tthis[Items] = items;\n\t}\n}\n","/**\n * @author yiskang / http://github.com/yiskang\n */\n\n'use strict';\n\nimport RibbonBaseData from './RibbonBaseData';\n\n/**\n * RibbonTitlebarData\n * @class\n */\nexport default class RibbonTitlebarData extends RibbonBaseData {\n\t/**\n\t * RibbonTitlebarData constructor\n\t * @param {string} title - The name of this instance shown on the user interface, might be a localized string.\n\t */\n\tconstructor( title ) {\n\t\tif( typeof title !== 'string' ) title = 'React Ribbon';\n\n\t\tsuper( 'AppTitlebar', title );\n\t}\n\n\t/**\n\t * App title.\n\t * @return {string}\n\t */\n\tget title() {\n\t\treturn this.displayName;\n\t}\n\n\t/**\n\t * App title\n\t * @param {string} title\n\t */\n\tset title( title ) {\n\t\tthis.displayName = title;\n\t}\n}\n","/**\n * @author yiskang / http://github.com/yiskang\n */\n\n'use strict';\n\nimport React from 'react';\nimport { newGUID } from './utility';\n\n/**\n * RibbonBase\n * @extends React.Component\n * @class\n */\nexport default class RibbonBase extends React.Component {\n\t/**\n\t * RibbonBase constructor\n\t * @param {object} props - React component properties\n\t */\n\tconstructor( props ) {\n\t\tsuper( props );\n\n\t\tlet displayName = ( typeof props.displayName === 'string' ) ? props.displayName : name;\n\t\tlet enabled = ( props.enabled == false ) ? false : true;\n\t\tlet hidden = ( props.hidden === true )\n\n\t\tthis.state = {\n\t\t\tdisplayName,\n\t\t\tenabled,\n\t\t\thidden\n\t\t};\n\t}\n\n\t/**\n\t * Instance id for internal identification and HTML id attribute.\n\t * @return {string} - The UUID.\n\t */\n\tget id() {\n\t\treturn this.props.id;\n\t}\n\n\t/**\n\t * Instance name for internal identification.\n\t * @return {string} - Instance name.\n\t */\n\tget name() {\n\t\treturn this.props.name;\n\t}\n\n\t/**\n\t * Instance name shown on the user interface, might be a localized string.\n\t * @return {string} - Instance name.\n\t */\n\tget displayName() {\n\t\treturn this.state.displayName;\n\t}\n\n\t/**\n\t * Instance name shown on the user interface, might be a localized string.\n\t * @param {string} - Instance name.\n\t */\n\tset displayName( name ) {\n\t\tif( typeof name !== 'string' ) throw 'Input type should be a string.';\n\n\t\tconst prop = { displayName: name };\n\t\tconst onStateChange = this.props.onStateChange;\n\t\tonStateChange && onStateChange( this.id, prop );\n\n\t\tthis.setState( prop );\n\t}\n\n\t/**\n\t * Instance edis/en-able status.\n\t * @return {bool} - If false, make instance be disabled.\n\t */\n\tget enabled() {\n\t\treturn this.state.enabled;\n\t}\n\t\n\t/**\n\t * Instance edis/en-able status.\n\t * @param {bool} [enabled = true] - If false, make instance be disabled.\n\t */\n\tset enabled( enabled = true ) {\n\t\tif( this.hidden ) return;\n\n\t\tconst isEnabled = ( enabled === true );\n\n\t\tconst prop = { enabled: isEnabled };\n\t\tconst onStateChange = this.props.onStateChange;\n\t\tonStateChange && onStateChange( this.id, prop );\n\n\t\tthis.setState( prop );\n\t}\n\n\t/**\n\t * Instance is hidden or not.\n\t * @return {bool} - If false, instance is going to disppear on the UI.\n\t */\n\tget hidden() {\n\t\treturn this.state.hidden;\n\t}\n\t\n\t/**\n\t * Instance is hidden or not.\n\t * @return {bool} [hidden = false]- If false, instance is going to disppear on the UI.\n\t */\n\tset hidden( hidden = false ) {\n\t\tconst isHidden = ( hidden === true );\n\t\tconst isEnabled = !isHidden;\n\n\t\tconst prop = { hidden: isHidden, enabled: isEnabled };\n\t\tconst onStateChange = this.props.onStateChange;\n\t\tonStateChange && onStateChange( this.id, prop );\n\n\t\tthis.setState( prop );\n\t}\n}\n\nRibbonBase.propTypes = {\n\tid: React.PropTypes.string.isRequired,\n\tname: React.PropTypes.string.isRequired,\n\tdisplayName: React.PropTypes.string,\n\tenabled: React.PropTypes.bool,\n\thidden: React.PropTypes.bool,\n\tonStateChange: React.PropTypes.func\n};\n\nRibbonBase.defaultProps = {\n\tid: newGUID(),\n\tenabled: true,\n\thidden: false\n};\n","/**\n * @author yiskang / http://github.com/yiskang\n */\n\n'use strict';\n\nimport React from 'react';\nimport ClassNames from 'classnames';\nimport RibbonBase from './RibbonBase';\n\n/**\n * RibbonTitlebar\n * @class\n */\nexport default class RibbonTitlebar extends RibbonBase {\n\t/**\n\t * RibbonTitlebar constructor\n\t * @param {object} props - React component properties\n\t */\n\tconstructor( props ) {\n\t\tsuper( props );\n\t}\n\n\t/**\n\t * Ribbon main title\n\t * @return {string} - Ribbon title\n\t */\n\tget title() {\n\t\treturn this.displayName;\n\t}\n\n\t/**\n\t * Ribbon main title\n\t * @param {string} title - Ribbon title\n\t */\n\tset title( title ) {\n\t\tif( typeof title !== 'string' ) throw 'Input type should be a string.';\n\n\t\tthis.displayName = title;\n\t}\n\n\t/**\n\t * Toggle titlebar be displayed or hiden.\n\t */\n\ttoggleDisplay() {\n\t\tthis.hidden = ( !this.hidden );\n\t}\n\n\trender() {\n\t\tconst dynCSS = ClassNames({\n\t\t\t'ui-ribbon-invisible': this.hidden\n\t\t});\n\n\t\treturn (\n\t\t\t<div className={ \"ui-ribbon-title \" + dynCSS }>\n\t\t\t\t<span>{ this.title }</span>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nRibbonTitlebar.propTypes = {\n\tonStateChange: React.PropTypes.func\n};\n","/**\n * @author yiskang / http://github.com/yiskang\n */\n\n'use strict';\n\nimport React from 'react';\nimport ClassNames from 'classnames';\nimport RibbonBase from './RibbonBase';\nimport { newGUID } from './utility';\n\n/**\n * RibbonItem\n * @extends RibbonBase\n * @class\n */\nexport default class RibbonItem extends RibbonBase {\n\t/**\n\t * RibbonItem constructor\n\t * @param {object} props - React component properties\n\t */\n\tconstructor( props ) {\n\t\tsuper( props );\n\t\t\n\t\tlet actived = ( props.actived === true );\n\n\t\tthis.state = Object.assign( this.state, { actived } );\n\t}\n\n\t/**\n\t * Item type.\n\t * @return {string} - Item type for identification.\n\t */\n\tget type() {\n\t\treturn this.props.type;\n\t}\n\t\n\t/**\n\t * Item actived state.\n\t * @return {bool} - If true, it repsents item is actived currently.\n\t */\n\tget actived() {\n\t\treturn this.state.actived;\n\t}\n\n\t/**\n\t * Item actived state.\n\t * @return {bool} [actived = false] - If true, it repsents item is actived currently.\n\t */\n\tset actived( actived = false ) {\n\t\tconst isActived = ( actived === true );\n\t\tconst prop = { actived: isActived };\n\n\t\tconst onStateChange = this.props.onStateChange;\n\t\tonStateChange && onStateChange( this.id, prop );\n\n\t\tthis.setState( prop );\n\t}\n}\n\nRibbonItem.propTypes = {\n\tid: React.PropTypes.string.isRequired,\n\ttype: React.PropTypes.string.isRequired,\n\tactived: React.PropTypes.bool,\n\tonStateChange: React.PropTypes.func\n};\n\nRibbonItem.defaultProps = {\n\tid: newGUID(),\n\ttype: 'ui-ribbon-panel-item',\n\tactived: false\n};\n","/**\n * @author yiskang / http://github.com/yiskang\n */\n\n'use strict';\n\nimport React from 'react';\nimport ClassNames from 'classnames';\nimport RibbonBase from './RibbonBase';\n\n/**\n * RibbonTooltip\n * @class\n */\nexport default class RibbonTooltip extends RibbonBase {\n\t/**\n\t * RibbonTooltip constructor\n\t * @param {object} props - React component properties\n\t */\n\tconstructor( props ) {\n\t\tsuper( props );\n\n\t\tthis.state = Object.assign( this.state,\n\t\t\t{\n\t\t\t\tcontent: props.content\n\t\t\t});\n\t}\n\n\t/**\n\t * Tooltip title.\n\t * @return {string} - Ribbon tooltip title.\n\t */\n\tget title() {\n\t\treturn this.displayName;\n\t}\n\n\t/**\n\t * Tooltip title.\n\t * @return {string} title - Ribbon tooltip title.\n\t */\n\tset title( title ) {\n\t\tif( typeof title !== 'string' ) throw 'Input type should be a string.';\n\n\t\tthis.displayName = title;\n\t}\n\n\t/**\n\t * Tooltip content.\n\t * @return {string} - Tooltip content.\n\t */\n\tget content() {\n\t\treturn this.state.content;\n\t}\n\n\t/**\n\t * Tooltip content.\n\t * @return {string} - Tooltip content.\n\t */\n\tset content( content = '' ) {\n\t\tif( typeof content !== 'string' ) throw 'Input content should be a string.';\n\n\t\tconst prop = { content };\n\t\tconst onStateChange = this.props.onStateChange;\n\t\tonStateChange && onStateChange( this.id, prop );\n\n\t\tthis.setState( prop );\n\t}\n\t\n\t/**\n\t * Instance is hidden or not.\n\t * @return {bool} - If false, instance is going to disppear on the UI.\n\t * @override\n\t */\n\tget hidden() {\n\t\treturn this.state.hidden;\n\t}\n\t\n\t/**\n\t * Instance is hidden or not.\n\t * @return {bool} [hidden = false]- If false, instance is going to disppear on the UI.\n\t * @override\n\t */\n\tset hidden( hidden = false ) {\n\t\tconst isHidden = ( hidden === true );\n\n\t\tconst prop = { hidden: isHidden };\n\t\tconst onStateChange = this.props.onStateChange;\n\t\tonStateChange && onStateChange( this.id, prop );\n\n\t\tthis.setState( prop );\n\t}\n\n\t/**\n\t * Make this tooltip appear.\n\t */\n\tshow() {\n\t\tthis.hidden = false;\n\t}\n\n\t/**\n\t * Make this tooltip disappear.\n\t */\n\thide() {\n\t\tthis.hidden = true;\n\t}\n\n\trender() {\n\t\tconst dynCSS = ClassNames({\n\t\t\t'ui-ribbon-tooltip-visible': ( this.hidden === false )\n\t\t});\n\n\t\tconst createTitle = () => {\n\t\t\tif( this.title )\n\t\t\t\treturn ( <strong>{ this.title }</strong> );\n\t\t};\n\n\t\tconst createContent = () => {\n\t\t\tif( this.content )\n\t\t\t\treturn ( <p>{ this.content }</p> );\n\t\t};\n\n\t\treturn (\n\t\t\t<div id={ this.id } className={ \"ui-ribbon-tooltip \" + dynCSS }>\n\t\t\t\t{ createTitle() }\n\t\t\t\t{ createContent() }\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nRibbonTooltip.propTypes = {\n\tcontent: React.PropTypes.string,\n\tonStateChange: React.PropTypes.func\n};\n","/**\n * @author yiskang / http://github.com/yiskang\n */\n\n'use strict';\n\nimport RibbonBaseData from './RibbonBaseData';\nimport { newGUID } from '../utility';\n\nconst Content = Symbol( 'content' );\n\n/**\n * RibbonTooltipData\n * @extends RibbonBaseData\n * @class\n */\nexport default class RibbonTooltipData extends RibbonBaseData {\n\t/**\n\t * RibbonTooltipData constructor\n\t * @param {string} name - The name of this instance used by the internal mechanism.\n\t * @param {string} displayName - The name of this instance shown on the user interface, might be a localized string.\n\t */\n\tconstructor( title, content ) {\n\t\tif( typeof title !== 'string' ) throw 'Tooltip title cannot be empty.';\n\n\t\tsuper( 'RibbonTooltip', title );\n\n\t\tthis[Content] = ( typeof content !== 'string' ) ? undefined : content;\n\t\tthis.hidden = true;\n\t}\n\t\n\t/**\n\t * App title.\n\t * @return {string}\n\t */\n\tget title() {\n\t\treturn this.displayName;\n\t}\n\n\t/**\n\t * App title\n\t * @param {string} title\n\t */\n\tset title( title ) {\n\t\tthis.displayName = title;\n\t}\n\n\t/**\n\t * Tooltip content.\n\t * @return {string} - Tooltip content.\n\t */\n\tget content() {\n\t\treturn this[Content];\n\t}\n\n\t/**\n\t * Tooltip content.\n\t * @return {string} - Tooltip content.\n\t */\n\tset content( content ) {\n\t\tif( typeof content !== 'string' ) throw 'Input content should be a type of string.';\n\n\t\tthis[Content] = content;\n\t}\n}\n","/**\n * @author yiskang / http://github.com/yiskang\n */\n\n'use strict';\n\nimport React from 'react';\nimport ClassNames from 'classnames';\nimport RibbonItem from './RibbonItem';\nimport RibbonTooltip from './RibbonTooltip';\nimport RibbonTooltipData from './data/RibbonTooltipData';\nimport { newGUID } from './utility';\n\n/**\n * RibbonButton\n * @extends RibbonItem\n * @class\n */\nexport default class RibbonButton extends RibbonItem {\n\t/**\n\t * RibbonButton constructor\n\t * @param {object} props - React component properties\n\t */\n\tconstructor( props ) {\n\t\tsuper( props );\n\n\t\tlet icon = props.icon;\n\t\tlet tooltip = props.tooltip;\n\t\tlet toggleable = ( props.toggleable === true );\n\t\tlet clickHandler = props.clickHandler;\n\n\t\tthis.state = Object.assign( this.state,\n\t\t\t{\n\t\t\t\ticon,\n\t\t\t\ttooltip,\n\t\t\t\ttoggleable,\n\t\t\t\tclickHandler\n\t\t\t});\n\n\t\tthis.handleClick = this.handleClick.bind( this );\n\t\tthis.handleMouseOver = this.handleMouseOver.bind( this );\n\t\tthis.handleMouseOut = this.handleMouseOut.bind( this );\n\t}\n\n\t/**\n\t * Button role.\n\t * @return {string}\n\t */\n\tget role() {\n\t\treturn this.props.role;\n\t}\n\n\t/**\n\t * Button icon.\n\t * @return {string} - Button icon path.\n\t */\n\tget icon() {\n\t\treturn this.state.icon;\n\t}\n\t\n\t/**\n\t * Button icon.\n\t * @return {string} icon - Button icon path.\n\t */\n\tset icon( icon ) {\n\t\tif( typeof icon !== 'string' ) throw 'Input type should be a string.';\n\n\t\tconst prop = { icon };\n\t\tconst onStateChange = this.props.onStateChange;\n\t\tonStateChange && onStateChange( this.id, prop );\n\n\t\tthis.setState( prop );\n\t}\n\n\t/**\n\t * Button toggleable state.\n\t * @return {bool} - If true, it repsents button is toggled currently.\n\t */\n\tget toggleable() {\n\t\treturn this.state.toggleable;\n\t}\n\n\t/**\n\t * Button toggleable state.\n\t * @return {bool} [toggleable = false] - If true, it repsents button is toggled currently.\n\t */\n\tset toggleable( toggleable = false ) {\n\t\tconst isToggleable = ( toggleable === true );\n\n\t\tconst prop = { toggleable: isToggleable };\n\t\tconst onStateChange = this.props.onStateChange;\n\t\tonStateChange && onStateChange( this.id, prop );\n\n\t\tthis.setState( prop );\n\t}\n\n\t/**\n\t * Button click eveent handler.\n\t * @return {Function} - Click eveent handler.\n\t */\n\tget clickHandler() {\n\t\treturn this.state.clickHandler;\n\t}\n\n\t/**\n\t * Button click eveent handler.\n\t * @param {Function} handler - Click eveent handler.\n\t */\n\tset clickHandler( handler ) {\n\t\tif( !(handler instanceof Function) )\n\t\t\tthrow 'Input clicking handler is invalid.';\n\n\t\tconst prop = { clickHandler: handler };\n\t\tconst onStateChange = this.props.onStateChange;\n\t\tonStateChange && onStateChange( this.id, prop );\n\n\t\tthis.setState( prop );\n\t}\n\n\t/**\n\t * Button tooltip comopent.\n\t * @return {RibbonTooltip} - Rendered RibbonTooltip component.\n\t */\n\tget tooltip() {\n\t\treturn this.refs.tooltip;\n\t}\n\n\tset tooltip( tooltip ) {\n\t\tif( !(tooltip instanceof RibbonTooltipData) )\n\t\t\tthrow '[RibbonButton] Input tooltip data is invalid.';\n\n\t\tconst prop = { tooltip };\n\t\tconst onStateChange = this.props.onStateChange;\n\t\tonStateChange && onStateChange( this.id, prop );\n\n\t\tthis.setState( prop );\n\t}\n\n\t/**\n\t * Create tooltip\n\t * @return {RibbonTooltip} - RibbonTooltip instance (not rendered).\n\t */\n\tcreateTooltip() {\n\t\tconst scope = this;\n\t\tconst data = this.state.tooltip;\n\t\tif( !data ) return;\n\n\t\tif( !(data instanceof RibbonTooltipData) && data )\n\t\t\treturn console.log( '%c[RibbonButton] Input tooltip data is invalid.', 'color:red;' );\n\n\t\tconst updateTooltip = ( id, data ) => {\n\t\t\tlet tooltip = scope.state.tooltip;\n\n\t\t\tif( tooltip.id !== id ) return;\n\n\t\t\tObject.assign( tooltip, data );\n\n\t\t\tconst prop = { tooltip };\n\t\t\tconst onStateChange = scope.props.onStateChange;\n\t\t\tonStateChange && onStateChange( scope.id, prop );\n\n\t\t\tscope.setState( prop );\n\t\t};\n\n\t\treturn (\n\t\t\t<RibbonTooltip\n\t\t\t\tkey={ data.id }\n\t\t\t\tid={ data.id }\n\t\t\t\tname={ data.name }\n\t\t\t\tdisplayName={ data.title }\n\t\t\t\tcontent={ data.content }\n\t\t\t\tenabled={ data.enabled }\n\t\t\t\thidden={ data.hidden }\n\t\t\t\tonStateChange={ updateTooltip }\n\t\t\t\tref=\"tooltip\" />\n\t\t);\n\t}\n\n\t/**\n\t * Button clicking event handler.\n\t */\n\thandleClick( event ) {\n\t\tif( !this.enabled ) return;\n\n\t\tconst clickHandler = this.props.clickHandler;\n\t\tclickHandler && clickHandler( event );\n\t}\n\n\t/**\n\t * Button hovering over event handler.\n\t */\n\thandleMouseOver() {\n\t\tconst tooltip = this.tooltip;\n\t\ttooltip && tooltip.show();\n\t}\n\n\t/**\n\t * Button hovering out event handler.\n\t */\n\thandleMouseOut() {\n\t\tconst tooltip = this.tooltip;\n\t\ttooltip && tooltip.hide();\n\t}\n\n\trender() {\n\t\tconst outerDynCSS = ClassNames({\n\t\t\t'ui-ribbon-disabled': ( this.enabled === false ),\n\t\t\t'ui-ribbon-invisible': this.hidden\n\t\t});\n\n\t\tconst innerDynCSS = ClassNames({\n\t\t\t'ui-ribbon-active': this.actived\n\t\t});\n\n\t\tconst formatLegend = ( legend ) => {\n\t\t\tconst texts = legend.split( '\\\\n' );\n\t\t\tlet guid = newGUID();\n\t\t\tlet result = <span key={ guid } id={ guid }>{ legend }</span>;\n\n\t\t\tif( texts.length > 1 ) {\n\t\t\t\tresult = texts.map(( txt ) => {\n\t\t\t\t\t\tlet guid = newGUID();\n\t\t\t\t\t\treturn ( \n\t\t\t\t\t\t\t<span key={ guid } id={ guid }>\n\t\t\t\t\t\t\t\t{ txt }\n\t\t\t\t\t\t\t\t<br />\n\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t);\n\t\t\t\t\t});\n\t\t\t}\n\t\t\treturn result;\n\t\t};\n\n\t\treturn (\n\t\t\t<a\n\t\t\t\tkey={ this.id }\n\t\t\t\tid={ this.id }\n\t\t\t\tclassName={ outerDynCSS }\n\t\t\t\tonClick={ this.handleClick }\n\t\t\t\tonMouseOver={ this.handleMouseOver }\n\t\t\t\tonMouseOut={ this.handleMouseOut } >\n\n\t\t\t\t<div\n\t\t\t\t\trole={ this.role }\n\t\t\t\t\tclassName={ \"ui-ribbon-button \" + this.type + \" ui-ribbon-relative ui-ribbon-inline ui-ribbon-center \" + innerDynCSS } >\n\n\t\t\t\t\t<img src={ this.icon } />\n\t\t\t\t\t<div className=\"ui-ribbon-button-legend\">\n\t\t\t\t\t\t{ formatLegend( this.displayName ) }\n\t\t\t\t\t</div>\n\t\t\t\t\t{ this.createTooltip() }\n\t\t\t\t</div>\n\t\t\t</a>\n\t\t);\n\t}\n}\n\nRibbonButton.propTypes = {\n\tid: React.PropTypes.string.isRequired,\n\trole: React.PropTypes.string.isRequired,\n\ttype: React.PropTypes.string.isRequired,\n\ticon: React.PropTypes.string,\n\ttooltip: React.PropTypes.instanceOf( RibbonTooltipData ),\n\ttoggleable: React.PropTypes.bool,\n\tclickHandler: React.PropTypes.func,\n\tonStateChange: React.PropTypes.func\n};\n\nRibbonButton.defaultProps = {\n\tid: newGUID(),\n\trole: 'ui-ribbon-button',\n\ttype: 'ui-ribbon-button',\n\ticon: '',\n\ttoggleable: false\n};\n","/**\n * @author yiskang / http://github.com/yiskang\n */\n\n'use strict';\n\nimport React from 'react';\nimport ClassNames from 'classnames';\nimport RibbonButton from './RibbonButton';\n\n/**\n * RibbonPushButton\n * @class\n */\nexport default class RibbonPushButton extends RibbonButton {\n\t/**\n\t * RibbonPushButton constructor\n\t * @param {object} props - React component properties\n\t */\n\tconstructor( props ) {\n\t\tsuper( props );\n\t}\n\n\trender() {\n\t\tconst dynCSS = ClassNames({\n\t\t\t'ui-ribbon-disabled': ( this.enabled === false ),\n\t\t\t'ui-ribbon-invisible': this.hidden\n\t\t});\n\n\t\treturn (\n\t\t\t<div className={ \"ui-ribbon-button-group ui-ribbon-inline \" + dynCSS }>\n\t\t\t\t{ super.render() }\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nRibbonPushButton.propTypes = {\n\ttype: React.PropTypes.string.isRequired,\n\tonStateChange: React.PropTypes.func\n};\n\nRibbonPushButton.defaultProps = {\n\ttype: 'ui-ribbon-button-big'\n};\n","/**\n * @author yiskang / http://github.com/yiskang\n */\n\n'use strict';\n\nimport React from 'react';\nimport ClassNames from 'classnames';\nimport RibbonPushButton from './RibbonPushButton';\n\n/**\n * RibbonToggleButton\n * @class\n */\nexport default class RibbonToggleButton extends RibbonPushButton {\n\t/**\n\t * RibbonToggleButton constructor\n\t * @param {object} props - React component properties\n\t */\n\tconstructor( props ) {\n\t\tsuper( props );\n\n\t\tthis.handleClick = this.handleClick.bind( this );\n\t}\n\n\t/**\n\t * Button clicking event handler.\n\t * @override\n\t */\n\thandleClick( event ) {\n\t\tif( !this.enabled ) return;\n\n\t\tif( this.toggleable ) {\n\t\t\tconst isActived = !this.actived;\n\n\t\t\tconst prop = { actived: isActived };\n\t\t\tconst onStateChange = this.props.onStateChange;\n\t\t\tonStateChange && onStateChange( this.id, prop );\n\n\t\t\tthis.setState( prop );\n\n\t\t\t// For de/activating button by changing button's actived property.\n\t\t\tconst onGroupCurrentChange = this.props.onGroupCurrentChange;\n\t\t\tonGroupCurrentChange && onGroupCurrentChange();\n\t\t}\n\n\t\tconst clickHandler = this.props.clickHandler;\n\t\tclickHandler && clickHandler( event );\n\t}\n}\n\nRibbonToggleButton.propTypes = {\n\ttype: React.PropTypes.string.isRequired,\n\trole: React.PropTypes.string.isRequired,\n\tonGroupCurrentChange: React.PropTypes.func,\n\tonStateChange: React.PropTypes.func\n};\n\nRibbonToggleButton.defaultProps = {\n\trole: 'ui-ribbon-button-toggle',\n\ttype: 'ui-ribbon-button-big'\n};\n","/**\n * @author yiskang / http://github.com/yiskang\n */\n\n'use strict';\n\nimport RibbonBaseData from './RibbonBaseData';\n\nconst\tActived = Symbol( 'actived' );\n\n/**\n * RibbonItemData\n * @extends RibbonBaseData\n * @class\n */\nexport default class RibbonItemData extends RibbonBaseData {\n\t/**\n\t * RibbonItemData constructor\n\t * @param {string} name - The name of this instance used by the internal mechanism.\n\t * @param {string} displayName - The name of this instance shown on the user interface, might be a localized string.\n\t */\n\tconstructor( name, displayName ) {\n\t\tsuper( name, displayName );\n\n\t\tthis[Actived] = false;\n\t}\n\n\t/**\n\t * Item type.\n\t * @return {string} - Item type for identification.\n\t */\n\tget type() {\n\t\treturn 'ui-ribbon-panel-item';\n\t}\n\n\t/**\n\t * Item actived state.\n\t * @return {bool} - If true, it repsents item is actived currently.\n\t */\n\tget actived() {\n\t\treturn this[Actived]\n\t}\n\n\t/**\n\t * Item actived state.\n\t * @return {bool} [actived = false] - If true, it repsents item is actived currently.\n\t */\n\tset actived( actived = false ) {\n\t\tthis[Actived] = ( actived === true );\n\t}\n}\n","/**\n * @author yiskang / http://github.com/yiskang\n */\n\n'use strict';\n\nimport RibbonItemData from './RibbonItemData';\nimport RibbonTooltipData from './RibbonTooltipData';\n\nconst\tIcon = Symbol( 'icon' );\nconst Tooltip = Symbol( 'tooltip' );\nconst Toggleable = Symbol( 'toggleable' );\nconst ClickHandler = Symbol( 'clickHandler' );\n\n/**\n * RibbonButtonData\n * @extends RibbonItemData\n * @class\n */\nexport default class RibbonButtonData extends RibbonItemData {\n\t/**\n\t * RibbonButtonData constructor\n\t * @param {string} name - The name of this instance used by the internal mechanism.\n\t * @param {string} displayName - The name of this instance shown on the user interface, might be a localized string.\n\t */\n\tconstructor( name, displayName ) {\n\t\tsuper( name, displayName );\n\n\t\tthis[Icon] = '';\n\t\tthis[Tooltip] = undefined;\n\t\tthis[Toggleable] = false;\n\t\tthis[ClickHandler] = undefined;\n\t}\n\n\t/**\n\t * Button role.\n\t * @return {string}\n\t * @override\n\t */\n\tget role() {\n\t\treturn 'ui-ribbon-button';\n\t}\n\n\t/**\n\t * Button icon path.\n\t * @return {string} - Button icon full path or relative path.\n\t */\n\tget icon() {\n\t\treturn this[Icon];\n\t}\n\n\t/**\n\t * Button icon path.\n\t * @param {string} icon - Button icon full path or relative path.\n\t */\n\tset icon( icon ) {\n\t\tif( typeof icon !== 'string' ) throw 'Input type should be a string.';\n\n\t\tthis[Icon] = icon;\n\t}\n\n\t/**\n\t * Button tooltip data.\n\t * @return {RibbonTooltipData} - Ribbon button tooltip data.\n\t */\n\tget tooltip() {\n\t\treturn this[Tooltip];\n\t}\n\n\t/**\n\t * Button tooltip data.\n\t * @param {RibbonTooltipData} tooltip - Ribbon button tooltip data.\n\t */\n\tset tooltip( tooltip ) {\n\t\tif( !(tooltip instanceof RibbonTooltipData) )\n\t\t\tthrow 'Input data is not a type of RibbonTooltipData.';\n\n\t\tthis[Tooltip] = tooltip;\n\t}\n\n\t/**\n\t * Button toggleable state.\n\t * @return {bool} - If true, it repsents button is toggled currently.\n\t */\n\tget toggleable() {\n\t\treturn this[Toggleable];\n\t}\n\n\t/**\n\t * Button toggleable state.\n\t * @return {bool} [toggleable = false] - If true, it repsents button is toggled currently.\n\t */\n\tset toggleable( toggleable = false ) {\n\t\tthis[Toggleable] = ( toggleable === true );\n\t}\n\n\t/**\n\t * Button\tclick eveent handler.\n\t * @return {Function} - Click eveent handler.\n\t */\n\tget clickHandler() {\n\t\treturn this[ClickHandler];\n\t}\n\n\t/**\n\t * Button\tclick eveent handler.\n\t * @param {Function} handler - Click eveent handler.\n\t */\n\tset clickHandler( handler ) {\n\t\tif( !(handler instanceof Function) )\n\t\t\tthrow 'Input clicking handler is invalid.';\n\n\t\tthis[ClickHandler] = handler;\n\t}\n}\n","/**\n * @author yiskang / http://github.com/yiskang\n */\n\n'use strict';\n\nimport RibbonButtonData from './RibbonButtonData';\n\n/**\n * RibbonPushButtonData\n * @extends RibbonButtonData\n * @class\n */\nexport default class RibbonPushButtonData extends RibbonButtonData {\n\t/**\n\t * RibbonPushButtonData constructor\n\t * @param {string} name - The name of this instance used by the internal mechanism.\n\t * @param {string} displayName - The name of this instance shown on the user interface, might be a localized string.\n\t */\n\tconstructor( name, displayName ) {\n\t\tsuper( name, displayName );\n\t}\n\n\t/**\n\t * Button type.\n\t * @return {string} -\tButton type for identification.\n\t * @override\n\t */\n\tget type() {\n\t\treturn 'ui-ribbon-button-big';\n\t}\n}\n","/**\n * @author yiskang / http://github.com/yiskang\n */\n\n'use strict';\n\nimport RibbonPushButtonData from './RibbonPushButtonData';\n\n/**\n * RibbonToggleButtonData\n * @extends RibbonPushButtonData\n * @class\n */\nexport default class RibbonToggleButtonData extends RibbonPushButtonData {\n\t/**\n\t * RibbonToggleButtonData constructor\n\t * @param {string} name - The name of this instance used by the internal mechanism.\n\t * @param {string} displayName - The name of this instance shown on the user interface, might be a localized string.\n\t */\n\tconstructor( name, displayName ) {\n\t\tsuper( name, displayName );\n\t}\n\n\t/**\n\t * Button role.\n\t * @return {string}\n\t * @override\n\t */\n\tget role() {\n\t\treturn 'ui-ribbon-button-toggle';\n\t}\n\n\t/**\n\t * Button toggleable state.\n\t * @return {bool} - If true, it repsents button is toggled currently.\n\t * @override\n\t */\n\tget toggleable() {\n\t\treturn true;\n\t}\n}\n","/**\n * @author yiskang / http://github.com/yiskang\n */\n\n'use strict';\n\nimport React from 'react';\nimport ClassNames from 'classnames';\nimport RibbonItem from './RibbonItem';\nimport RibbonButton from './RibbonButton';\nimport RibbonPushButton from './RibbonPushButton';\nimport RibbonToggleButton from './RibbonToggleButton';\nimport RibbonItemData from './data/RibbonItemData';\nimport RibbonButtonData from './data/RibbonButtonData';\nimport RibbonPushButtonData from './data/RibbonPushButtonData';\nimport RibbonToggleButtonData from './data/RibbonToggleButtonData';\nimport { newGUID } from './utility';\n\nconst Items = Symbol( 'items' );\n\n/**\n * RibbonGroup\n * @extends RibbonItem\n * @class\n */\nexport default class RibbonGroup extends RibbonItem {\n\t/**\n\t * RibbonGroup constructor\n\t * @param {object} props - React component properties\n\t */\n\tconstructor( props ) {\n\t\tsuper( props );\n\n\t\tthis.state = Object.assign( this.state,\n\t\t\t{\n\t\t\t\titems: [].concat( props.items )\n\t\t\t});\n\n\t\tthis[Items] = [];\n\t}\n\n\t/**\n\t * Panel's children items\n\t * @return {[RibbonButtonData]} - Ribbon item data.\n\t */\n\tget items() {\n\t\treturn this[Items];\n\t}\n\n\t/**\n\t * Instance edis/en-able status.\n\t * @return {bool} - If false, make instance be disabled.\n\t */\n\tget enabled() {\n\t\treturn super.enabled;\n\t}\n\n\t/**\n\t * Instance edis/en-able status.\n\t * @param {bool} [enabled = true] - If false, make instance be disabled.\n\t */\n\tset enabled( enabled = true ) {\n\t\tif( this.hidden ) return;\n\n\t\tconst isEnabled = ( enabled === true );\n\t\tsuper.enabled = isEnabled;\n\n\t\t// Cascaded applying changes\n\t\tthis.items.map( ( item ) => {\n\t\t\titem.enabled = isEnabled;\n\t\t});\n\t}\n\n\t/**\n\t * Instance is hidden or not.\n\t * @return {bool} - If false, instance is going to disppear on the UI.\n\t */\n\tget hidden() {\n\t\treturn super.hidden;\n\t}\n\n\t/**\n\t * Instance is hidden or not.\n\t * @return {bool} [hidden = false]- If false, instance is going to disppear on the UI.\n\t */\n\tset hidden( hidden = false ) {\n\t\tconst isHidden = ( hidden === true );\n\t\tsuper.hidden = isHidden;\n\n\t\t// Cascaded applying changes\n\t\tthis.items.map( ( item ) => {\n\t\t\titem.hidden = isHidden;\n\t\t});\n\t}\n\n\t/**\n\t * Add new RibbonButton by given data.\n\t * @param {RibbonButtonData} itemData - Ribbon button data for creating new item in the RibbonGroup.\n\t * @return {RibbonButton} - Rendered RibbonButton component.\n\t */\n\taddItem( itemData ) {\n\t\tconst idx = this.items.findIndex( ( item ) => ( item.id == itemData.id || item.name === itemData.name ) );\n\t\tif( !(itemData instanceof RibbonButtonData) || idx !== -1 )\n\t\t\treturn console.log( '%c[RibbonGroup] Input itemData is invalid or duplicate.', 'color:red;' );\n\n\t\tconst items = this.state.items.concat( itemData );\n\n\t\tconst prop = { items };\n\t\tconst onStateChange = this.props.onStateChange;\n\t\tonStateChange && onStateChange( this.id, prop );\n\n\t\tthis.setState( prop );\n\n\t\treturn this.items[ this.items.length -1 ];\n\t}\n\n\tcomponentWillUpdate( nextProps, nextState ) {\n\t\tthis[Items].length = 0;\n\t}\n\n\trender() {\n\t\tconst scope = this;\n\t\tconst items = this.state.items;\n\n\t\tconst updateItem = ( id, data ) => {\n\t\t\tlet items = scope.state.items;\n\t\t\tconst item = items.find( ( item ) => item.id === id );\n\t\t\tif( !item ) return;\n\n\t\t\tObject.assign( item, data );\n\n\t\t\tconst prop = { items };\n\t\t\tconst onStateChange = scope.props.onStateChange;\n\t\t\tonStateChange && onStateChange( scope.id, prop );\n\n\t\t\tscope.setState( prop );\n\t\t};\n\n\t\tconst createItem = ( item ) => {\n\t\t\tlet result;\n\t\t\tswitch( item.type ) {\n\t\t\t\tcase 'ui-ribbon-button-big':\n\t\t\t\t\tconst RibbonPushButtonLike = ( item.role === 'ui-ribbon-button-toggle' ) ? RibbonToggleButton : RibbonPushButton;\n\t\t\t\t\tresult = (\n\t\t\t\t\t\t<RibbonPushButtonLike\n\t\t\t\t\t\t\tkey={ item.id }\n\t\t\t\t\t\t\tid={ item.id }\n\t\t\t\t\t\t\tname={ item.name }\n\t\t\t\t\t\t\tdisplayName={ item.displayName }\n\t\t\t\t\t\t\tenabled={ item.enabled }\n\t\t\t\t\t\t\thidden={ item.hidden }\n\t\t\t\t\t\t\ttype={ item.type }\n\t\t\t\t\t\t\tactived={ item.actived }\n\t\t\t\t\t\t\ticon={ item.icon }\n\t\t\t\t\t\t\ttooltip={ item.tooltip }\n\t\t\t\t\t\t\ttoggleable={ item.toggleable }\n\t\t\t\t\t\t\tclickHandler={ item.clickHandler }\n\t\t\t\t\t\t\tonStateChange={ updateItem }\n\t\t\t\t\t\t\tref={ ( c ) => { if( c ) scope.items.push( c ) } } />\n\t\t\t\t\t);\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\n\t\t\treturn result;\n\t\t};\n\n\t\tconst dynCSS = ClassNames({\n\t\t\t'ui-ribbon-disabled': ( this.enabled === false ),\n\t\t\t'ui-ribbon-invisible': this.hidden\n\t\t});\n\n\t\treturn (\n\t\t\t<div\n\t\t\t\tkey={ this.id }\n\t\t\t\tid={ this.id }\n\t\t\t\tclassName={ \"ui-ribbon-group ui-ribbon-inline \" + dynCSS }>\n\n\t\t\t\t{ items.map( createItem ) }\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nRibbonGroup.propTypes = {\n\tid: React.PropTypes.string.isRequired,\n\titems: React.PropTypes.arrayOf( React.PropTypes.instanceOf( RibbonButtonData ) ),\n\tonStateChange: React.PropTypes.func\n};\n\nRibbonGroup.defaultProps = {\n\tid: newGUID(),\n\titems: []\n};\n","/**\n * @author yiskang / http://github.com/yiskang\n */\n\n'use strict';\n\nimport React from 'react';\nimport ClassNames from 'classnames';\nimport RibbonGroup from './RibbonGroup';\nimport RibbonToggleButton from './RibbonToggleButton';\nimport RibbonToggleButtonData from './data/RibbonToggleButtonData';\nimport { newGUID } from './utility';\n\nconst Current = Symbol( 'current' );\nconst Default = Symbol( 'default' );\n\n/**\n * RibbonRadioButtonGroup\n * @extends RibbonGroup\n * @class\n */\nexport default class RibbonRadioButtonGroup extends RibbonGroup {\n\t/**\n\t * RibbonRadioButtonGroup constructor\n\t * @param {object} props - React component properties\n\t */\n\tconstructor( props ) {\n\t\tsuper( props );\n\n\t\tthis[Current] = undefined;\n\t\tthis[Default] = undefined;\n\t}\n\n\t/**\n\t * Current actived RibbonToggleButton.\n\t * @return {string} - RibbonToggleButton id.\n\t */\n\tget current() {\n\t\treturn this[Current];\n\t}\n\n\t/**\n\t * Current actived RibbonToggleButton.\n\t * @param {string} id - RibbonToggleButton id.\n\t */\n\tset current( id ) {\n\t\tconst current = this.items.find( ( item ) => item.id === id && item.enabled );\n\t\tif( !current ) throw '[RibbonRadioButtonGroup] Input id not exists or disabled.'\n\n\t\tcurrent.actived = true;\n\t\tthis[Current] = id;\n\n\t\tif( !this.default )\n\t\t\tthis.default = id;\n\n\t\tthis.items.map( ( item ) => {\n\t\t\tif( item.id !== id ) item.actived = false;\n\t\t});\n\t}\n\n\t/**\n\t * Default actived RibbonToggleButton.\n\t * @return {string} - RibbonToggleButton id.\n\t */\n\tget default() {\n\t\treturn this[Default];\n\t}\n\n\t/**\n\t * Default actived RibbonToggleButton.\n\t * @param {string} - RibbonToggleButton id.\n\t */\n\tset default( id ) {\n\t\tconst item = this.items.find( ( item ) => item.id === id && item.enabled );\n\t\tif( !item ) throw '[RibbonRadioButtonGroup] Input id not exists or disabled.'\n\n\t\tthis[Default] = id;\n\n\t\tif( !this.current )\n\t\t\tthis.current = id;\n\t}\n\n\t/**\n\t * Reset current item to the default.\n\t */\n\tresetCurrent() {\n\t\tthis.current = this.default;\n\t}\n\n\t/**\n\t * Add new RibbonToggleButton by given data.\n\t * @param {RibbonToggleButtonData} itemData - Ribbon button data for creating new item in the RibbonRadioButtonGroup.\n\t * @return {RibbonToggleButton} - Rendered RibbonToggleButton component.\n\t * @override\n\t */\n\taddItem( itemData ) {\n\t\tif( !(itemData instanceof RibbonToggleButtonData) )\n\t\t\treturn console.log( '%c[RibbonGroup] Input itemData is invalid or duplicate.', 'color:red;' );\n\n\t\tconst item = super.addItem( itemData );\n\n\t\tif( !this.default )\n\t\t\tthis.default = item.id;\n\n\t\treturn item;\n\t}\n\t\n\trender() {\n\t\tconst scope = this;\n\t\tconst items = this.state.items;\n\n\t\tconst updateCurrentItem = ( id ) => {\n\t\t\tif( typeof id !== 'string' ) return;\n\n\t\t\tscope.current = id;\n\t\t};\n\n\t\tconst updateItem = ( id, data ) => {\n\t\t\tlet items = scope.state.items;\n\t\t\tconst item = items.find( ( item ) => item.id === id );\n\t\t\tif( !item ) return;\n\n\t\t\tObject.assign( item, data );\n\n\t\t\tconst prop = { items };\n\t\t\tconst onStateChange = scope.props.onStateChange;\n\t\t\tonStateChange && onStateChange( scope.id, prop );\n\n\t\t\tscope.setState( prop );\n\t\t};\n\n\t\tconst createItem = ( item ) => {\n\t\t\treturn (\n\t\t\t\t<RibbonToggleButton\n\t\t\t\t\tkey={ item.id }\n\t\t\t\t\tid={ item.id }\n\t\t\t\t\tname={ item.name }\n\t\t\t\t\tdisplayName={ item.displayName }\n\t\t\t\t\tenabled={ item.enabled }\n\t\t\t\t\thidden={ item.hidden }\n\t\t\t\t\ttype={ item.type }\n\t\t\t\t\tactived={ item.actived }\n\t\t\t\t\ticon={ item.icon }\n\t\t\t\t\ttooltip={ item.tooltip }\n\t\t\t\t\ttoggleable={ item.toggleable }\n\t\t\t\t\tclickHandler={ item.clickHandler }\n\t\t\t\t\tonGroupCurrentChange={ () => { updateCurrentItem( item.id ) } }\n\t\t\t\t\tonStateChange={ updateItem }\n\t\t\t\t\tref={ ( c ) => { if( c ) scope.items.push( c ) } } />\n\t\t\t);\n\t\t};\n\n\t\tconst dynCSS = ClassNames({\n\t\t\t'ui-ribbon-disabled': ( this.enabled === false ),\n\t\t\t'ui-ribbon-invisible': this.hidden\n\t\t});\n\n\t\treturn (\n\t\t\t<div\n\t\t\t\tkey={ this.id }\n\t\t\t\tid={ this.id }\n\t\t\t\tclassName={ \"ui-ribbon-group ui-ribbon-inline \" + dynCSS }>\n\n\t\t\t\t{ items.map( createItem ) }\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nRibbonGroup.propTypes = {\n\tid: React.PropTypes.string.isRequired,\n\titems: React.PropTypes.arrayOf( React.PropTypes.instanceOf( RibbonToggleButtonData ) ),\n\tonStateChange: React.PropTypes.func\n};\n\nRibbonGroup.defaultProps = {\n\tid: newGUID(),\n\titems: []\n};\n","/**\n * @author yiskang / http://github.com/yiskang\n */\n\n'use strict';\n\nimport RibbonItemData from './RibbonItemData';\n\nconst Items = Symbol( 'items' );\n\n/**\n * RibbonGroupData\n * @extends RibbonItemData\n * @class\n */\nexport default class RibbonGroupData extends RibbonItemData {\n\t/**\n\t * RibbonGroupData constructor\n\t * @param {string} name - The name of this instance used by the internal mechanism.\n\t * @param {string} displayName - The name of this instance shown on the user interface, might be a localized string.\n\t */\n\tconstructor( name, displayName ) {\n\t\tsuper( name, displayName );\n\n\t\tthis[Items] = [];\n\t}\n\t\n\t/**\n\t * Button type.\n\t * @return {string} -\tButton type for identification.\n\t * @override\n\t */\n\tget type() {\n\t\treturn 'ui-ribbon-group';\n\t}\n\t\n\t/**\n\t * Panel's children items.\n\t * @return {RibbonItemData[]} - Ribbon item data.\n\t */\n\tget items() {\n\t\treturn this[Items];\n\t}\n\n\t/**\n\t * Panel's children items.\n\t * @return {RibbonItemData[]} [items = []]- Ribbon item data.\n\t */\n\tset items( items = [] ) {\n\t\tthis[Items] = items;\n\t}\n}\n","/**\n * @author yiskang / http://github.com/yiskang\n */\n\n'use strict';\n\nimport RibbonGroupData from './RibbonGroupData';\n\n/**\n * RibbonRadioButtonGroupData\n * @extends RibbonGroupData\n * @class\n */\nexport default class RibbonRadioButtonGroupData extends RibbonGroupData {\n\t/**\n\t * RibbonRadioButtonGroupData constructor\n\t * @param {string} name - The name of this instance used by the internal mechanism.\n\t * @param {string} displayName - The name of this instance shown on the user interface, might be a localized string.\n\t */\n\tconstructor( name, displayName ) {\n\t\tsuper( name, displayName );\n\t}\n\t\n\t/**\n\t * Button type.\n\t * @return {string} -\tButton type for identification.\n\t * @override\n\t */\n\tget type() {\n\t\treturn 'ui-ribbon-radio-group';\n\t}\n}\n","/**\n * @author yiskang / http://github.com/yiskang\n */\n\n'use strict';\n\nimport React from 'react';\nimport ClassNames from 'classnames';\nimport RibbonBase from './RibbonBase';\nimport RibbonItem from './RibbonItem';\nimport RibbonButton from './RibbonButton';\nimport RibbonPushButton from './RibbonPushButton';\nimport RibbonToggleButton from './RibbonToggleButton';\nimport RibbonGroup from './RibbonGroup';\nimport RibbonRadioButtonGroup from './RibbonRadioButtonGroup';\nimport RibbonItemData from './data/RibbonItemData';\nimport RibbonButtonData from './data/RibbonButtonData';\nimport RibbonPushButtonData from './data/RibbonPushButtonData';\nimport RibbonToggleButtonData from './data/RibbonToggleButtonData';\nimport RibbonGroupData from './data/RibbonGroupData';\nimport RibbonRadioButtonGroupData from './data/RibbonRadioButtonGroupData';\nimport { newGUID } from './utility';\n\nconst Items = Symbol( 'items' );\n\n/**\n * RibbonPanel\n * @extends RibbonBase\n * @class\n */\nexport default class RibbonPanel extends RibbonBase {\n\t/**\n\t * RibbonPanel constructor\n\t * @param {object} props - React component properties\n\t */\n\tconstructor( props ) {\n\t\tsuper( props );\n\n\t\tthis.state = Object.assign( this.state,\n\t\t\t{\n\t\t\t\titems: [].concat( props.items )\n\t\t\t});\n\n\t\tthis[Items] = [];\n\t}\n\n\t/**\n\t * Panel has seperator or not.\n\t * @return {bool} - If true, panel will be seperated with other panels by a panel seperator.\n\t */\n\tget seperator() {\n\t\treturn this.props.seperator;\n\t}\n\n\t/**\n\t * Panel's children items\n\t * @return {[RibbonItemData]} - Ribbon item data.\n\t */\n\tget items() {\n\t\treturn this[Items];\n\t}\n\n\t/**\n\t * Instance edis/en-able status.\n\t * @return {bool} - If false, make instance be disabled.\n\t */\n\tget enabled() {\n\t\treturn super.enabled;\n\t}\n\n\t/**\n\t * Instance edis/en-able status.\n\t * @param {bool} [enabled = true] - If false, make instance be disabled.\n\t */\n\tset enabled( enabled = true ) {\n\t\tif( this.hidden ) return;\n\n\t\tconst isEnabled = ( enabled === true );\n\t\tsuper.enabled = isEnabled;\n\n\t\t// Cascaded applying changes\n\t\tthis.items.map( ( item ) => {\n\t\t\titem.enabled = isEnabled;\n\t\t});\n\t}\n\n\t/**\n\t * Instance is hidden or not.\n\t * @return {bool} - If false, instance is going to disppear on the UI.\n\t */\n\tget hidden() {\n\t\treturn super.hidden;\n\t}\n\n\t/**\n\t * Instance is hidden or not.\n\t * @return {bool} [hidden = false]- If false, instance is going to disppear on the UI.\n\t */\n\tset hidden( hidden = false ) {\n\t\tconst isHidden = ( hidden === true );\n\t\tsuper.hidden = isHidden;\n\n\t\t// Cascaded applying changes\n\t\tthis.items.map( ( item ) => {\n\t\t\titem.hidden = isHidden;\n\t\t});\n\t}\n\n\t/**\n\t * Add new RibbonItem by given data.\n\t * @param {RibbonItemData} itemData - Ribbon item data for creating new item on the panel.\n\t * @return {RibbonItem} - Rendered RibbonItem component.\n\t */\n\taddItem( itemData ) {\n\t\tconst idx = this.items.findIndex( ( item ) => ( item.id == itemData.id || item.name === itemData.name ) );\n\t\tif( !(itemData instanceof RibbonItemData) || idx !== -1 )\n\t\t\treturn console.log( '%c[RibbonPanel] Input itemData is invalid or duplicate.', 'color:red;' );\n\n\t\tconst items = this.state.items.concat( itemData );\n\n\t\tconst prop = { items };\n\t\tconst onStateChange = this.props.onStateChange;\n\t\tonStateChange && onStateChange( this.id, prop );\n\n\t\tthis.setState( prop );\n\n\t\treturn this.items[ this.items.length -1 ];\n\t}\n\n\tcomponentWillUpdate( nextProps, nextState ) {\n\t\tthis[Items].length = 0;\n\t}\n\n\trender() {\n\t\tconst scope = this;\n\t\tconst items = this.state.items;\n\n\t\tconst outerDynCSS = ClassNames({\n\t\t\t'ui-ribbon-disabled': ( this.enabled === false ),\n\t\t\t'ui-ribbon-invisible': this.hidden,\n\t\t\t'ui-ribbon-inline': ( this.hidden === false )\n\t\t});\n\n\t\tconst innerDynCSS = ClassNames({\n\t\t\t'ui-ribbon-empty': ( items.length === 0 ),\n\t\t\t'ui-riibon-panel-single-btn': ( items.length === 1 ),\n\t\t});\n\n\t\tconst legendDynCSS = ClassNames({\n\t\t\t'ui-ribbon-disabled': ( this.enabled === false )\n\t\t});\n\n\t\tconst updateItem = ( id, data ) => {\n\t\t\tlet items = scope.state.items;\n\t\t\tconst item = items.find( ( item ) => item.id === id );\n\t\t\tif( !item ) return;\n\n\t\t\tObject.assign( item, data );\n\n\t\t\tconst prop = { items };\n\t\t\tconst onStateChange = scope.props.onStateChange;\n\t\t\tonStateChange && onStateChange( scope.id, prop );\n\n\t\t\tscope.setState( prop );\n\t\t};\n\n\t\tconst createItem = ( item ) => {\n\t\t\tlet result;\n\t\t\tswitch( item.type ) {\n\t\t\t\tcase 'ui-ribbon-radio-group':\n\t\t\t\tcase 'ui-ribbon-group':\n\t\t\t\t\tconst RibbonGroupLike = ( item.type === 'ui-ribbon-group' ) ? RibbonGroup : RibbonRadioButtonGroup;\n\t\t\t\t\tresult = (\n\t\t\t\t\t\t<RibbonGroupLike\n\t\t\t\t\t\t\tkey={ item.id }\n\t\t\t\t\t\t\tid={ item.id }\n\t\t\t\t\t\t\tname={ item.name }\n\t\t\t\t\t\t\tdisplayName={ item.displayName }\n\t\t\t\t\t\t\tenabled={ item.enabled }\n\t\t\t\t\t\t\thidden={ item.hidden }\n\t\t\t\t\t\t\ttype={ item.type }\n\t\t\t\t\t\t\titems={ item.items }\n\t\t\t\t\t\t\tactived={ item.actived }\n\t\t\t\t\t\t\tonStateChange={ updateItem }\n\t\t\t\t\t\t\tref={ ( c ) => { if( c ) scope.items.push( c ) } } />\n\t\t\t\t\t);\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'ui-ribbon-button-big':\n\t\t\t\t\tconst RibbonPushButtonLike = ( item.role === 'ui-ribbon-button-toggle' ) ? RibbonToggleButton : RibbonPushButton;\n\t\t\t\t\tresult = (\n\t\t\t\t\t\t<RibbonPushButtonLike\n\t\t\t\t\t\t\tkey={ item.id }\n\t\t\t\t\t\t\tid={ item.id }\n\t\t\t\t\t\t\tname={ item.name }\n\t\t\t\t\t\t\tdisplayName={ item.displayName }\n\t\t\t\t\t\t\tenabled={ item.enabled }\n\t\t\t\t\t\t\thidden={ item.hidden }\n\t\t\t\t\t\t\ttype={ item.type }\n\t\t\t\t\t\t\tactived={ item.actived }\n\t\t\t\t\t\t\ticon={ item.icon }\n\t\t\t\t\t\t\ttooltip={ item.tooltip }\n\t\t\t\t\t\t\ttoggleable={ item.toggleable }\n\t\t\t\t\t\t\tclickHandler={ item.clickHandler }\n\t\t\t\t\t\t\tonStateChange={ updateItem }\n\t\t\t\t\t\t\tref={ ( c ) => { if( c ) scope.items.push( c ) } } />\n\t\t\t\t\t);\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\n\t\t\treturn result;\n\t\t};\n\n\t\tconst createSeperator = ( seperator = true ) => {\n\t\t\tif( seperator )\n\t\t\t\treturn(\n\t\t\t\t\t<div className=\"ui-ribbon-panel-seperator ui-ribbon-relative ui-ribbon-inline\"></div>\n\t\t\t\t);\n\t\t};\n\n\t\treturn (\n\t\t\t<div\n\t\t\t\tkey={ this.id }\n\t\t\t\tclassName={ \"ui-ribbon-panel-container ui-ribbon-relative \" + outerDynCSS }>\n\t\t\t\t{ createSeperator( this.seperator ) }\n\n\t\t\t\t<div className={ \"ui-ribbon-panel ui-ribbon-relative ui-ribbon-inline \" + innerDynCSS }>\n\t\t\t\t\t<div className=\"ui-ribbon-panel-contents\">\n\t\t\t\t\t\t{ items.map( createItem ) }\n\n\t\t\t\t\t\t<div className={ \"ui-ribbon-panel-legend ui-ribbon-absolute \" + legendDynCSS }>\n\t\t\t\t\t\t\t{ this.displayName }\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nRibbonPanel.propTypes = {\n\tid: React.PropTypes.string.isRequired,\n\tseperator: React.PropTypes.bool,\n\titems: React.PropTypes.arrayOf( React.PropTypes.instanceOf( RibbonItemData ) ),\n\tonStateChange: React.PropTypes.func\n};\n\nRibbonPanel.defaultProps = {\n\tid: newGUID(),\n\tseperator: true,\n\titems: []\n};\n","/**\n * @author yiskang / http://github.com/yiskang\n */\n\n'use strict';\n\nimport RibbonBaseData from './RibbonBaseData';\n\nconst Seperator = Symbol( 'seperator' );\nconst Items = Symbol( 'items' );\n\n/**\n * RibbonPanelData\n * @extends RibbonBaseData\n * @class\n */\nexport default class RibbonPanelData extends RibbonBaseData {\n\t/**\n\t * RibbonPanelData constructor\n\t * @param {string} name - The name of this instance used by the internal mechanism.\n\t * @param {string} displayName - The name of this instance shown on the user interface, might be a localized string.\n\t */\n\tconstructor( name, displayName ) {\n\t\tsuper( name, displayName );\n\n\t\tthis[Seperator] = true;\n\t\tthis[Items] = [];\n\t}\n\n\t/**\n\t * Panel has seperator or not.\n\t * @return {bool} - If true, panel will be seperated with other panels by a panel seperator.\n\t */\n\tget seperator() {\n\t\treturn this[Seperator];\n\t}\n\n\t/**\n\t * Panel has seperator or not.\n\t * @param {bool} [seperator = true] - If true, panel will be seperated with other panels by a panel seperator.\n\t */\n\tset seperator( seperator = true ) {\n\t\tthis[Seperator] = ( seperator === true );\n\t}\n\n\t/**\n\t * Panel's children items.\n\t * @return {RibbonItemData[]} - Ribbon item data.\n\t */\n\tget items() {\n\t\treturn this[Items];\n\t}\n\n\t/**\n\t * Panel's children items.\n\t * @return {RibbonItemData[]} [items = []]- Ribbon item data.\n\t */\n\tset items( items = [] ) {\n\t\tthis[Items] = items;\n\t}\n}\n","/**\n * @author yiskang / http://github.com/yiskang\n */\n\n'use strict';\n\nimport React from 'react';\nimport ClassNames from 'classnames';\nimport RibbonBase from './RibbonBase';\nimport RibbonPanel from './RibbonPanel';\nimport RibbonPanelData from './data/RibbonPanelData';\nimport { newGUID } from './utility';\n\nconst Panels = Symbol( 'panels' );\n\n/**\n * RibbonTab\n * @extends RibbonBase\n * @class\n */\nexport default class RibbonTab extends RibbonBase {\n\t/**\n\t * RibbonTab constructor\n\t * @param {object} props - React component properties\n\t */\n\tconstructor( props ) {\n\t\tsuper( props );\n\n\t\tlet actived = ( props.actived === true );\n\n\t\tthis.state = Object.assign( this.state,\n\t\t\t{\n\t\t\t\tactived: actived,\n\t\t\t\tpanels: [].concat( props.panels )\n\t\t\t});\n\n\t\tthis[Panels] = [];\n\n\t\tthis.handleClick = this.handleClick.bind( this );\n\t}\n\n\t/**\n\t * Tab type.\n\t * @return {string} - Tab type for identification.\n\t */\n\tget type() {\n\t\treturn this.props.type;\n\t}\n\n\t/**\n\t * Instance edis/en-able status.\n\t * @return {bool} - If false, make instance be disabled.\n\t */\n\tget enabled() {\n\t\treturn super.enabled;\n\t}\n\n\t/**\n\t * Instance edis/en-able status.\n\t * @param {bool} [enabled = true] - If false, make instance be disabled.\n\t */\n\tset enabled( enabled = true ) {\n\t\tif( this.hidden ) return;\n\n\t\tconst isEnabled = ( enabled === true );\n\n\t\tconst prop = { enabled: isEnabled, actived: false };\n\t\tconst onStateChange = this.props.onStateChange;\n\t\tonStateChange && onStateChange( this.id, prop );\n\n\t\t// Cascaded applying changes\n\t\tthis.panels.map( ( panel ) => {\n\t\t\tpanel.enabled = isEnabled;\n\t\t});\n\n\t\tthis.setState( prop );\n\t}\n\n\t/**\n\t * Instance is hidden or not.\n\t * @return {bool} - If false, instance is going to disppear on the UI.\n\t */\n\tget hidden() {\n\t\treturn super.hidden;\n\t}\n\n\t/**\n\t * Instance is hidden or not.\n\t * @return {bool} [hidden = false]- If false, instance is going to disppear on the UI.\n\t */\n\tset hidden( hidden = false ) {\n\t\tconst isHidden = ( hidden === true );\n\t\tconst isEnabled = !isHidden;\n\n\t\tconst prop = { hidden: isHidden, enabled: isEnabled, actived: false };\n\t\tconst onStateChange = this.props.onStateChange;\n\t\tonStateChange && onStateChange( this.id, prop );\n\n\t\t// Cascaded applying changes\n\t\tthis.panels.map( ( panel ) => {\n\t\t\tpanel.hidden = isHidden;\n\t\t});\n\n\t\tthis.setState( prop );\n\t}\n\n\t/**\n\t * Tab actived state.\n\t * @return {bool} - If true, it repsents tab is selected currently.\n\t */\n\tget actived() {\n\t\treturn this.state.actived;\n\t}\n\n\t/**\n\t * Tab actived state.\n\t * @return {bool} [actived = false] - If true, it repsents tab is selected currently.\n\t */\n\tset actived( actived = false ) {\n\t\tconst isActived = ( actived === true );\n\t\tconst prop = { actived: isActived };\n\n\t\tconst onStateChange = this.props.onStateChange;\n\t\tonStateChange && onStateChange( this.id, prop );\n\n\t\tthis.setState( prop );\n\t}\n\n\t/**\n\t * Tab's children panels\n\t * @return {[RibbonPanelData]} - Ribbon panel data.\n\t */\n\tget panels() {\n\t\treturn this[Panels];\n\t}\n\n\t/**\n\t * Add new panel by given data.\n\t * @param {RibbonPanelData} panelData - Ribbon panel data for creating new panel.\n\t * @return {RibbonPanel} - Rendered RibbonPanel component.\n\t */\n\taddPanel( panelData ) {\n\t\tconst idx = this.panels.findIndex( ( panel ) => ( panel.id == panelData.id || panel.name === panelData.name ) );\n\t\tif( !(panelData instanceof RibbonPanelData) || idx !== -1 )\n\t\t\treturn console.log( '%c[RibbonTab] Input panelData is invalid or duplicate.', 'color:red;' );\n\n\t\tpanelData.seperator = ( this.panels.length !== 0 );\n\t\tconst panels = this.state.panels.concat( panelData );\n\n\t\tconst prop = { panels };\n\t\tconst onStateChange = this.props.onStateChange;\n\t\tonStateChange && onStateChange( this.id, prop );\n\n\t\tthis.setState( prop );\n\n\t\treturn this.panels[ this.panels.length -1 ];\n\t}\n\n\tcomponentWillUpdate( nextProps, nextState ) {\n\t\tthis[Panels].length = 0;\n\t}\n\n\t/**\n\t * Tab clicking event handler\n\t */\n\thandleClick() {\n\t\tif( this.type === 'ui-ribbon-tab-application' ) return;\n\n\t\tconst onClick = this.props.onClick;\n\t\tonClick && onClick( this.id );\n\t}\n\n\trender() {\n\t\tconst scope = this;\n\t\tconst panels = this.state.panels;\n\t\tconst dynCSS = ClassNames({\n\t\t\t'ui-ribbon-active': this.actived,\n\t\t\t'ui-ribbon-disabled': ( this.enabled === false ),\n\t\t\t'ui-ribbon-invisible': this.hidden,\n\t\t\t'ui-ribbon-inline': ( this.hidden === false )\n\t\t});\n\n\t\tconst updatePanel = ( id, data ) => {\n\t\t\tlet panels = scope.state.panels;\n\t\t\tconst panel = panels.find( ( panel ) => panel.id === id );\n\t\t\tif( !panel ) return;\n\n\t\t\tObject.assign( panel, data );\n\n\t\t\tconst prop = { panels };\n\t\t\tconst onStateChange = scope.props.onStateChange;\n\t\t\tonStateChange && onStateChange( scope.id, prop );\n\n\t\t\tscope.setState( prop );\n\t\t};\n\n\t\tconst createPanel = ( panel ) => {\n\t\t\treturn (\n\t\t\t\t<RibbonPanel\n\t\t\t\t\tkey={ panel.id }\n\t\t\t\t\tid={ panel.id }\n\t\t\t\t\tname={ panel.name }\n\t\t\t\t\tdisplayName={ panel.displayName }\n\t\t\t\t\tenabled={ panel.enabled }\n\t\t\t\t\thidden={ panel.hidden }\n\t\t\t\t\tseperator={ panel.seperator }\n\t\t\t\t\titems={ panel.items }\n\t\t\t\t\tonStateChange={ updatePanel }\n\t\t\t\t\tref={ ( c ) => { if( c ) scope.panels.push( c ) } } />\n\t\t\t);\n\t\t};\n\n\t\treturn (\n\t\t\t<li\n\t\t\t\tkey={ this.id }\n\t\t\t\tid={ this.id }\n\t\t\t\tclassName={ this.type + \" \" + dynCSS }\n\t\t\t\trole=\"ui-ribbon-tab\"\n\t\t\t\tonClick={ this.handleClick } >\n\n\t\t\t\t<span className=\"ui-ribbon-uppercase\">{ this.displayName }</span>\n\t\t\t\t<div className=\"ui-ribbon-tab-contents ui-ribbon-absolute\">\n\t\t\t\t\t{ panels.map( createPanel ) }\n\t\t\t\t</div>\n\t\t\t</li>\n\t\t);\n\t}\n}\n\nRibbonTab.propTypes = {\n\tid: React.PropTypes.string.isRequired,\n\ttype: React.PropTypes.string.isRequired,\n\tactived: React.PropTypes.bool,\n\tpanels: React.PropTypes.arrayOf( React.PropTypes.instanceOf( RibbonPanelData ) ),\n\tonStateChange: React.PropTypes.func\n};\n\nRibbonTab.defaultProps = {\n\tid: newGUID(),\n\ttype: 'ui-ribbon-tab-normal',\n\tactived: false,\n\tpanels: []\n};\n","/**\n * @author yiskang / http://github.com/yiskang\n */\n\n'use strict';\n\nimport React from 'react';\nimport ClassNames from 'classnames';\nimport RibbonBase from './RibbonBase';\nimport { newGUID } from './utility';\n\nconst Seperator = Symbol( 'seperator' );\n\n/**\n * RibbonAppMenuItem\n * @extends RibbonBase\n * @class\n */\nexport default class RibbonAppMenuItem extends RibbonBase {\n\t/**\n\t * RibbonAppMenuItem constructor\n\t * @param {object} props - React component properties\n\t */\n\tconstructor( props ) {\n\t\tsuper( props );\n\n\t\tlet actived = ( props.actived === true );\n\t\tlet content = ( typeof props.content === 'string' ) ? props.content : '';\n\n\t\tthis.state = Object.assign( this.state,\n\t\t\t{\n\t\t\t\tactived: actived,\n\t\t\t\tcontent: content\n\t\t\t});\n\n\t\tthis.handleClick = this.handleClick.bind( this );\n\t}\n\n\t/**\n\t * Panel has seperator or not.\n\t * @return {bool} - If true, panel will be seperated with other panels by a panel seperator.\n\t */\n\tget seperator() {\n\t\treturn this.props.seperator;\n\t}\n\n\t/**\n\t * Instance edis/en-able status.\n\t * @return {bool} - If false, make instance be disabled.\n\t */\n\tget enabled() {\n\t\treturn super.enabled;\n\t}\n\n\t/**\n\t * Instance edis/en-able status.\n\t * @param {bool} [enabled = true] - If false, make instance be disabled.\n\t */\n\tset enabled( enabled = true ) {\n\t\tif( this.hidden ) return;\n\n\t\tconst isEnabled = ( enabled === true );\n\t\tsuper.enabled = isEnabled;\n\t}\n\n\t/**\n\t * Instance is hidden or not.\n\t * @return {bool} - If false, instance is going to disppear on the UI.\n\t */\n\tget hidden() {\n\t\treturn super.hidden;\n\t}\n\n\t/**\n\t * Instance is hidden or not.\n\t * @return {bool} [hidden = false]- If false, instance is going to disppear on the UI.\n\t */\n\tset hidden( hidden = false ) {\n\t\tconst isHidden = ( hidden === true );\n\t\tsuper.hidden = isHidden;\n\t}\n\n\t/**\n\t * Tab actived state.\n\t * @return {bool} - If true, it repsents tab is selected currently.\n\t */\n\tget actived() {\n\t\treturn this.state.actived;\n\t}\n\n\t/**\n\t * Tab actived state.\n\t * @return {bool} [actived = false] - If true, it repsents tab is selected currently.\n\t */\n\tset actived( actived = false ) {\n\t\tconst isActived = ( actived === true );\n\t\tconst prop = { actived: isActived };\n\n\t\tconst onStateChange = this.props.onStateChange;\n\t\tonStateChange && onStateChange( this.id, prop, true );\n\n\t\tthis.setState( prop );\n\t}\n\n\t/**\n\t * Menu content shown on the app menu.\n\t * @return {string} - Menu content.\n\t */\n\tget content() {\n\t\treturn this.state.content;\n\t}\n\n\t/**\n\t * Menu content shown on the app menu.\n\t * @param {string} [content] - Menu content.\n\t */\n\tset content( content ) {\n\t\tif( typeof content !== 'string' ) throw 'Input type should be a string.';\n\n\t\tconst prop = { content };\n\t\tconst onStateChange = this.props.onStateChange;\n\t\tonStateChange && onStateChange( this.id, prop );\n\n\t\tthis.setState( prop );\n\t}\n\n\t/**\n\t * Tab clicking event handler\n\t */\n\thandleClick( event ) {\n\t\tthis.actived = true;\n\t}\n\n\trender() {\n\t\tconst scope = this;\n\t\tconst dynCSS = ClassNames({\n\t\t\t'ui-ribbon-active': this.actived,\n\t\t\t'ui-ribbon-disabled': ( this.enabled === false ),\n\t\t\t'ui-ribbon-invisible': this.hidden\n\t\t});\n\n\t\treturn (\n\t\t\t<li key={ this.id } className={ dynCSS } onClick={ this.handleClick }>\n\t\t\t\t\t<div> { this.displayName } </div>\n\t\t\t</li>\n\t\t);\n\t}\n}\n\nRibbonAppMenuItem.propTypes = {\n\tid: React.PropTypes.string.isRequired,\n\tseperator: React.PropTypes.bool,\n\tactived: React.PropTypes.bool,\n\tcontent: React.PropTypes.string,\n\tonStateChange: React.PropTypes.func\n};\n\nRibbonAppMenuItem.defaultProps = {\n\tid: newGUID(),\n\tseperator: true,\n\tactived: false\n};","/**\n * @author yiskang / http://github.com/yiskang\n */\n\n'use strict';\n\nimport RibbonBaseData from './RibbonBaseData';\n\nconst Seperator = Symbol( 'seperator' );\nconst\tActived = Symbol( 'actived' );\nconst Content = Symbol( 'contnet' );\n\n/**\n * RibbonAppMenuItemData\n * @extends RibbonBaseData\n * @class\n */\nexport default class RibbonAppMenuItemData extends RibbonBaseData {\n\t/**\n\t * RibbonAppMenuItemData constructor\n\t * @param {string} name - The name of this instance used by the internal mechanism.\n\t * @param {string} displayName - The name of this instance shown on the user interface, might be a localized string.\n\t */\n\tconstructor( name, displayName ) {\n\t\tsuper( name, displayName );\n\n\t\tthis[Seperator] = true;\n\t\tthis[Actived] = false;\n\t\tthis[Content] = undefined;\n\t}\n\n\t/**\n\t * Panel has seperator or not.\n\t * @return {bool} - If true, panel will be seperated with other panels by a panel seperator.\n\t */\n\tget seperator() {\n\t\treturn this[Seperator];\n\t}\n\n\t/**\n\t * Panel has seperator or not.\n\t * @param {bool} [seperator = true] - If true, panel will be seperated with other panels by a panel seperator.\n\t */\n\tset seperator( seperator = true ) {\n\t\tthis[Seperator] = ( seperator === true );\n\t}\n\n\t/**\n\t * Tab actived state.\n\t * @return {bool} - If true, it repsents tab is selected currently.\n\t */\n\tget actived() {\n\t\treturn this[Actived]\n\t}\n\n\t/**\n\t * Tab actived state.\n\t * @return {bool} [actived = false] - If true, it repsents tab is selected currently.\n\t */\n\tset actived( actived = false ) {\n\t\tthis[Actived] = ( actived === true );\n\t}\n\n\t/**\n\t * Menu content shown on the app menu.\n\t * @return {string} - Menu content.\n\t */\n\tget content() {\n\t\treturn this[Content];\n\t}\n\n\t/**\n\t * Menu content shown on the app menu.\n\t * @param {string} [content] - Menu content.\n\t */\n\tset content( content ) {\n\t\tif( typeof content !== 'string' ) throw 'Input type should be a string.';\n\n\t\tthis[Content] = content;\n\t}\n}\n","/**\n * @author yiskang / http://github.com/yiskang\n */\n\n'use strict';\n\nimport React from 'react';\nimport ClassNames from 'classnames';\nimport RibbonBase from './RibbonBase';\nimport RibbonAppMenuItem from './RibbonAppMenuItem';\nimport RibbonAppMenuItemData from './data/RibbonAppMenuItemData';\nimport { newGUID } from './utility';\n\nconst Items = Symbol( 'items' );\n\n/**\n * RibbonAppTab\n * @extends RibbonBase\n * @class\n */\nexport default class RibbonAppTab extends RibbonBase {\n\t/**\n\t * RibbonAppTab constructor\n\t * @param {object} props - React component properties\n\t */\n\tconstructor( props ) {\n\t\tsuper( props );\n\n\t\tthis.state = Object.assign( this.state,\n\t\t\t{\n\t\t\t\titems: [].concat( props.items )\n\t\t\t});\n\n\t\tthis[Items] = [];\n\n\t\tthis.handleClick = this.handleClick.bind( this );\n\t\tthis.handleClose = this.handleClose.bind( this );\n\t}\n\n\t/**\n\t * Tab type.\n\t * @return {string} - Tab type for identification.\n\t */\n\tget type() {\n\t\treturn this.props.type;\n\t}\n\n\t/**\n\t * Panel's children items\n\t * @return {[RibbonItemData]} - Ribbon item data.\n\t */\n\tget items() {\n\t\treturn this[Items];\n\t}\n\n\t/**\n\t * Instance edis/en-able status.\n\t * @return {bool} - If false, make instance be disabled.\n\t */\n\tget enabled() {\n\t\treturn super.enabled;\n\t}\n\n\t/**\n\t * Instance edis/en-able status.\n\t * @param {bool} [enabled = true] - If false, make instance be disabled.\n\t */\n\tset enabled( enabled = true ) {\n\t\tif( this.hidden ) return;\n\n\t\tconst isEnabled = ( enabled === true );\n\n\t\tconst prop = { enabled: isEnabled, actived: false };\n\t\tconst onStateChange = this.props.onStateChange;\n\t\tonStateChange && onStateChange( this.id, prop, true );\n\n\t\tthis.setState( prop );\n\n\t\t// Cascaded applying changes\n\t\tthis.items.map( ( item ) => {\n\t\t\titem.enabled = isEnabled;\n\t\t});\n\t}\n\n\t/**\n\t * Instance is hidden or not.\n\t * @return {bool} - If false, instance is going to disppear on the UI.\n\t */\n\tget hidden() {\n\t\treturn super.hidden;\n\t}\n\n\t/**\n\t * Instance is hidden or not.\n\t * @return {bool} [hidden = false]- If false, instance is going to disppear on the UI.\n\t */\n\tset hidden( hidden = false ) {\n\t\tconst isHidden = ( hidden === true );\n\t\tconst isEnabled = !isHidden;\n\n\t\tconst prop = { hidden: isHidden, enabled: isEnabled, actived: false };\n\t\tconst onStateChange = this.props.onStateChange;\n\t\tonStateChange && onStateChange( this.id, prop, true );\n\n\t\tthis.setState( prop );\n\n\t\t// Cascaded applying changes\n\t\tthis.items.map( ( item ) => {\n\t\t\titem.hidden = isHidden;\n\t\t});\n\t}\n\n\t/**\n\t * Tab actived state.\n\t * @return {bool} - If true, it repsents tab is selected currently.\n\t */\n\tget actived() {\n\t\treturn this.state.actived;\n\t}\n\n\t/**\n\t * Tab actived state.\n\t * @return {bool} [actived = false] - If true, it repsents tab is selected currently.\n\t */\n\tset actived( actived = false ) {\n\t\tconst isActived = ( actived === true );\n\t\tconst prop = { actived: isActived };\n\n\t\tconst onStateChange = this.props.onStateChange;\n\t\tonStateChange && onStateChange( this.id, prop, true );\n\n\t\tthis.setState( prop );\n\t}\n\n\t/**\n\t * Add new RibbonAppMenuItem by given data.\n\t * @param {RibbonAppMenuItemData} itemData - Ribbon item data for creating new item on the app menu.\n\t * @return {RibbonAppMenuItem} - Rendered RibbonAppMenuItem component.\n\t */\n\taddItem( itemData ) {\n\t\tconst idx = this.items.findIndex( ( item ) => ( item.id === itemData.id || item.name === itemData.name ) );\n\t\tif( !(itemData instanceof RibbonAppMenuItemData) || idx !== -1 )\n\t\t\treturn console.log( '%c[RibbonAppTab] Input itemData is invalid or duplicate.', 'color:red;' );\n\n\t\tconst items = this.state.items.concat( itemData );\n\n\t\tconst prop = { items };\n\t\tconst onStateChange = this.props.onStateChange;\n\t\tonStateChange && onStateChange( this.id, prop, true );\n\n\t\tthis.setState( prop );\n\n\t\treturn this.items[ this.items.length -1 ];\n\t}\n\n\tcomponentWillUpdate( nextProps, nextState ) {\n\t\tthis[Items].length = 0;\n\t}\n\n\t/**\n\t * Tab clicking event handler\n\t */\n\thandleClick( event ) {\n\t\tconst onClick = this.props.onClick;\n\t\tonClick && onClick( this.id );\n\t}\n\n\thandleClose( event ) {\n\t\tevent.stopPropagation();\n\n\t\tthis.actived = false;\n\t}\n\n\trender() {\n\t\tconst scope = this;\n\t\tconst dynCSS = ClassNames({\n\t\t\t'ui-ribbon-active': this.actived,\n\t\t\t'ui-ribbon-disabled': ( this.enabled === false ),\n\t\t\t'ui-ribbon-invisible': this.hidden,\n\t\t\t'ui-ribbon-inline': ( this.hidden === false )\n\t\t});\n\n\t\tconst updateItem = ( id, data ) => {\n\t\t\tlet items = scope.state.items;\n\t\t\tconst item = items.find( ( item ) => item.id === id );\n\t\t\tif( !item ) return;\n\n\t\t\tObject.assign( item, data );\n\n\t\t\tconst prop = { items };\n\t\t\tconst onStateChange = scope.props.onStateChange;\n\t\t\tonStateChange && onStateChange( scope.id, prop );\n\n\t\t\tscope.setState( prop );\n\t\t};\n\n\t\treturn (\n\t\t\t<li\n\t\t\t\tkey={ this.id }\n\t\t\t\tid={ this.id }\n\t\t\t\tclassName={ this.type + \" \" + dynCSS }\n\t\t\t\trole=\"ui-ribbon-tab\"\n\t\t\t\tonClick={ this.handleClick } >\n\n\t\t\t\t<span className=\"ui-ribbon-uppercase\">{ this.displayName }</span>\n\t\t\t\t<div className=\"ui-ribbon-tab-application-contents ui-ribbon-absolute\">\n\t\t\t\t\t<div id=\"ribbon-nav-application-menu\">\n\t\t\t\t\t\t<div className=\"ribbon-nav-back-arrow\" onClick={ this.handleClose }></div>\n\t\t\t\t\t\t<ul role=\"ribbon-nav-application-menu-items\">\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tthis.state.items.map( ( item ) => {\n\t\t\t\t\t\t\t\t\treturn <RibbonAppMenuItem\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tkey={ item.id }\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tid={ item.id }\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tname={ item.name }\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tdisplayName={ item.displayName }\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tenabled={ item.enabled }\n\t\t\t\t\t\t\t\t\t\t\t\t\t\thidden={ item.hidden }\n\t\t\t\t\t\t\t\t\t\t\t\t\t\ttype={ item.type }\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tactived={ item.actived }\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tonStateChange={ updateItem }\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tref={ ( c ) => { if( c ) scope.items.push( c ) } } />\n\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t</ul>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div role=\"ribbon-nav-application-menu-content\">\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</li>\n\t\t);\n\t}\n}\n\nRibbonAppTab.propTypes = {\n\tid: React.PropTypes.string.isRequired,\n\ttype: React.PropTypes.string.isRequired,\n\tactived: React.PropTypes.bool,\n\titems: React.PropTypes.arrayOf( React.PropTypes.instanceOf( RibbonAppMenuItemData ) ),\n\tonStateChange: React.PropTypes.func\n};\n\nRibbonAppTab.defaultProps = {\n\tid: newGUID(),\n\ttype: 'ui-ribbon-tab-application',\n\tactived: false,\n\titems: []\n};","/**\n * @author yiskang / http://github.com/yiskang\n */\n\n'use strict';\n\nimport React from 'react';\nimport RibbonTabData from './data/RibbonTabData';\nimport RibbonAppTabData from './data/RibbonAppTabData';\nimport RibbonTitlebarData from './data/RibbonTitlebarData';\nimport RibbonTitlebar from './RibbonTitlebar';\nimport RibbonTab from './RibbonTab';\nimport RibbonAppTab from './RibbonAppTab';\nimport { newGUID } from './utility';\n\nconst Tabs = Symbol( 'tabs' );\n\n/**\n * Ribbon\n * @extends React.Component\n * @class\n */\nexport default class Ribbon extends React.Component {\n\t/**\n\t * RibbonBase constructor\n\t * @param {object} props - React component properties\n\t */\n\tconstructor( props ) {\n\t\tsuper( props );\n\n\t\tlet appTab = new RibbonAppTabData();\n\t\tlet tabs = [ appTab ].concat( props.tabs );\n\t\tlet titlebar = new RibbonTitlebarData();\n\n\t\tthis.state = {\n\t\t\ttabs: tabs,\n\t\t\ttitlebar: titlebar\n\t\t};\n\n\t\tthis[Tabs] = [];\n\n\t\tthis.handleTabClick = this.handleTabClick.bind( this );\n\t}\n\n\t/**\n\t * Content tabs\n\t * @return {RibbonTab[]} - Array of RibbonTabs.\n\t */\n\tget tabs() {\n\t\treturn this[Tabs];\n\t}\n\n\t/**\n\t * Toggle to show or hide app titlebar.\n\t */\n\ttoggleAppTitle() {\n\t\tthis.refs.titlebar.toggleDisplay();\n\t}\n\n\t/**\n\t * Add new tab by given data.\n\t * @param {RibbonTabData} tabData - Ribbon tab data for creating new tab.\n\t * @return {RibbonTab} - Rendered RibbonTab component.\n\t */\n\taddTab( tabData ) {\n\t\tconst idx = this.tabs.findIndex( ( tab ) => ( tab.id == tabData.id || tab.name === tabData.name ) );\n\t\tif( !(tabData instanceof RibbonTabData) || idx !== -1 )\n\t\t\treturn console.log( '%c[Ribbon] Input tabData is invalid or duplicate.', 'color:red;' );\n\n\t\ttabData.actived = ( this.tabs.length === 1 );\n\t\tconst tabs = this.state.tabs.concat( tabData );\n\t\tthis.setState({ tabs });\n\n\t\treturn this.tabs[ this.tabs.length - 1 ];\n\t}\n\n\t/**\n\t * Active target tab by given id.\n\t * @param {string} tabId - Tab Id.\n\t */\n\tactiveTabById( tabId ) {\n\t\tif( typeof tabId !== 'string' ) return console.log( '%c[Ribbon] TabId should be a string.', 'color:red;' );\n\n\t\tconst tab = this.tabs.find( ( tab ) => tab.id === tabId );\n\t\tif( !tab ) throw '[Ribbon] Input tab id not exists.';\n\n\t\ttab.actived = true;\n\t}\n\n\t/**\n\t * Tab clicking event handler\n\t */\n\thandleTabClick( tabId ) {\n\t\tthis.activeTabById( tabId );\n\t}\n\n\tcomponentWillUpdate( nextProps, nextState ) {\n\t\tthis[Tabs].length = 0;\n\t}\n\n\trender() {\n\t\tconst scope = this;\n\t\tconst otherTabs = this.state.tabs;\n\n\t\tconst updateTitlebar = ( id, data ) => {\n\t\t\tlet titlebar = scope.state.titlebar;\n\n\t\t\tif( titlebar.id !== id ) return;\n\n\t\t\tObject.assign( titlebar, data );\n\t\t\tscope.setState({ titlebar });\n\t\t};\n\t\t\n\t\tconst createTitleBar = () => {\n\t\t\tconst data = scope.state.titlebar;\n\t\t\treturn (\n\t\t\t\t<RibbonTitlebar\n\t\t\t\t\tkey={ data.id }\n\t\t\t\t\tid={ data.id }\n\t\t\t\t\tname={ data.name }\n\t\t\t\t\tdisplayName={ data.title }\n\t\t\t\t\tenabled={ data.enabled }\n\t\t\t\t\thidden={ data.hidden }\n\t\t\t\t\tref=\"titlebar\"\n\t\t\t\t\tonStateChange={ updateTitlebar } />\n\t\t\t);\n\t\t};\n\n\t\tconst nextOpt = ( id, data ) => {\n\t\t\t// For de/activating tab by changing tab's actived property.\n\t\t\tif( data.hasOwnProperty( 'actived' ) ) {\n\t\t\t\tif( data.actived === true ) {\n\t\t\t\t\tscope.tabs.map( ( tab ) => {\n\t\t\t\t\t\tif( tab.id !== id ) tab.actived = false;\n\t\t\t\t\t});\n\t\t\t\t} else {\n\t\t\t\t\t// For activing other tab while current tab is diabled.\n\t\t\t\t\tif( data.hasOwnProperty( 'enabled' ) && ( data.enabled === false ) ) {\n\t\t\t\t\t\tconst tab = scope.tabs.find( ( tab ) => ( tab.id !== id && tab.enabled === true && tab.type !== 'ui-ribbon-tab-application' ) );\n\t\t\t\t\t\tif( !tab ) return;\n\n\t\t\t\t\t\ttab.actived = true;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\n\t\tconst updateTab = ( id, data, stopPropagation = false ) => {\n\t\t\tlet tabs = scope.state.tabs;\n\t\t\tconst tab = tabs.find( ( tab ) => tab.id === id );\n\t\t\tif( !tab ) return;\n\n\t\t\tObject.assign( tab, data );\n\t\t\tscope.setState({ tabs });\n\n\t\t\tif( !stopPropagation ) nextOpt( id, data );\n\t\t};\n\n\t\tconst createTab = ( tab ) => {\n\t\t\tif( tab.type === 'ui-ribbon-tab-application' ) {\n\t\t\t\treturn (\n\t\t\t\t\t<RibbonAppTab\n\t\t\t\t\t\tkey={ tab.id }\n\t\t\t\t\t\tid={ tab.id }\n\t\t\t\t\t\tname={ tab.name }\n\t\t\t\t\t\tdisplayName={ tab.displayName }\n\t\t\t\t\t\ttype={ tab.type }\n\t\t\t\t\t\tenabled={ tab.enabled }\n\t\t\t\t\t\thidden={ tab.hidden }\n\t\t\t\t\t\tactived={ tab.actived }\n\t\t\t\t\t\titems={ tab.items }\n\t\t\t\t\t\tonClick={ scope.handleTabClick }\n\t\t\t\t\t\tonStateChange={ updateTab }\n\t\t\t\t\t\tref={ ( c ) => { if( c ) scope.tabs.push( c ) } } />\n\t\t\t\t);\n\t\t\t} else {\n\t\t\t\treturn (\n\t\t\t\t\t<RibbonTab\n\t\t\t\t\t\tkey={ tab.id }\n\t\t\t\t\t\tid={ tab.id }\n\t\t\t\t\t\tname={ tab.name }\n\t\t\t\t\t\tdisplayName={ tab.displayName }\n\t\t\t\t\t\ttype={ tab.type }\n\t\t\t\t\t\tenabled={ tab.enabled }\n\t\t\t\t\t\thidden={ tab.hidden }\n\t\t\t\t\t\tactived={ tab.actived }\n\t\t\t\t\t\tpanels={ tab.panels }\n\t\t\t\t\t\tonClick={ scope.handleTabClick }\n\t\t\t\t\t\tonStateChange={ updateTab }\n\t\t\t\t\t\tref={ ( c ) => { if( c ) scope.tabs.push( c ) } } />\n\t\t\t\t);\n\t\t\t}\n\t\t};\n\n\t\treturn (\n\t\t\t<div id=\"RibbonUI\">\n\t\t\t\t{ createTitleBar() }\n\t\t\t\t<div className=\"ui-ribbon-window\">\n\t\t\t\t\t<div id=\"ui-ribbon-main\" className=\"ui-ribbon-main ui-ribbon-border-bottom\">\n\t\t\t\t\t\t<div className=\"ui-ribbon-tab-container ui-ribbon-border-bottom\">\n\t\t\t\t\t\t\t<ul role=\"ui-ribbon-tabs\" className=\"ui-ribbon-nowrap ui-ribbon-nopadding ui-ribbon-nomargin\">\n\t\t\t\t\t\t\t\t{ otherTabs.map( createTab ) }\n\t\t\t\t\t\t\t</ul>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nRibbon.propTypes = {\n\tid: React.PropTypes.string.isRequired,\n\ttabs: React.PropTypes.arrayOf( React.PropTypes.instanceOf( RibbonTabData ) )\n};\n\nRibbon.defaultProps = {\n\tid: newGUID(),\n\ttabs: []\n};\n","/**\n * @author yiskang / http://github.com/yiskang\n */\n\n'use strict';\n\nimport Ribbon from './Ribbon';\n\nconst RibbonInst = Symbol( 'ribbon' );\nconst Options = Symbol( 'options' );\n\n/**\n * RibbonTask\n * @class\n * @classdesc For bulk creating or modifying Ribbon contents.\n */\nexport default class RibbonTask {\n\t/**\n\t * RibbonTask constructor.\n\t * @param {Ribbon} ribbon - Rendered Ribbon component.\n\t * @param {object} options - Task options.\n\t */\n\tconstructor( ribbon, options ) {\n\t\tif( !(ribbon instanceof Ribbon ) ) throw 'No Ribbon instance available.';\n\n\t\tthis[RibbonInst] = ribbon;\n\t\tthis[Options] = options;\n\t}\n\n\t/**\n\t * Rendered Ribbon component.\n\t * @return {Ribbon}\n\t */\n\tget ribbon() {\n\t\treturn this[RibbonInst];\n\t}\n\n\t/**\n\t * Task options.\n\t * @return {object}\n\t */\n\tget options() {\n\t\treturn this[Options];\n\t}\n\n\t/**\n\t * Execute task content.\n\t * @return {bool} If true, it represents this task was executed by the Ribbon.\n\t */\n\texecute() {\n\t\treturn true;\n\t}\n\n\t/**\n\t * Discard all changes.\n\t * @return {bool} If true, it represents changes made by this task was removed from the Ribbon.\n\t */\n\tdiscard() {\n\t\treturn true;\n\t}\n}\n","/**\n * @author yiskang / http://github.com/yiskang\n */\n\n'use strict';\n\nimport RibbonTask from './RibbonTask';\n\n/**\n * Registered RibbonTask.\n * @private {RibbonTask[]}\n */\nconst Tasks = Symbol( 'tasks' );\n\n/**\n * Check wether input class is instance of RibbonTask or not.\n * @param {RibbonTask} task\n * @return {bool} - If true, it reprents task is a instance of the RibbonTask.\n */\nconst checkTaskType = ( task ) => {\n\tif( task.prototype instanceof RibbonTask ) return true;\n\treturn false;\n};\n\n/**\n * RibbonTaskManager\n * @class\n * @classdesc Task manager class for Ribbon UI.\n */\nexport default class RibbonTaskManager {\n\t/**\n\t * RibbonTaskManager constructor\n\t */\n\tconstructor() {\n\t\tthis[Tasks] = {};\n\n\t\tcheckTaskType.bind( this );\n\t}\n\n\t/**\n\t * All registered RibbonTask.\n\t * @return {RibbonTask[]}\n\t */\n\tget tasks() {\n\t\treturn this[Tasks];\n\t}\n\n\t/**\n\t * Register RibbonTask.\n\t * @param {string} taskId - Task Identification.\n\t * @param {RibbonTask} task - Content instance of RibbonTask.\n\t * @return {bool} - If task is not type of RibbonTask or registered, it will return false.\n\t */\n\tregister( taskId, task ) {\n\t\tif( !checkTaskType( task ) || this.getTask( taskId ) ) return false;\n\n\t\tthis[Tasks][taskId] = task;\n\n\t\treturn true;\n\t}\n\n\t/**\n\t * Unregister RibbonTask.\n\t * @param {string} taskId - Task Identification.\n\t * @return {bool} - If task is not registered, it will return false.\n\t */\n\tunregister( taskId ) {\n\t\tif( !this.getTask( taskId ) ) return false;\n\n\t\tdelete this[Tasks][taskId];\n\n\t\treturn true;\n\t}\n\n\t/**\n\t * Get registered task by given id.\n\t * @param {string} taskId - Task Identification.\n\t * @return {null | RibbonTask} - Return task definition if task is existed.\n\t */\n\tgetTask( taskId ) {\n\t\tif( this.tasks.hasOwnProperty( taskId ) ) {\n\t\t\treturn this.tasks[ taskId ];\n\t\t}\n\t\treturn null;\n\t}\n}\n","/**\n * @author yiskang / http://github.com/yiskang\n */\n\n'use strict';\n\nimport Ribbon from './Ribbon';\nimport RibbonTaskManager from './RibbonTaskManager';\n\nconst RibbonInst = Symbol( 'ribbon' );\nconst Tasks = Symbol( 'tasks' );\nconst TaskManager = Symbol( 'taskManager' );\n\n/**\n * RibbonTaskExecuter\n * @class\n * @classdesc\tClass for executing tasks to create or modify Ribbon contents.\n */\nexport default class RibbonTaskExecuter {\n\t/**\n\t * RibbonTaskExecuter constructor.\n\t * @param {Ribbon} ribbon - Rendered Ribbon component.\n\t * @param {RibbonTaskManager} taskManager -\tRibbonTaskManager instance.\n\t */\n\tconstructor( ribbon, taskManager ) {\n\t\tif( !(ribbon instanceof Ribbon ) ) throw 'No Ribbon instance available.';\n\t\tif( !(taskManager instanceof RibbonTaskManager ) ) throw 'No RibbonTaskManager instance available.';\n\n\t\tthis[RibbonInst] = ribbon;\n\t\tthis[TaskManager] = taskManager;\n\t\tthis[Tasks] = {};\n\t}\n\n\t/**\n\t * Rendered Ribbon component.\n\t * @return {Ribbon}\n\t */\n\tget ribbon() {\n\t\treturn this[RibbonInst];\n\t}\n\n\t/**\n\t * Task\tmanager instance.\n\t * @return {RibbonTaskManager}\n\t */\n\tget manager() {\n\t\treturn this[TaskManager];\n\t}\n\n\t/**\n\t * All executed tasks.\n\t * @return {RibbonTask[]}\n\t */\n\tget tasks() {\n\t\treturn this[Tasks];\n\t}\n\n\t/**\n\t * Execute registered task.\n\t * @param {string} taskId - Task Identification.\n\t * @return {bool} - If task is not registered or failed to execute, it will return false.\n\t */\n\texecute( taskId, options ) {\n\t\tlet result = false;\n\n\t\tif( !this.getTask( taskId ) ) {\n\t\t\tconst taskClass = this.manager.getTask( taskId );\n\n\t\t\tif( taskClass ) {\n\t\t\t\tconst task = new taskClass( this.ribbon, options );\n\t\t\t\tresult = task.execute();\n\n\t\t\t\tif( result === true ) {\n\t\t\t\t\tthis[Tasks][taskId] = task;\n\n\t\t\t\t\tconsole.log( '[RibbonTaskExecuter] Task executed: `%s`.', taskId );\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tconsole.log( '[RibbonTaskExecuter] Task not found: `%s`.', taskId );\n\t\t\t}\n\t\t} else {\n\t\t\tconsole.log( '[RibbonTaskExecuter] Task already executed: `%s`.', taskId );\n\t\t}\n\n\t\treturn result;\n\t}\n\n\t/**\n\t * Discard executed task.\n\t * @param {string} taskId - Task Identification.\n\t * @return {bool} - If task is not registered or failed to discard changes, it will return false.\n\t */\n\tdiscard( taskId ) {\n\t\tlet result = false;\n\t\tconst task = this.getTask( taskId );\n\n\t\tif( !task ) {\n\t\t\tconsole.log( '[RibbonTaskExecuter] Task not found: `%s`.', taskId );\n\t\t} else {\n\t\t\tresult = task.discard();\n\t\t\tif( !result ) throw 'Failed to discard chnages in task: `' + taskId + '`.';\n\n\t\t\tdelete this[Tasks][taskId];\n\t\t\tconsole.log( '[RibbonTaskExecuter] Task content discarded: `%s`.', taskId );\n\t\t}\n\n\t\treturn result;\n\t}\n\n\t/**\n\t * Get executed task by given id.\n\t * @param {string} taskId - Task Identification.\n\t * @return {null | RibbonTask} - Return task definition if task is existed.\n\t */\n\tgetTask( taskId ) {\n\t\tif( this.tasks.hasOwnProperty( taskId ) ) {\n\t\t\treturn this.tasks[ taskId ];\n\t\t}\n\n\t\treturn null;\n\t}\n}\n","/**\n * @author yiskang / http://github.com/yiskang\n */\n\n'use strict';\n\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport Ribbon from './Ribbon';\nimport RibbonTaskManager from './RibbonTaskManager';\nimport RibbonTaskExecuter from './RibbonTaskExecuter';\n\nconst Container = Symbol( 'container' );\nconst MainRibbon = Symbol( 'mainRibbon' );\nconst TaskManager = Symbol( 'taskManager' );\nconst TaskExecuter = Symbol( 'taskExecuter' );\n\n/**\n * RibbonCtrl\n * @class\n */\nexport default class RibbonCtrl {\n\t/**\n\t * RibbonCtrl constructor\n\t */\n\tconstructor() {\n\t\tthis[TaskManager] = new RibbonTaskManager();\n\t\tthis[Container] = undefined;\n\t\tthis[MainRibbon] = undefined;\n\t\tthis[TaskExecuter] = undefined;\n\t}\n\n\t/**\n\t * Ribbon instance.\n\t * @return {Ribbon} - Rendered Ribbon component.\n\t */\n\tget mainRibbon() {\n\t\treturn this[MainRibbon];\n\t}\n\n\t/**\n\t * Ribbon container\n\t * @return {HTMLElement} - React render target DOM element.\n\t */\n\tget container() {\n\t\treturn this[Container];\n\t}\n\n\t/**\n\t * Ribbon container\n\t * @param {HTMLElement} container - React render target DOM element.\n\t */\n\tset container( container ) {\n\t\tif( !(container instanceof HTMLElement) ) throw '[RibbonCtrl] Input container must be a HTML DOM element.';\n\n\t\tthis[Container] = container;\n\t}\n\n\t/**\n\t * RibbonTaskManager instance.\n\t * @return {RibbonTaskManager}\n\t */\n\tget taskManager() {\n\t\treturn this[TaskManager];\n\t}\n\n\t/**\n\t * RibbonTaskExecuter instance.\n\t * @return {RibbonTaskExecuter}\n\t */\n\tget taskExecuter() {\n\t\treturn this[TaskExecuter];\n\t}\n\n\t/**\n\t * Register RibbonTask.\n\t * @param {string} taskId - Task Identification.\n\t * @param {RibbonTask} task - Content instance of RibbonTask.\n\t * @return {bool} - If task is not type of RibbonTask or registered, it will return false.\n\t */\n\tregisterTask( taskId, task ) {\n\t\tif( !this.taskManager ) return false;\n\n\t\treturn this.taskManager.register( taskId, task );\n\t}\n\n\t/**\n\t * Unregister RibbonTask.\n\t * @param {string} taskId - Task Identification.\n\t * @return {bool} - If task is not registered, it will return false.\n\t */\n\tunregisterTask( taskId ) {\n\t\tif( !this.taskManager ) return false;\n\n\t\treturn this.taskManager.unregister( taskId );\n\t}\n\n\t/**\n\t * Execute registered RibbonTask.\n\t * @param {string} taskId - Task Identification.\n\t * @return {bool} - If task is not registered or failed to execute, it will return false.\n\t */\n\texecuteTask( taskId, options ) {\n\t\tif( !this.taskExecuter ) return false;\n\n\t\treturn this.taskExecuter.execute( taskId, options );\n\t}\n\n\t/**\n\t * Discard executed RibbonTask.\n\t * @param {string} taskId - Task Identification.\n\t * @return {bool} - If task is not registered or failed to discard changes, it will return false.\n\t */\n\tdiscardTask( taskId ) {\n\t\tif( !this.taskExecuter ) return false;\n\n\t\treturn this.taskExecuter.discard( taskId );\n\t}\n\n\t/**\n\t * Start UI rendering.\n\t * @return {Promise} - Result.\n\t * @resolve {RibbonCtrl} - Self RibbonCtrl instance.\n\t * @reject {object} - Errors.\n\t */\n\trun() {\n\t\tconst scope = this;\n\n\t\treturn new Promise( ( resolve, reject ) => {\n\t\t\ttry {\n\t\t\t\tconst container = scope.container;\n\t\t\t\tconst taskManager = scope.taskManager;\n\n\t\t\t\tscope[MainRibbon] = ReactDOM.render( <Ribbon />, container );\n\t\t\t\tscope[TaskExecuter] = new RibbonTaskExecuter( scope.mainRibbon, taskManager );\n\n\t\t\t\tresolve( scope );\n\t\t\t} catch( error ) {\n\t\t\t\treject( error );\n\t\t\t}\n\t\t});\n\t}\n}\n","/**\n * @author yiskang / http://github.com/yiskang\n */\n\n'use strict';\n\nimport RibbonBaseData from './RibbonBaseData';\nimport RibbonTitlebarData from './RibbonTitlebarData';\nimport RibbonTabData from './RibbonTabData';\nimport RibbonAppTabData from './RibbonAppTabData';\nimport RibbonPanelData from './RibbonPanelData';\nimport RibbonAppMenuItemData from './RibbonAppMenuItemData';\nimport RibbonItemData from './RibbonItemData';\nimport RibbonButtonData from './RibbonButtonData';\nimport RibbonPushButtonData from './RibbonPushButtonData';\nimport RibbonToggleButtonData from './RibbonToggleButtonData';\nimport RibbonTooltipData from './RibbonTooltipData';\nimport RibbonGroupData from './RibbonGroupData';\nimport RibbonRadioButtonGroupData from './RibbonRadioButtonGroupData';\n\nconst Data = {\n\tRibbonBaseData,\n\tRibbonTitlebarData,\n\tRibbonTabData,\n\tRibbonAppTabData,\n\tRibbonPanelData,\n\tRibbonAppMenuItemData,\n\tRibbonItemData,\n\tRibbonButtonData,\n\tRibbonPushButtonData,\n\tRibbonToggleButtonData,\n\tRibbonTooltipData,\n\tRibbonGroupData,\n\tRibbonRadioButtonGroupData\n};\n\nexport default Data;\n","/**\n * @author yiskang / http://github.com/yiskang\n */\n\n'use strict';\n\nimport Ribbon from './Ribbon';\nimport RibbonBase from './RibbonBase';\nimport RibbonTab from './RibbonTab';\nimport RibbonAppTab from './RibbonAppTab';\nimport RibbonPanel from './RibbonPanel';\nimport RibbonTitlebar from './RibbonTitlebar';\nimport RibbonItem from './RibbonItem';\nimport RibbonButton from './RibbonButton';\nimport RibbonTooltip from './RibbonTooltip';\nimport RibbonPushButton from './RibbonPushButton';\nimport RibbonToggleButton from './RibbonToggleButton';\nimport RibbonGroup from './RibbonGroup';\nimport RibbonRadioButtonGroup from './RibbonRadioButtonGroup';\nimport RibbonCtrl from './RibbonCtrl';\nimport RibbonTask from './RibbonTask';\nimport RibbonTaskManager from './RibbonTaskManager';\nimport RibbonTaskExecuter from './RibbonTaskExecuter';\nimport Utility from './utility';\nimport Data from './data';\n\nconst ReactRibbon = {\n\tRibbon,\n\tRibbonBase,\n\tRibbonTab,\n\tRibbonAppTab,\n\tRibbonPanel,\n\tRibbonTitlebar,\n\tRibbonItem,\n\tRibbonButton,\n\tRibbonTooltip,\n\tRibbonPushButton,\n\tRibbonToggleButton,\n\tRibbonGroup,\n\tRibbonRadioButtonGroup,\n\tRibbonCtrl,\n\tRibbonTask,\n\tRibbonTaskManager,\n\tRibbonTaskExecuter,\n\tUtility,\n\tData\n};\n\n/**\n * Module exposure.\n */\nexport default ReactRibbon;","/**\n * @author yiskang / http://github.com/yiskang\n */\n\n'use strict';\n\nimport ReactRibbon from '../';\nconst { RibbonCtrl } = ReactRibbon;\n\n/**\n * Singleton pattern approach for RibbonCtrl.\n * @return {RibbonCtrl} - RibbonCtrl instance.\n */\nexport default new RibbonCtrl();\n","/**\n * @author yiskang / http://github.com/yiskang\n */\n\n'use strict';\n\nimport ReactRibbon from '../';\nexport const { RibbonTask, Utility, Data } = ReactRibbon;\nimport ribbonCtrl from './RibbonCtrl';\n\nif( !ribbonCtrl ) console.error( '[RibbonTest] Failed to create ribbonCtrl instance.' );\n\nexport default ribbonCtrl;\n\n","/**\n * @author yiskang / http://github.com/yiskang\n */\n\n'use strict';\n\nimport $ from 'jquery';\nimport ribbonCtrl, { RibbonTask, Data, Utility } from '../modules';\n\nconst {\n\tRibbonTabData,\n\tRibbonPanelData,\n\tRibbonPushButtonData,\n\tRibbonToggleButtonData,\n\tRibbonTooltipData,\n\tRibbonRadioButtonGroupData,\n\tRibbonAppMenuItemData\n} = Data;\n\n/**\n * RibbonDemoTask\n * @extends RibbonTask\n * @class\n */\nexport default class RibbonDemoTask extends RibbonTask {\n\t/**\n\t * RibbonDemoTask constructor.\n\t * @param {Ribbon} ribbon - Rendered Ribbon component.\n\t * @param {object} options - Task options.\n\t */\n\tconstructor( ribbon, options ) {\n\t\tsuper( ribbon, options );\n\t}\n\n\t/**\n\t * Execute task content.\n\t * @return {bool} If true, it represents this task was executed by the Ribbon.\n\t */\n\texecute() {\n\t\ttry {\n\t\t\t// Create tab.\n\t\t\tconst ribbon = this.ribbon;\n\t\t\tconst tabData = new RibbonTabData( 'DemoHomeTab', 'Home' );\n\t\t\tconst tab = ribbon.addTab( tabData );\n\n\t\t\tconst testTabData = new RibbonTabData( 'DemoTestTab', 'Test' );\n\t\t\tconst testTab = ribbon.addTab( testTabData );\n\n\t\t\t// Create app menu item.\n\t\t\tconst appTab = ribbon.tabs[0];\n\t\t\tconst demoMenuItemData = new RibbonAppMenuItemData( 'DemoMenuItem', 'Demo' );\n\t\t\tconst demoMenuItem = appTab.addItem( demoMenuItemData );\n\n\t\t\t// Create panel.\n\t\t\tconst newMailPanelData = new RibbonPanelData( 'DemoNewMailPanel', 'New' );\n\t\t\tconst newMailPanel = tab.addPanel( newMailPanelData );\n\n\t\t\tconst delMailPanelData = new RibbonPanelData( 'DemoDeleteMailPanel', 'Delete' );\n\t\t\tconst delMailPanel = tab.addPanel( delMailPanelData );\n\n\t\t\tconst resMailPanelData = new RibbonPanelData( 'DemoRespondMailPanel', 'Respond' );\n\t\t\tconst resMailPanel = tab.addPanel( resMailPanelData );\n\n\t\t\t// Create buttons.\n\t\t\tconst newMailBtnData = new RibbonPushButtonData( 'DemoNewMailBtn', 'New\\\\nMail' );\n\t\t\tconst newMailBtn = newMailPanel.addItem( newMailBtnData );\n\t\t\tnewMailBtn.icon = 'img/demo/NewMailMessage.png';\n\t\t\tnewMailBtn.clickHandler = () => { alert( 'DemoNewMailBtn Clicked!' ); };\n\n\t\t\tconst newMailItemBtnData = new RibbonPushButtonData( 'DemoNewMailItemBtn', 'New\\\\nItems' );\n\t\t\tconst newMailItemBtn = newMailPanel.addItem( newMailItemBtnData );\n\t\t\tnewMailItemBtn.icon = 'img/demo/MailNewItemMenu.png';\n\t\t\tnewMailItemBtn.clickHandler = () => { alert( 'DemoNewMailItemBtn Clicked!' ); };\n\n\t\t\tconst delMailBtnData = new RibbonPushButtonData( 'DemoDeleteMailBtn', 'Delete' );\n\t\t\tconst delMailBtn = delMailPanel.addItem( delMailBtnData );\n\t\t\tdelMailBtn.icon = 'img/demo/Delete.png';\n\t\t\tdelMailBtn.clickHandler = () => { alert( 'DemoDeleteMailBtn Clicked!' ); };\n\n\t\t\tconst replyMailBtnData = new RibbonPushButtonData( 'DemoReplyMailBtn', 'Reply' );\n\t\t\tconst replyMailBtn = resMailPanel.addItem( replyMailBtnData );\n\t\t\treplyMailBtn.icon = 'img/demo/Reply.png';\n\t\t\treplyMailBtn.clickHandler = () => { alert( 'DemoReplyMailBtn Clicked!' ); };\n\n\t\t\tconst replyAllMailBtnData = new RibbonPushButtonData( 'DemoReplyAllMailBtn', 'Reply All' );\n\t\t\tconst replyAllMailBtn = resMailPanel.addItem( replyAllMailBtnData );\n\t\t\treplyAllMailBtn.icon = 'img/demo/ReplyAll.png';\n\t\t\treplyAllMailBtn.clickHandler = () => { alert( 'DemoReplyAllMailBtn Clicked!' ); };\n\n\t\t\tconst forwardMailBtnData = new RibbonPushButtonData( 'DemoForwardMailBtn', 'Forward' );\n\t\t\tconst forwardMailBtn = resMailPanel.addItem( forwardMailBtnData );\n\t\t\tforwardMailBtn.icon = 'img/demo/Forward.png';\n\t\t\tforwardMailBtn.clickHandler = () => { alert( 'DemoForwardMailBtn Clicked!' ); };\n\n\t\t\t$('#demo-active-tab-home').click( () => {\n\t\t\t\ttab.actived = true;\n\t\t\t\tconsole.log( 'Set tab actived status to true: ', tab.actived === true );\n\t\t\t});\n\n\t\t\t$('#demo-deactive-tab-home').click( () => {\n\t\t\t\ttab.actived = false;\n\t\t\t\tconsole.log( 'Set tab actived status to false: ', tab.actived === false );\n\t\t\t});\n\n\t\t\t$('#demo-active-tab-test').click( () => {\n\t\t\t\ttestTab.actived = true;\n\t\t\t\tconsole.log( 'Set tab actived status to true: ', testTab.actived === true );\n\t\t\t});\n\n\t\t\t$('#demo-deactive-tab-test').click( () => {\n\t\t\t\ttestTab.actived = false;\n\t\t\t\tconsole.log( 'Set tab actived status to false: ', testTab.actived === false );\n\t\t\t});\n\n\t\t\t$('#demo-active-button-new-mail').click( () => {\n\t\t\t\tnewMailBtn.actived = true;\n\t\t\t\tconsole.log( 'Set button actived status to true: ', newMailBtn.actived === true );\n\t\t\t});\n\n\t\t\t$('#demo-deactive-button-new-mail').click( () => {\n\t\t\t\tnewMailBtn.actived = false;\n\t\t\t\tconsole.log( 'Set button actived status to false: ', newMailBtn.actived === false );\n\t\t\t});\n\n\t\t\t$('#demo-enable-button-new-mail').click( () => {\n\t\t\t\tnewMailBtn.enabled = true;\n\t\t\t\tconsole.log( 'Set button enabled status to true: ', newMailBtn.enabled === true );\n\t\t\t});\n\n\t\t\t$('#demo-disable-button-new-mail').click( () => {\n\t\t\t\tnewMailBtn.enabled = false;\n\t\t\t\tconsole.log( 'Set button enabled status to false: ', newMailBtn.enabled === false );\n\t\t\t});\n\t\t} catch( error ) {\n\t\t\tconsole.warn( error );\n\t\t\treturn false;\n\t\t}\n\n\t\treturn true;\n\t}\n\n\t/**\n\t * Discard all changes.\n\t * @return {bool} If true, it represents changes made by this task was removed from the Ribbon.\n\t */\n\tdiscard() {\n\t\treturn true;\n\t}\n};\n\nribbonCtrl.registerTask( 'React.Windows.RibbonDemoTask', RibbonDemoTask );\n","/**\n * @author yiskang / http://github.com/yiskang\n */\n\n'use strict';\n\nimport $ from 'jquery';\nimport ribbonCtrl, { RibbonTask, Data, Utility } from '../modules';\n\nconst {\n\tRibbonTabData,\n\tRibbonPanelData,\n\tRibbonPushButtonData,\n\tRibbonToggleButtonData,\n\tRibbonTooltipData,\n\tRibbonRadioButtonGroupData\n} = Data;\n\n/**\n * RibbonViewerDemoTask\n * @extends RibbonTask\n * @class\n */\nexport default class RibbonViewerDemoTask extends RibbonTask {\n\t/**\n\t * RibbonViewerDemoTask constructor.\n\t * @param {Ribbon} ribbon - Rendered Ribbon component.\n\t * @param {object} options - Task options.\n\t */\n\tconstructor( ribbon, options ) {\n\t\tsuper( ribbon, options );\n\t}\n\n\t/**\n\t * Execute task content.\n\t * @return {bool} If true, it represents this task was executed by the Ribbon.\n\t */\n\texecute() {\n\t\ttry {\n\t\t\t// Create tab.\n\t\t\tconst ribbon = this.ribbon;\n\t\t\tconst tabData = new RibbonTabData( 'DemoBIMTab', 'BIM' );\n\t\t\tconst tab = ribbon.addTab( tabData );\n\n\t\t\t// Create panel.\n\t\t\tconst spatialPanelData = new RibbonPanelData( 'DemoSpatialPanel', 'Spatial' );\n\t\t\tconst spatialPanel = tab.addPanel( spatialPanelData );\n\n\t\t\t// Create buttons.\n\t\t\tconst dwnBtnData = new RibbonPushButtonData( 'DemoSpatialDwnBtn', 'Download' );\n\t\t\tconst dwnBtn = spatialPanel.addItem( dwnBtnData );\n\t\t\tdwnBtn.icon = 'img/viewer/db_download.png';\n\t\t\tdwnBtn.clickHandler = () => { alert( 'DemoSpatialDwnBtn Clicked!' ); };\n\n\t\t\tconst clsBtnData = new RibbonPushButtonData( 'DemoSpatialCleanBtn', 'Clean' );\n\t\t\tconst clsBtn = spatialPanel.addItem( clsBtnData );\n\t\t\tclsBtn.icon = 'img/viewer/db_remove.png';\n\t\t\tclsBtn.clickHandler = () => { alert( 'DemoSpatialCleanBtn Clicked!' ); };\n\n\t\t\t// Create panel.\n\t\t\tconst navPanelData = new RibbonPanelData( 'DemoNavPanel', 'Navigation' );\n\t\t\tconst navPanel = tab.addPanel( navPanelData );\n\n\t\t\t// Create button gruop.\n\t\t\tconst radioBtnGroupData = new RibbonRadioButtonGroupData( 'DemoNavBtnGroup', 'NavBtnGroup' );\n\t\t\tconst radioBtnGroup = navPanel.addItem( radioBtnGroupData );\n\n\t\t\t// Add buttons to gruop.\n\t\t\tconst panBtnData = new RibbonToggleButtonData( 'DemoPanBtn', 'Pan' );\n\t\t\tconst panBtn = radioBtnGroup.addItem( panBtnData );\n\t\t\tpanBtn.icon = 'img/viewer/pan.png';\n\t\t\tpanBtn.clickHandler = () => { alert( 'DemoPanBtn Clicked!' ); };\n\n\t\t\tconst orbitBtnData = new RibbonToggleButtonData( 'DemoOrbitBtn', 'Orbit' );\n\t\t\tconst orbitBtn = radioBtnGroup.addItem( orbitBtnData );\n\t\t\torbitBtn.icon = 'img/viewer/orbit.png';\n\t\t\torbitBtn.clickHandler = () => { alert( 'DemoOrbitBtn Clicked!' ); };\n\n\t\t\t$('#demo-active-tab-basic').click( () => {\n\t\t\t\ttab.actived = true;\n\t\t\t\tconsole.log( 'Set tab actived status to true: ', tab.actived === true );\n\t\t\t});\n\n\t\t\t$('#demo-deactive-tab-basic').click( () => {\n\t\t\t\ttab.actived = false;\n\t\t\t\tconsole.log( 'Set tab actived status to false: ', tab.actived === false );\n\t\t\t});\n\n\t\t\t$('#demo-active-button-download').click( () => {\n\t\t\t\tdwnBtn.actived = true;\n\t\t\t\tconsole.log( 'Set button actived status to true: ', dwnBtn.actived === true );\n\t\t\t});\n\n\t\t\t$('#demo-deactive-button-download').click( () => {\n\t\t\t\tdwnBtn.actived = false;\n\t\t\t\tconsole.log( 'Set button actived status to false: ', dwnBtn.actived === false );\n\t\t\t});\n\n\t\t\t$('#demo-enable-button-download').click( () => {\n\t\t\t\tdwnBtn.enabled = true;\n\t\t\t\tconsole.log( 'Set button enabled status to true: ', dwnBtn.enabled === true );\n\t\t\t});\n\n\t\t\t$('#demo-disable-button-download').click( () => {\n\t\t\t\tdwnBtn.enabled = false;\n\t\t\t\tconsole.log( 'Set button enabled status to false: ', dwnBtn.enabled === false );\n\t\t\t});\n\t\t} catch( error ) {\n\t\t\tconsole.warn( error );\n\t\t\treturn false;\n\t\t}\n\n\t\treturn true;\n\t}\n\n\t/**\n\t * Discard all changes.\n\t * @return {bool} If true, it represents changes made by this task was removed from the Ribbon.\n\t */\n\tdiscard() {\n\t\treturn true;\n\t}\n};\n\nribbonCtrl.registerTask( 'React.Windows.RibbonViewerDemoTask', RibbonViewerDemoTask );\n","/**\n * @author yiskang / http://github.com/yiskang\n */\n\n'use strict';\n\nimport $ from 'jquery';\nimport ribbonCtrl, { Utility } from './modules';\nimport './tasks';\n\nexport default {\n\tribbonCtrl\n};\n\n$(() => {\n\tribbonCtrl.container = document.getElementById( 'ribbon-root' );\n\tribbonCtrl.run()\n\t\t\t\t\t\t.then( ( self ) => {\n\t\t\t\t\t\t\t// Execute demo task.\n\t\t\t\t\t\t\tself.executeTask( 'React.Windows.RibbonDemoTask', null );\n\t\t\t\t\t\t})\n\t\t\t\t\t\t.catch( ( error ) => {\n\t\t\t\t\t\t\tconsole.warn( error );\n\t\t\t\t\t\t});\n});\n"],"names":["Actived","Items","Panels","Seperator","Content","RibbonTask","RibbonInst","Tasks","TaskManager","Data","RibbonCtrl","RibbonTabData","RibbonPanelData","RibbonPushButtonData","RibbonToggleButtonData","RibbonTooltipData","RibbonRadioButtonGroupData","RibbonAppMenuItemData"],"mappings":"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"}
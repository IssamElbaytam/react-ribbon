{"version":3,"sources":["node_modules/browser-pack/_prelude.js","src/js/Ribbon.jsx","src/js/RibbonBase.jsx","src/js/RibbonButton.jsx","src/js/RibbonCtrl.jsx","src/js/RibbonGroup.jsx","src/js/RibbonItem.jsx","src/js/RibbonPanel.jsx","src/js/RibbonPushButton.jsx","src/js/RibbonRadioButtonGroup.jsx","src/js/RibbonTab.jsx","src/js/RibbonTask.js","src/js/RibbonTaskExecuter.js","src/js/RibbonTaskManager.js","src/js/RibbonTitlebar.jsx","src/js/RibbonToggleButton.jsx","src/js/RibbonTooltip.jsx","src/js/data/RibbonAppTabData.js","src/js/data/RibbonBaseData.js","src/js/data/RibbonButtonData.js","src/js/data/RibbonGroupData.js","src/js/data/RibbonItemData.js","src/js/data/RibbonPanelData.js","src/js/data/RibbonPushButtonData.js","src/js/data/RibbonRadioButtonGroupData.js","src/js/data/RibbonTabData.js","src/js/data/RibbonTitlebarData.js","src/js/data/RibbonToggleButtonData.js","src/js/data/RibbonTooltipData.js","src/js/data/index.js","src/js/index.js","src/js/test/RibbonCtrl.js","src/js/test/index.js","src/js/test/modules.js","src/js/test/tasks/DemoTask.js","src/js/utility.js"],"names":[],"mappings":"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","file":"test.js","sourceRoot":"/source/","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","import React from 'react';\nimport RibbonTabData from './data/RibbonTabData';\nimport RibbonAppTabData from './data/RibbonAppTabData';\nimport RibbonTitlebarData from './data/RibbonTitlebarData';\nimport RibbonTitlebar from './RibbonTitlebar';\nimport RibbonTab from './RibbonTab';\nimport { newGUID } from './utility';\n\nconst Tabs = Symbol( 'tabs' );\n\n/**\n * Ribbon\n * @extends React.Component\n * @class\n */\nexport default class Ribbon extends React.Component {\n\t/**\n\t * RibbonBase constructor\n\t * @param {object} props - React component properties\n\t */\n\tconstructor( props ) {\n\t\tsuper( props );\n\n\t\tlet appTab = new RibbonAppTabData();\n\t\tlet tabs = [ appTab ].concat( props.tabs );\n\t\tlet titlebar = new RibbonTitlebarData();\n\n\t\tthis.state = {\n\t\t\ttabs: tabs,\n\t\t\ttitlebar: titlebar\n\t\t};\n\n\t\tthis[Tabs] = [];\n\n\t\tthis.handleTabClick = this.handleTabClick.bind( this );\n\t}\n\n\t/**\n\t * Content tabs\n\t * @return {RibbonTab[]} - Array of RibbonTabs.\n\t */\n\tget tabs() {\n\t\treturn this[Tabs];\n\t}\n\n\t/**\n\t * Toggle to show or hide app titlebar.\n\t */\n\ttoggleAppTitle() {\n\t\tthis.refs.titlebar.toggleDisplay();\n\t}\n\n\t/**\n\t * Add new tab by given data.\n\t * @param {RibbonTabData} tabData - Ribbon tab data for creating new tab.\n\t * @return {RibbonTab} - Rendered RibbonTab component.\n\t */\n\taddTab( tabData ) {\n\t\tconst idx = this.tabs.findIndex( ( tab ) => ( tab.id == tabData.id || tab.name === tabData.name ) );\n\t\tif( !(tabData instanceof RibbonTabData) || idx !== -1 )\n\t\t\treturn console.log( '%c[Ribbon] Input tabData is invalid or duplicate.', 'color:red;' );\n\n\t\ttabData.actived = ( this.tabs.length === 1 );\n\t\tconst tabs = this.state.tabs.concat( tabData );\n\t\tthis.setState({ tabs });\n\n\t\treturn this.tabs[ this.tabs.length - 1 ];\n\t}\n\n\t/**\n\t * Active target tab by given id.\n\t * @param {string} tabId - Tab Id.\n\t */\n\tactiveTabById( tabId ) {\n\t\tif( typeof tabId !== 'string' ) return console.log( '%c[Ribbon] TabId should be a string.', 'color:red;' );\n\n\t\tconst tab = this.tabs.find( ( tab ) => tab.id === tabId );\n\t\tif( !tab ) throw '[Ribbon] Input tab id not exists.';\n\n\t\ttab.actived = true;\n\t}\n\n\t/**\n\t * Tab clicking event handler\n\t */\n\thandleTabClick( tabId ) {\n\t\tthis.activeTabById( tabId );\n\t}\n\n\tcomponentWillUpdate( nextProps, nextState ) {\n\t\tthis[Tabs].length = 0;\n\t}\n\n\trender() {\n\t\tconst scope = this;\n\t\tconst otherTabs = this.state.tabs;//.slice( 1 );\n\n\t\tconst updateTitlebar = ( id, data ) => {\n\t\t\tlet titlebar = scope.state.titlebar;\n\n\t\t\tif( titlebar.id !== id ) return;\n\n\t\t\tObject.assign( titlebar, data );\n\t\t\tscope.setState({ titlebar });\n\t\t};\n\t\t\n\t\tconst createTitleBar = () => {\n\t\t\tconst data = scope.state.titlebar;\n\t\t\treturn (\n\t\t\t\t<RibbonTitlebar\n\t\t\t\t\tkey={ data.id }\n\t\t\t\t\tid={ data.id }\n\t\t\t\t\tname={ data.name }\n\t\t\t\t\tdisplayName={ data.title }\n\t\t\t\t\tenabled={ data.enabled }\n\t\t\t\t\thidden={ data.hidden }\n\t\t\t\t\tref=\"titlebar\"\n\t\t\t\t\tonStateChange={ updateTitlebar } />\n\t\t\t);\n\t\t};\n\n\t\tconst nextOpt = ( id, data ) => {\n\t\t\t// For de/activating tab by changing tab's actived property.\n\t\t\tif( data.hasOwnProperty( 'actived' ) ) {\n\t\t\t\tif( data.actived === true ) {\n\t\t\t\t\tscope.tabs.map( ( tab ) => {\n\t\t\t\t\t\tif( tab.id !== id ) tab.actived = false;\n\t\t\t\t\t});\n\t\t\t\t} else {\n\t\t\t\t\t// For activing other tab while current tab is diabled.\n\t\t\t\t\tif( data.hasOwnProperty( 'enabled' ) && ( data.enabled === false ) ) {\n\t\t\t\t\t\tconst tab = scope.tabs.find( ( tab ) => ( tab.id !== id && tab.enabled === true && tab.type !== 'ui-ribbon-tab-application' ) );\n\t\t\t\t\t\tif( !tab ) return;\n\n\t\t\t\t\t\ttab.actived = true;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\n\t\tconst updateTab = ( id, data ) => {\n\t\t\tlet tabs = scope.state.tabs;\n\t\t\tconst tab = tabs.find( ( tab ) => tab.id === id );\n\t\t\tif( !tab ) return;\n\n\t\t\tObject.assign( tab, data );\n\t\t\tscope.setState({ tabs });\n\n\t\t\tnextOpt( id, data );\n\t\t};\n\n\t\tconst createTab = ( tab ) => {\n\t\t\treturn (\n\t\t\t\t<RibbonTab\n\t\t\t\t\tkey={ tab.id }\n\t\t\t\t\tid={ tab.id }\n\t\t\t\t\tname={ tab.name }\n\t\t\t\t\tdisplayName={ tab.displayName }\n\t\t\t\t\ttype={ tab.type }\n\t\t\t\t\tenabled={ tab.enabled }\n\t\t\t\t\thidden={ tab.hidden }\n\t\t\t\t\tactived={ tab.actived }\n\t\t\t\t\tpanels={ tab.panels }\n\t\t\t\t\tonClick={ scope.handleTabClick }\n\t\t\t\t\tonStateChange={ updateTab }\n\t\t\t\t\tref={ ( c ) => { if( c ) scope.tabs.push( c ) } } />\n\t\t\t);\n\t\t};\n\n\t\treturn (\n\t\t\t<div id=\"RibbonUI\">\n\t\t\t\t{ createTitleBar() }\n\t\t\t\t<div className=\"ui-ribbon-window\">\n\t\t\t\t\t<div id=\"ui-ribbon-main\" className=\"ui-ribbon-main ui-ribbon-border-bottom\">\n\t\t\t\t\t\t<div className=\"ui-ribbon-tab-container ui-ribbon-border-bottom\">\n\t\t\t\t\t\t\t<ul role=\"ui-ribbon-tabs\" className=\"ui-ribbon-nowrap ui-ribbon-nopadding ui-ribbon-nomargin\">\n\t\t\t\t\t\t\t\t{ otherTabs.map( createTab ) }\n\t\t\t\t\t\t\t</ul>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nRibbon.propTypes = {\n\tid: React.PropTypes.string.isRequired,\n\ttabs: React.PropTypes.arrayOf( React.PropTypes.instanceOf( RibbonTabData ) )\n};\n\nRibbon.defaultProps = {\n\tid: newGUID(),\n\ttabs: []\n};\n","import React from 'react';\nimport { newGUID } from './utility';\n\n/**\n * RibbonBase\n * @extends React.Component\n * @class\n */\nexport default class RibbonBase extends React.Component {\n\t/**\n\t * RibbonBase constructor\n\t * @param {object} props - React component properties\n\t */\n\tconstructor( props ) {\n\t\tsuper( props );\n\n\t\tlet displayName = ( typeof props.displayName === 'string' ) ? props.displayName : name;\n\t\tlet enabled = ( props.enabled == false ) ? false : true;\n\t\tlet hidden = ( props.hidden === true )\n\n\t\tthis.state = {\n\t\t\tdisplayName,\n\t\t\tenabled,\n\t\t\thidden\n\t\t};\n\t}\n\n\t/**\n\t * Instance id for internal identification and HTML id attribute.\n\t * @return {string} - The UUID.\n\t */\n\tget id() {\n\t\treturn this.props.id;\n\t}\n\n\t/**\n\t * Instance name for internal identification.\n\t * @return {string} - Instance name.\n\t */\n\tget name() {\n\t\treturn this.props.name;\n\t}\n\n\t/**\n\t * Instance name shown on the user interface, might be a localized string.\n\t * @return {string} - Instance name.\n\t */\n\tget displayName() {\n\t\treturn this.state.displayName;\n\t}\n\n\t/**\n\t * Instance name shown on the user interface, might be a localized string.\n\t * @param {string} - Instance name.\n\t */\n\tset displayName( name ) {\n\t\tif( typeof name !== 'string' ) throw 'Input type should be a string.';\n\n\t\tconst prop = { displayName: name };\n\t\tconst onStateChange = this.props.onStateChange;\n\t\tonStateChange && onStateChange( this.id, prop );\n\n\t\tthis.setState( prop );\n\t}\n\n\t/**\n\t * Instance edis/en-able status.\n\t * @return {bool} - If false, make instance be disabled.\n\t */\n\tget enabled() {\n\t\treturn this.state.enabled;\n\t}\n\t\n\t/**\n\t * Instance edis/en-able status.\n\t * @param {bool} [enabled = true] - If false, make instance be disabled.\n\t */\n\tset enabled( enabled = true ) {\n\t\tif( this.hidden ) return;\n\n\t\tconst isEnabled = ( enabled === true );\n\n\t\tconst prop = { enabled: isEnabled };\n\t\tconst onStateChange = this.props.onStateChange;\n\t\tonStateChange && onStateChange( this.id, prop );\n\n\t\tthis.setState( prop );\n\t}\n\n\t/**\n\t * Instance is hidden or not.\n\t * @return {bool} - If false, instance is going to disppear on the UI.\n\t */\n\tget hidden() {\n\t\treturn this.state.hidden;\n\t}\n\t\n\t/**\n\t * Instance is hidden or not.\n\t * @return {bool} [hidden = false]- If false, instance is going to disppear on the UI.\n\t */\n\tset hidden( hidden = false ) {\n\t\tconst isHidden = ( hidden === true );\n\t\tconst isEnabled = !isHidden;\n\n\t\tconst prop = { hidden: isHidden, enabled: isEnabled };\n\t\tconst onStateChange = this.props.onStateChange;\n\t\tonStateChange && onStateChange( this.id, prop );\n\n\t\tthis.setState( prop );\n\t}\n}\n\nRibbonBase.propTypes = {\n\tid: React.PropTypes.string.isRequired,\n\tname: React.PropTypes.string.isRequired,\n\tdisplayName: React.PropTypes.string,\n\tenabled: React.PropTypes.boolean,\n\thidden: React.PropTypes.boolean,\n\tonStateChange: React.PropTypes.func\n};\n\nRibbonBase.defaultProps = {\n\tid: newGUID(),\n\tenabled: true,\n\thidden: false\n};\n","import React from 'react';\nimport ClassNames from 'classnames';\nimport RibbonItem from './RibbonItem';\nimport RibbonTooltip from './RibbonTooltip';\nimport RibbonTooltipData from './data/RibbonTooltipData';\nimport { newGUID } from './utility';\n\n/**\n * RibbonButton\n * @extends RibbonItem\n * @class\n */\nexport default class RibbonButton extends RibbonItem {\n\t/**\n\t * RibbonButton constructor\n\t * @param {object} props - React component properties\n\t */\n\tconstructor( props ) {\n\t\tsuper( props );\n\n\t\tlet icon = props.icon;\n\t\tlet tooltip = props.tooltip;\n\t\tlet toggleable = ( props.toggleable === true );\n\t\tlet clickHandler = props.clickHandler;\n\n\t\tthis.state = Object.assign( this.state,\n\t\t\t{\n\t\t\t\ticon,\n\t\t\t\ttooltip,\n\t\t\t\ttoggleable,\n\t\t\t\tclickHandler\n\t\t\t});\n\n\t\tthis.handleClick = this.handleClick.bind( this );\n\t\tthis.handleMouseOver = this.handleMouseOver.bind( this );\n\t\tthis.handleMouseOut = this.handleMouseOut.bind( this );\n\t}\n\n\t/**\n\t * Button role.\n\t * @return {string}\n\t */\n\tget role() {\n\t\treturn this.props.role;\n\t}\n\n\t/**\n\t * Button icon.\n\t * @return {string} - Button icon path.\n\t */\n\tget icon() {\n\t\treturn this.state.icon;\n\t}\n\t\n\t/**\n\t * Button icon.\n\t * @return {string} icon - Button icon path.\n\t */\n\tset icon( icon ) {\n\t\tif( typeof icon !== 'string' ) throw 'Input type should be a string.';\n\n\t\tconst prop = { icon };\n\t\tconst onStateChange = this.props.onStateChange;\n\t\tonStateChange && onStateChange( this.id, prop );\n\n\t\tthis.setState( prop );\n\t}\n\n\t/**\n\t * Button toggleable state.\n\t * @return {bool} - If true, it repsents button is toggled currently.\n\t */\n\tget toggleable() {\n\t\treturn this.state.toggleable;\n\t}\n\n\t/**\n\t * Button toggleable state.\n\t * @return {bool} [toggleable = false] - If true, it repsents button is toggled currently.\n\t */\n\tset toggleable( toggleable = false ) {\n\t\tconst isToggleable = ( toggleable === true );\n\n\t\tconst prop = { toggleable: isToggleable };\n\t\tconst onStateChange = this.props.onStateChange;\n\t\tonStateChange && onStateChange( this.id, prop );\n\n\t\tthis.setState( prop );\n\t}\n\n\t/**\n\t * Button click eveent handler.\n\t * @return {Function} - Click eveent handler.\n\t */\n\tget clickHandler() {\n\t\treturn this.state.clickHandler;\n\t}\n\n\t/**\n\t * Button click eveent handler.\n\t * @param {Function} handler - Click eveent handler.\n\t */\n\tset clickHandler( handler ) {\n\t\tif( !(handler instanceof Function) )\n\t\t\tthrow 'Input clicking handler is invalid.';\n\n\t\tconst prop = { clickHandler: handler };\n\t\tconst onStateChange = this.props.onStateChange;\n\t\tonStateChange && onStateChange( this.id, prop );\n\n\t\tthis.setState( prop );\n\t}\n\n\t/**\n\t * Button tooltip comopent.\n\t * @return {RibbonTooltip} - Rendered RibbonTooltip component.\n\t */\n\tget tooltip() {\n\t\treturn this.refs.tooltip;\n\t}\n\n\tset tooltip( tooltip ) {\n\t\tif( !(tooltip instanceof RibbonTooltipData) )\n\t\t\tthrow '[RibbonButton] Input tooltip data is invalid.';\n\n\t\tconst prop = { tooltip };\n\t\tconst onStateChange = this.props.onStateChange;\n\t\tonStateChange && onStateChange( this.id, prop );\n\n\t\tthis.setState( prop );\n\t}\n\n\t/**\n\t * Create tooltip\n\t * @return {RibbonTooltip} - RibbonTooltip instance (not rendered).\n\t */\n\tcreateTooltip() {\n\t\tconst scope = this;\n\t\tconst data = this.state.tooltip;\n\t\tif( !data ) return;\n\n\t\tif( !(data instanceof RibbonTooltipData) && data )\n\t\t\treturn console.log( '%c[RibbonButton] Input tooltip data is invalid.', 'color:red;' );\n\n\t\tconst updateTooltip = ( id, data ) => {\n\t\t\tlet tooltip = scope.state.tooltip;\n\n\t\t\tif( tooltip.id !== id ) return;\n\n\t\t\tObject.assign( tooltip, data );\n\n\t\t\tconst prop = { tooltip };\n\t\t\tconst onStateChange = scope.props.onStateChange;\n\t\t\tonStateChange && onStateChange( scope.id, prop );\n\n\t\t\tscope.setState( prop );\n\t\t};\n\n\t\treturn (\n\t\t\t<RibbonTooltip\n\t\t\t\tkey={ data.id }\n\t\t\t\tid={ data.id }\n\t\t\t\tname={ data.name }\n\t\t\t\tdisplayName={ data.title }\n\t\t\t\tcontent={ data.content }\n\t\t\t\tenabled={ data.enabled }\n\t\t\t\thidden={ data.hidden }\n\t\t\t\tonStateChange={ updateTooltip }\n\t\t\t\tref=\"tooltip\" />\n\t\t);\n\t}\n\n\t/**\n\t * Button clicking event handler.\n\t */\n\thandleClick( event ) {\n\t\tif( !this.enabled ) return;\n\n\t\tconst clickHandler = this.props.clickHandler;\n\t\tclickHandler && clickHandler( event );\n\t}\n\n\t/**\n\t * Button hovering over event handler.\n\t */\n\thandleMouseOver() {\n\t\tconst tooltip = this.tooltip;\n\t\ttooltip && tooltip.show();\n\t}\n\n\t/**\n\t * Button hovering out event handler.\n\t */\n\thandleMouseOut() {\n\t\tconst tooltip = this.tooltip;\n\t\ttooltip && tooltip.hide();\n\t}\n\n\trender() {\n\t\tconst outerDynCSS = ClassNames({\n\t\t\t'ui-ribbon-disabled': ( this.enabled === false ),\n\t\t\t'ui-ribbon-invisible': this.hidden\n\t\t});\n\n\t\tconst innerDynCSS = ClassNames({\n\t\t\t'ui-ribbon-active': this.actived\n\t\t});\n\n\t\tconst formatLegend = ( legend ) => {\n\t\t\tconst texts = legend.split( '\\\\n' );\n\t\t\tlet result = <span>{ legend }</span>;\n\n\t\t\tif( texts.length > 1 ) {\n\t\t\t\tresult = texts.map(( txt ) => {\n\t\t\t\t\t\treturn ( \n\t\t\t\t\t\t\t<span>\n\t\t\t\t\t\t\t\t{ txt }\n\t\t\t\t\t\t\t\t<br />\n\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t);\n\t\t\t\t\t});\n\t\t\t}\n\t\t\treturn result;\n\t\t};\n\n\t\treturn (\n\t\t\t<a\n\t\t\t\tkey={ this.id }\n\t\t\t\tid={ this.id }\n\t\t\t\tclassName={ outerDynCSS }\n\t\t\t\tonClick={ this.handleClick }\n\t\t\t\tonMouseOver={ this.handleMouseOver }\n\t\t\t\tonMouseOut={ this.handleMouseOut } >\n\n\t\t\t\t<div\n\t\t\t\t\trole={ this.role }\n\t\t\t\t\tclassName={ \"ui-ribbon-button \" + this.type + \" ui-ribbon-relative ui-ribbon-inline ui-ribbon-center \" + innerDynCSS } >\n\n\t\t\t\t\t<img src={ this.icon } />\n\t\t\t\t\t<div className=\"ui-ribbon-button-legend\">\n\t\t\t\t\t\t{ formatLegend( this.displayName ) }\n\t\t\t\t\t</div>\n\t\t\t\t\t{ this.createTooltip() }\n\t\t\t\t</div>\n\t\t\t</a>\n\t\t);\n\t}\n}\n\nRibbonButton.propTypes = {\n\tid: React.PropTypes.string.isRequired,\n\trole: React.PropTypes.string.isRequired,\n\ttype: React.PropTypes.string.isRequired,\n\ticon: React.PropTypes.string,\n\ttooltip: React.PropTypes.instanceOf( RibbonTooltipData ),\n\ttoggleable: React.PropTypes.bool,\n\tclickHandler: React.PropTypes.func,\n\tonStateChange: React.PropTypes.func\n};\n\nRibbonButton.defaultProps = {\n\tid: newGUID(),\n\trole: 'ui-ribbon-button',\n\ttype: 'ui-ribbon-button',\n\ticon: '',\n\ttoggleable: false\n};\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport Ribbon from './Ribbon';\nimport RibbonTaskManager from './RibbonTaskManager';\nimport RibbonTaskExecuter from './RibbonTaskExecuter';\n\nconst Container = Symbol( 'container' );\nconst MainRibbon = Symbol( 'mainRibbon' );\nconst TaskManager = Symbol( 'taskManager' );\nconst TaskExecuter = Symbol( 'taskExecuter' );\n\n/**\n * RibbonCtrl\n * @class\n */\nexport default class RibbonCtrl {\n\t/**\n\t * RibbonCtrl constructor\n\t */\n\tconstructor() {\n\t\tthis[TaskManager] = new RibbonTaskManager();\n\t\tthis[Container] = undefined;\n\t\tthis[MainRibbon] = undefined;\n\t\tthis[TaskExecuter] = undefined;\n\t}\n\n\t/**\n\t * Ribbon instance.\n\t * @return {Ribbon} - Rendered Ribbon component.\n\t */\n\tget mainRibbon() {\n\t\treturn this[MainRibbon];\n\t}\n\n\t/**\n\t * Ribbon container\n\t * @return {HTMLElement} - React render target DOM element.\n\t */\n\tget container() {\n\t\treturn this[Container];\n\t}\n\n\t/**\n\t * Ribbon container\n\t * @param {HTMLElement} container - React render target DOM element.\n\t */\n\tset container( container ) {\n\t\tif( !(container instanceof HTMLElement) ) throw '[RibbonCtrl] Input container must be a HTML DOM element.';\n\n\t\tthis[Container] = container;\n\t}\n\n\t/**\n\t * RibbonTaskManager instance.\n\t * @return {RibbonTaskManager}\n\t */\n\tget taskManager() {\n\t\treturn this[TaskManager];\n\t}\n\n\t/**\n\t * RibbonTaskExecuter instance.\n\t * @return {RibbonTaskExecuter}\n\t */\n\tget taskExecuter() {\n\t\treturn this[TaskExecuter];\n\t}\n\n\t/**\n\t * Register RibbonTask.\n\t * @param {string} taskId - Task Identification.\n\t * @param {RibbonTask} task - Content instance of RibbonTask.\n\t * @return {bool} - If task is not type of RibbonTask or registered, it will return false.\n\t */\n\tregisterTask( taskId, task ) {\n\t\tif( !this.taskManager ) return false;\n\n\t\treturn this.taskManager.register( taskId, task );\n\t}\n\n\t/**\n\t * Unregister RibbonTask.\n\t * @param {string} taskId - Task Identification.\n\t * @return {bool} - If task is not registered, it will return false.\n\t */\n\tunregisterTask( taskId ) {\n\t\tif( !this.taskManager ) return false;\n\n\t\treturn this.taskManager.unregister( taskId );\n\t}\n\n\t/**\n\t * Execute registered RibbonTask.\n\t * @param {string} taskId - Task Identification.\n\t * @return {bool} - If task is not registered or failed to execute, it will return false.\n\t */\n\texecuteTask( taskId, options ) {\n\t\tif( !this.taskExecuter ) return false;\n\n\t\treturn this.taskExecuter.execute( taskId, options );\n\t}\n\n\t/**\n\t * Discard executed RibbonTask.\n\t * @param {string} taskId - Task Identification.\n\t * @return {bool} - If task is not registered or failed to discard changes, it will return false.\n\t */\n\tdiscardTask( taskId ) {\n\t\tif( !this.taskExecuter ) return false;\n\n\t\treturn this.taskExecuter.discard( taskId );\n\t}\n\n\t/**\n\t * Start UI rendering.\n\t * @return {Promise} - Result.\n\t * @resolve {RibbonCtrl} - Self RibbonCtrl instance.\n\t * @reject {object} - Errors.\n\t */\n\trun() {\n\t\tconst scope = this;\n\n\t\treturn new Promise( ( resolve, reject ) => {\n\t\t\ttry {\n\t\t\t\tconst container = scope.container;\n\t\t\t\tconst taskManager = scope.taskManager;\n\n\t\t\t\tscope[MainRibbon] = ReactDOM.render( <Ribbon />, container );\n\t\t\t\tscope[TaskExecuter] = new RibbonTaskExecuter( scope.mainRibbon, taskManager );\n\n\t\t\t\tresolve( scope );\n\t\t\t} catch( error ) {\n\t\t\t\treject( error );\n\t\t\t}\n\t\t});\n\t}\n}\n","import React from 'react';\nimport ClassNames from 'classnames';\nimport RibbonItem from './RibbonItem';\nimport RibbonButton from './RibbonButton';\nimport RibbonPushButton from './RibbonPushButton';\nimport RibbonToggleButton from './RibbonToggleButton';\nimport RibbonItemData from './data/RibbonItemData';\nimport RibbonButtonData from './data/RibbonButtonData';\nimport RibbonPushButtonData from './data/RibbonPushButtonData';\nimport RibbonToggleButtonData from './data/RibbonToggleButtonData';\nimport { newGUID } from './utility';\n\nconst Items = Symbol( 'items' );\n\n/**\n * RibbonGroup\n * @extends RibbonItem\n * @class\n */\nexport default class RibbonGroup extends RibbonItem {\n\t/**\n\t * RibbonGroup constructor\n\t * @param {object} props - React component properties\n\t */\n\tconstructor( props ) {\n\t\tsuper( props );\n\n\t\tthis.state = Object.assign( this.state,\n\t\t\t{\n\t\t\t\titems: [].concat( props.items )\n\t\t\t});\n\n\t\tthis[Items] = [];\n\t}\n\n\t/**\n\t * Panel's children items\n\t * @return {[RibbonButtonData]} - Ribbon item data.\n\t */\n\tget items() {\n\t\treturn this[Items];\n\t}\n\n\t/**\n\t * Instance edis/en-able status.\n\t * @return {bool} - If false, make instance be disabled.\n\t */\n\tget enabled() {\n\t\treturn super.enabled;\n\t}\n\n\t/**\n\t * Instance edis/en-able status.\n\t * @param {bool} [enabled = true] - If false, make instance be disabled.\n\t */\n\tset enabled( enabled = true ) {\n\t\tif( this.hidden ) return;\n\n\t\tconst isEnabled = ( enabled === true );\n\t\tsuper.enabled = isEnabled;\n\n\t\t// Cascaded applying changes\n\t\tthis.items.map( ( item ) => {\n\t\t\titem.enabled = isEnabled;\n\t\t});\n\t}\n\n\t/**\n\t * Instance is hidden or not.\n\t * @return {bool} - If false, instance is going to disppear on the UI.\n\t */\n\tget hidden() {\n\t\treturn super.hidden;\n\t}\n\n\t/**\n\t * Instance is hidden or not.\n\t * @return {bool} [hidden = false]- If false, instance is going to disppear on the UI.\n\t */\n\tset hidden( hidden = false ) {\n\t\tconst isHidden = ( hidden === true );\n\t\tsuper.hidden = isHidden;\n\n\t\t// Cascaded applying changes\n\t\tthis.items.map( ( item ) => {\n\t\t\titem.hidden = isHidden;\n\t\t});\n\t}\n\n\t/**\n\t * Add new RibbonButton by given data.\n\t * @param {RibbonButtonData} itemData - Ribbon button data for creating new item in the RibbonGroup.\n\t * @return {RibbonButton} - Rendered RibbonButton component.\n\t */\n\taddItem( itemData ) {\n\t\tconst idx = this.items.findIndex( ( item ) => ( item.id == itemData.id || item.name === itemData.name ) );\n\t\tif( !(itemData instanceof RibbonButtonData) || idx !== -1 )\n\t\t\treturn console.log( '%c[RibbonGroup] Input itemData is invalid or duplicate.', 'color:red;' );\n\n\t\tconst items = this.state.items.concat( itemData );\n\n\t\tconst prop = { items };\n\t\tconst onStateChange = this.props.onStateChange;\n\t\tonStateChange && onStateChange( this.id, prop );\n\n\t\tthis.setState( prop );\n\n\t\treturn this.items[ this.items.length -1 ];\n\t}\n\n\tcomponentWillUpdate( nextProps, nextState ) {\n\t\tthis[Items].length = 0;\n\t}\n\n\trender() {\n\t\tconst scope = this;\n\t\tconst items = this.state.items;\n\n\t\tconst updateItem = ( id, data ) => {\n\t\t\tlet items = scope.state.items;\n\t\t\tconst item = items.find( ( item ) => item.id === id );\n\t\t\tif( !item ) return;\n\n\t\t\tObject.assign( item, data );\n\n\t\t\tconst prop = { items };\n\t\t\tconst onStateChange = scope.props.onStateChange;\n\t\t\tonStateChange && onStateChange( scope.id, prop );\n\n\t\t\tscope.setState( prop );\n\t\t};\n\n\t\tconst createItem = ( item ) => {\n\t\t\tlet result;\n\t\t\tswitch( item.type ) {\n\t\t\t\tcase 'ui-ribbon-button-big':\n\t\t\t\t\tconst RibbonPushButtonLike = ( item.role === 'ui-ribbon-button-toggle' ) ? RibbonToggleButton : RibbonPushButton;\n\t\t\t\t\tresult = (\n\t\t\t\t\t\t<RibbonPushButtonLike\n\t\t\t\t\t\t\tkey={ item.id }\n\t\t\t\t\t\t\tid={ item.id }\n\t\t\t\t\t\t\tname={ item.name }\n\t\t\t\t\t\t\tdisplayName={ item.displayName }\n\t\t\t\t\t\t\tenabled={ item.enabled }\n\t\t\t\t\t\t\thidden={ item.hidden }\n\t\t\t\t\t\t\ttype={ item.type }\n\t\t\t\t\t\t\tactived={ item.actived }\n\t\t\t\t\t\t\ticon={ item.icon }\n\t\t\t\t\t\t\ttooltip={ item.tooltip }\n\t\t\t\t\t\t\ttoggleable={ item.toggleable }\n\t\t\t\t\t\t\tclickHandler={ item.clickHandler }\n\t\t\t\t\t\t\tonStateChange={ updateItem }\n\t\t\t\t\t\t\tref={ ( c ) => { if( c ) scope.items.push( c ) } } />\n\t\t\t\t\t);\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\n\t\t\treturn result;\n\t\t};\n\n\t\tconst dynCSS = ClassNames({\n\t\t\t'ui-ribbon-disabled': ( this.enabled === false ),\n\t\t\t'ui-ribbon-invisible': this.hidden\n\t\t});\n\n\t\treturn (\n\t\t\t<div\n\t\t\t\tkey={ this.id }\n\t\t\t\tid={ this.id }\n\t\t\t\tclassName={ \"ui-ribbon-group ui-ribbon-inline \" + dynCSS }>\n\n\t\t\t\t{ items.map( createItem ) }\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nRibbonGroup.propTypes = {\n\tid: React.PropTypes.string.isRequired,\n\titems: React.PropTypes.arrayOf( React.PropTypes.instanceOf( RibbonButtonData ) ),\n\tonStateChange: React.PropTypes.func\n};\n\nRibbonGroup.defaultProps = {\n\tid: newGUID(),\n\titems: []\n};\n","import React from 'react';\nimport ClassNames from 'classnames';\nimport RibbonBase from './RibbonBase';\nimport { newGUID } from './utility';\n\n/**\n * RibbonItem\n * @extends RibbonBase\n * @class\n */\nexport default class RibbonItem extends RibbonBase {\n\t/**\n\t * RibbonItem constructor\n\t * @param {object} props - React component properties\n\t */\n\tconstructor( props ) {\n\t\tsuper( props );\n\t\t\n\t\tlet actived = ( props.actived === true );\n\n\t\tthis.state = Object.assign( this.state, { actived } );\n\t}\n\n\t/**\n\t * Item type.\n\t * @return {string} - Item type for identification.\n\t */\n\tget type() {\n\t\treturn this.props.type;\n\t}\n\t\n\t/**\n\t * Item actived state.\n\t * @return {bool} - If true, it repsents item is actived currently.\n\t */\n\tget actived() {\n\t\treturn this.state.actived;\n\t}\n\n\t/**\n\t * Item actived state.\n\t * @return {bool} [actived = false] - If true, it repsents item is actived currently.\n\t */\n\tset actived( actived = false ) {\n\t\tconst isActived = ( actived === true );\n\t\tconst prop = { actived: isActived };\n\n\t\tconst onStateChange = this.props.onStateChange;\n\t\tonStateChange && onStateChange( this.id, prop );\n\n\t\tthis.setState( prop );\n\t}\n}\n\nRibbonItem.propTypes = {\n\tid: React.PropTypes.string.isRequired,\n\ttype: React.PropTypes.string.isRequired,\n\tactived: React.PropTypes.bool,\n\tonStateChange: React.PropTypes.func\n};\n\nRibbonItem.defaultProps = {\n\tid: newGUID(),\n\ttype: 'ui-ribbon-panel-item',\n\tactived: false\n};\n","import React from 'react';\nimport ClassNames from 'classnames';\nimport RibbonBase from './RibbonBase';\nimport RibbonItem from './RibbonItem';\nimport RibbonButton from './RibbonButton';\nimport RibbonPushButton from './RibbonPushButton';\nimport RibbonToggleButton from './RibbonToggleButton';\nimport RibbonGroup from './RibbonGroup';\nimport RibbonRadioButtonGroup from './RibbonRadioButtonGroup';\nimport RibbonItemData from './data/RibbonItemData';\nimport RibbonButtonData from './data/RibbonButtonData';\nimport RibbonPushButtonData from './data/RibbonPushButtonData';\nimport RibbonToggleButtonData from './data/RibbonToggleButtonData';\nimport RibbonGroupData from './data/RibbonGroupData';\nimport RibbonRadioButtonGroupData from './data/RibbonRadioButtonGroupData';\nimport { newGUID } from './utility';\n\nconst Items = Symbol( 'items' );\n\n/**\n * RibbonPanel\n * @extends RibbonBase\n * @class\n */\nexport default class RibbonPanel extends RibbonBase {\n\t/**\n\t * RibbonPanel constructor\n\t * @param {object} props - React component properties\n\t */\n\tconstructor( props ) {\n\t\tsuper( props );\n\n\t\tthis.state = Object.assign( this.state,\n\t\t\t{\n\t\t\t\titems: [].concat( props.items )\n\t\t\t});\n\n\t\tthis[Items] = [];\n\t}\n\n\t/**\n\t * Panel has seperator or not.\n\t * @return {bool} - If true, panel will be seperated with other panels by a panel seperator.\n\t */\n\tget seperator() {\n\t\treturn this.props.seperator;\n\t}\n\n\t/**\n\t * Panel's children items\n\t * @return {[RibbonItemData]} - Ribbon item data.\n\t */\n\tget items() {\n\t\treturn this[Items];\n\t}\n\n\t/**\n\t * Instance edis/en-able status.\n\t * @return {bool} - If false, make instance be disabled.\n\t */\n\tget enabled() {\n\t\treturn super.enabled;\n\t}\n\n\t/**\n\t * Instance edis/en-able status.\n\t * @param {bool} [enabled = true] - If false, make instance be disabled.\n\t */\n\tset enabled( enabled = true ) {\n\t\tif( this.hidden ) return;\n\n\t\tconst isEnabled = ( enabled === true );\n\t\tsuper.enabled = isEnabled;\n\n\t\t// Cascaded applying changes\n\t\tthis.items.map( ( item ) => {\n\t\t\titem.enabled = isEnabled;\n\t\t});\n\t}\n\n\t/**\n\t * Instance is hidden or not.\n\t * @return {bool} - If false, instance is going to disppear on the UI.\n\t */\n\tget hidden() {\n\t\treturn super.hidden;\n\t}\n\n\t/**\n\t * Instance is hidden or not.\n\t * @return {bool} [hidden = false]- If false, instance is going to disppear on the UI.\n\t */\n\tset hidden( hidden = false ) {\n\t\tconst isHidden = ( hidden === true );\n\t\tsuper.hidden = isHidden;\n\n\t\t// Cascaded applying changes\n\t\tthis.items.map( ( item ) => {\n\t\t\titem.hidden = isHidden;\n\t\t});\n\t}\n\n\t/**\n\t * Add new RibbonItem by given data.\n\t * @param {RibbonItemData} itemData - Ribbon item data for creating new item on the panel.\n\t * @return {RibbonItem} - Rendered RibbonItem component.\n\t */\n\taddItem( itemData ) {\n\t\tconst idx = this.items.findIndex( ( item ) => ( item.id == itemData.id || item.name === itemData.name ) );\n\t\tif( !(itemData instanceof RibbonItemData) || idx !== -1 )\n\t\t\treturn console.log( '%c[RibbonPanel] Input itemData is invalid or duplicate.', 'color:red;' );\n\n\t\tconst items = this.state.items.concat( itemData );\n\n\t\tconst prop = { items };\n\t\tconst onStateChange = this.props.onStateChange;\n\t\tonStateChange && onStateChange( this.id, prop );\n\n\t\tthis.setState( prop );\n\n\t\treturn this.items[ this.items.length -1 ];\n\t}\n\n\tcomponentWillUpdate( nextProps, nextState ) {\n\t\tthis[Items].length = 0;\n\t}\n\n\trender() {\n\t\tconst scope = this;\n\t\tconst items = this.state.items;\n\n\t\tconst outerDynCSS = ClassNames({\n\t\t\t'ui-ribbon-disabled': ( this.enabled === false ),\n\t\t\t'ui-ribbon-invisible': this.hidden,\n\t\t\t'ui-ribbon-inline': ( this.hidden === false )\n\t\t});\n\n\t\tconst innerDynCSS = ClassNames({\n\t\t\t'ui-ribbon-empty': ( items.length === 0 ),\n\t\t\t'ui-riibon-panel-single-btn': ( items.length === 1 ),\n\t\t});\n\n\t\tconst legendDynCSS = ClassNames({\n\t\t\t'ui-ribbon-disabled': ( this.enabled === false )\n\t\t});\n\n\t\tconst updateItem = ( id, data ) => {\n\t\t\tlet items = scope.state.items;\n\t\t\tconst item = items.find( ( item ) => item.id === id );\n\t\t\tif( !item ) return;\n\n\t\t\tObject.assign( item, data );\n\n\t\t\tconst prop = { items };\n\t\t\tconst onStateChange = scope.props.onStateChange;\n\t\t\tonStateChange && onStateChange( scope.id, prop );\n\n\t\t\tscope.setState( prop );\n\t\t};\n\n\t\tconst createItem = ( item ) => {\n\t\t\tlet result;\n\t\t\tswitch( item.type ) {\n\t\t\t\tcase 'ui-ribbon-radio-group':\n\t\t\t\tcase 'ui-ribbon-group':\n\t\t\t\t\tconst RibbonGroupLike = ( item.type === 'ui-ribbon-group' ) ? RibbonGroup : RibbonRadioButtonGroup;\n\t\t\t\t\tresult = (\n\t\t\t\t\t\t<RibbonGroupLike\n\t\t\t\t\t\t\tkey={ item.id }\n\t\t\t\t\t\t\tid={ item.id }\n\t\t\t\t\t\t\tname={ item.name }\n\t\t\t\t\t\t\tdisplayName={ item.displayName }\n\t\t\t\t\t\t\tenabled={ item.enabled }\n\t\t\t\t\t\t\thidden={ item.hidden }\n\t\t\t\t\t\t\ttype={ item.type }\n\t\t\t\t\t\t\titems={ item.items }\n\t\t\t\t\t\t\tactived={ item.actived }\n\t\t\t\t\t\t\tonStateChange={ updateItem }\n\t\t\t\t\t\t\tref={ ( c ) => { if( c ) scope.items.push( c ) } } />\n\t\t\t\t\t);\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'ui-ribbon-button-big':\n\t\t\t\t\tconst RibbonPushButtonLike = ( item.role === 'ui-ribbon-button-toggle' ) ? RibbonToggleButton : RibbonPushButton;\n\t\t\t\t\tresult = (\n\t\t\t\t\t\t<RibbonPushButtonLike\n\t\t\t\t\t\t\tkey={ item.id }\n\t\t\t\t\t\t\tid={ item.id }\n\t\t\t\t\t\t\tname={ item.name }\n\t\t\t\t\t\t\tdisplayName={ item.displayName }\n\t\t\t\t\t\t\tenabled={ item.enabled }\n\t\t\t\t\t\t\thidden={ item.hidden }\n\t\t\t\t\t\t\ttype={ item.type }\n\t\t\t\t\t\t\tactived={ item.actived }\n\t\t\t\t\t\t\ticon={ item.icon }\n\t\t\t\t\t\t\ttooltip={ item.tooltip }\n\t\t\t\t\t\t\ttoggleable={ item.toggleable }\n\t\t\t\t\t\t\tclickHandler={ item.clickHandler }\n\t\t\t\t\t\t\tonStateChange={ updateItem }\n\t\t\t\t\t\t\tref={ ( c ) => { if( c ) scope.items.push( c ) } } />\n\t\t\t\t\t);\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\n\t\t\treturn result;\n\t\t};\n\n\t\tconst createSeperator = ( seperator = true ) => {\n\t\t\tif( seperator )\n\t\t\t\treturn(\n\t\t\t\t\t<div className=\"ui-ribbon-panel-seperator ui-ribbon-relative ui-ribbon-inline\"></div>\n\t\t\t\t);\n\t\t};\n\n\t\treturn (\n\t\t\t<div\n\t\t\t\tkey={ this.id }\n\t\t\t\tclassName={ \"ui-ribbon-panel-container ui-ribbon-relative \" + outerDynCSS }>\n\t\t\t\t{ createSeperator( this.seperator ) }\n\n\t\t\t\t<div className={ \"ui-ribbon-panel ui-ribbon-relative ui-ribbon-inline \" + innerDynCSS }>\n\t\t\t\t\t<div className=\"ui-ribbon-panel-contents\">\n\t\t\t\t\t\t{ items.map( createItem ) }\n\n\t\t\t\t\t\t<div className={ \"ui-ribbon-panel-legend ui-ribbon-absolute \" + legendDynCSS }>\n\t\t\t\t\t\t\t{ this.displayName }\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nRibbonPanel.propTypes = {\n\tid: React.PropTypes.string.isRequired,\n\tseperator: React.PropTypes.bool,\n\titems: React.PropTypes.arrayOf( React.PropTypes.instanceOf( RibbonItemData ) ),\n\tonStateChange: React.PropTypes.func\n};\n\nRibbonPanel.defaultProps = {\n\tid: newGUID(),\n\tseperator: true,\n\titems: []\n};\n","import React from 'react';\nimport ClassNames from 'classnames';\nimport RibbonButton from './RibbonButton';\n\n/**\n * RibbonPushButton\n * @class\n */\nexport default class RibbonPushButton extends RibbonButton {\n\t/**\n\t * RibbonPushButton constructor\n\t * @param {object} props - React component properties\n\t */\n\tconstructor( props ) {\n\t\tsuper( props );\n\t}\n\n\trender() {\n\t\tconst dynCSS = ClassNames({\n\t\t\t'ui-ribbon-disabled': ( this.enabled === false ),\n\t\t\t'ui-ribbon-invisible': this.hidden\n\t\t});\n\n\t\treturn (\n\t\t\t<div className={ \"ui-ribbon-button-group ui-ribbon-inline \" + dynCSS }>\n\t\t\t\t{ super.render() }\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nRibbonPushButton.propTypes = {\n\ttype: React.PropTypes.string.isRequired,\n\tonStateChange: React.PropTypes.func\n};\n\nRibbonPushButton.defaultProps = {\n\ttype: 'ui-ribbon-button-big'\n};\n","import React from 'react';\nimport ClassNames from 'classnames';\nimport RibbonGroup from './RibbonGroup';\nimport RibbonToggleButton from './RibbonToggleButton';\nimport RibbonToggleButtonData from './data/RibbonToggleButtonData';\nimport { newGUID } from './utility';\n\nconst Current = Symbol( 'current' );\n\n/**\n * RibbonRadioButtonGroup\n * @extends RibbonGroup\n * @class\n */\nexport default class RibbonRadioButtonGroup extends RibbonGroup {\n\t/**\n\t * RibbonRadioButtonGroup constructor\n\t * @param {object} props - React component properties\n\t */\n\tconstructor( props ) {\n\t\tsuper( props );\n\n\t\tthis[Current] = undefined;\n\t}\n\n\t/**\n\t * Current actived RibbonToggleButton;\n\t * @return {string} - RibbonToggleButton id.\n\t */\n\tget current() {\n\t\treturn this[Current];\n\t}\n\n\t/**\n\t * Current actived RibbonToggleButton;\n\t * @param {string} id - RibbonToggleButton id.\n\t */\n\tset current( id ) {\n\t\tconst item = this.items.find( ( item ) => item.id === id );\n\t\tif( !item ) throw '[RibbonRadioButtonGroup] Input id not exists.'\n\n\t\titem.actived = true;\n\t\tthis[Current] = item.id;\n\t}\n\n\t/**\n\t * Add new RibbonToggleButton by given data.\n\t * @param {RibbonToggleButtonData} itemData - Ribbon button data for creating new item in the RibbonRadioButtonGroup.\n\t * @return {RibbonToggleButton} - Rendered RibbonToggleButton component.\n\t * @override\n\t */\n\taddItem( itemData ) {\n\t\tif( !(itemData instanceof RibbonToggleButtonData) )\n\t\t\treturn console.log( '%c[RibbonGroup] Input itemData is invalid or duplicate.', 'color:red;' );\n\n\t\tconst item = super.addItem( itemData );\n\n\t\tif( !this.current )\n\t\t\tthis.current = item.id;\n\n\t\treturn item;\n\t}\n\t\n\trender() {\n\t\tconst scope = this;\n\t\tconst items = this.state.items;\n\n\t\tconst updateCurrentItem = ( id ) => {\n\t\t\tif( typeof id !== 'string' || scope.current === id ) return;\n\n\t\t\tscope.current = id;\n\t\t\tscope.items.map( ( item ) => {\n\t\t\t\tif( item.id !== id ) item.actived = false;\n\t\t\t});\n\t\t};\n\n\t\tconst updateItem = ( id, data ) => {\n\t\t\tlet items = scope.state.items;\n\t\t\tconst item = items.find( ( item ) => item.id === id );\n\t\t\tif( !item ) return;\n\n\t\t\tObject.assign( item, data );\n\n\t\t\tconst prop = { items };\n\t\t\tconst onStateChange = scope.props.onStateChange;\n\t\t\tonStateChange && onStateChange( scope.id, prop );\n\n\t\t\tscope.setState( prop );\n\t\t};\n\n\t\tconst createItem = ( item ) => {\n\t\t\treturn (\n\t\t\t\t<RibbonToggleButton\n\t\t\t\t\tkey={ item.id }\n\t\t\t\t\tid={ item.id }\n\t\t\t\t\tname={ item.name }\n\t\t\t\t\tdisplayName={ item.displayName }\n\t\t\t\t\tenabled={ item.enabled }\n\t\t\t\t\thidden={ item.hidden }\n\t\t\t\t\ttype={ item.type }\n\t\t\t\t\tactived={ item.actived }\n\t\t\t\t\ticon={ item.icon }\n\t\t\t\t\ttooltip={ item.tooltip }\n\t\t\t\t\ttoggleable={ item.toggleable }\n\t\t\t\t\tclickHandler={ item.clickHandler }\n\t\t\t\t\tonGroupCurrentChange={ () => { updateCurrentItem( item.id ) } }\n\t\t\t\t\tonStateChange={ updateItem }\n\t\t\t\t\tref={ ( c ) => { if( c ) scope.items.push( c ) } } />\n\t\t\t);\n\t\t};\n\n\t\tconst dynCSS = ClassNames({\n\t\t\t'ui-ribbon-disabled': ( this.enabled === false ),\n\t\t\t'ui-ribbon-invisible': this.hidden\n\t\t});\n\n\t\treturn (\n\t\t\t<div\n\t\t\t\tkey={ this.id }\n\t\t\t\tid={ this.id }\n\t\t\t\tclassName={ \"ui-ribbon-group ui-ribbon-inline \" + dynCSS }>\n\n\t\t\t\t{ items.map( createItem ) }\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nRibbonGroup.propTypes = {\n\tid: React.PropTypes.string.isRequired,\n\titems: React.PropTypes.arrayOf( React.PropTypes.instanceOf( RibbonToggleButtonData ) ),\n\tonStateChange: React.PropTypes.func\n};\n\nRibbonGroup.defaultProps = {\n\tid: newGUID(),\n\titems: []\n};\n","import React from 'react';\nimport ClassNames from 'classnames';\nimport RibbonBase from './RibbonBase';\nimport RibbonPanel from './RibbonPanel';\nimport RibbonPanelData from './data/RibbonPanelData';\nimport { newGUID } from './utility';\n\nconst Panels = Symbol( 'panels' );\n\n/**\n * RibbonTab\n * @extends RibbonBase\n * @class\n */\nexport default class RibbonTab extends RibbonBase {\n\t/**\n\t * RibbonTab constructor\n\t * @param {object} props - React component properties\n\t */\n\tconstructor( props ) {\n\t\tsuper( props );\n\n\t\tlet actived = ( props.actived === true );\n\n\t\tthis.state = Object.assign( this.state,\n\t\t\t{\n\t\t\t\tactived: actived,\n\t\t\t\tpanels: [].concat( props.panels )\n\t\t\t});\n\n\t\tthis[Panels] = [];\n\n\t\tthis.handleClick = this.handleClick.bind( this );\n\t}\n\n\t/**\n\t * Tab type.\n\t * @return {string} - Tab type for identification.\n\t */\n\tget type() {\n\t\treturn this.props.type;\n\t}\n\n\t/**\n\t * Instance edis/en-able status.\n\t * @return {bool} - If false, make instance be disabled.\n\t */\n\tget enabled() {\n\t\treturn super.enabled;\n\t}\n\n\t/**\n\t * Instance edis/en-able status.\n\t * @param {bool} [enabled = true] - If false, make instance be disabled.\n\t */\n\tset enabled( enabled = true ) {\n\t\tif( this.hidden ) return;\n\n\t\tconst isEnabled = ( enabled === true );\n\n\t\tconst prop = { enabled: isEnabled, actived: false };\n\t\tconst onStateChange = this.props.onStateChange;\n\t\tonStateChange && onStateChange( this.id, prop );\n\n\t\t// Cascaded applying changes\n\t\tthis.panels.map( ( panel ) => {\n\t\t\tpanel.enabled = isEnabled;\n\t\t});\n\n\t\tthis.setState( prop );\n\t}\n\n\t/**\n\t * Instance is hidden or not.\n\t * @return {bool} - If false, instance is going to disppear on the UI.\n\t */\n\tget hidden() {\n\t\treturn super.hidden;\n\t}\n\n\t/**\n\t * Instance is hidden or not.\n\t * @return {bool} [hidden = false]- If false, instance is going to disppear on the UI.\n\t */\n\tset hidden( hidden = false ) {\n\t\tconst isHidden = ( hidden === true );\n\t\tconst isEnabled = !isHidden;\n\n\t\tconst prop = { hidden: isHidden, enabled: isEnabled, actived: false };\n\t\tconst onStateChange = this.props.onStateChange;\n\t\tonStateChange && onStateChange( this.id, prop );\n\n\t\t// Cascaded applying changes\n\t\tthis.panels.map( ( panel ) => {\n\t\t\tpanel.hidden = isHidden;\n\t\t});\n\n\t\tthis.setState( prop );\n\t}\n\n\t/**\n\t * Tab actived state.\n\t * @return {bool} - If true, it repsents tab is selected currently.\n\t */\n\tget actived() {\n\t\treturn this.state.actived;\n\t}\n\n\t/**\n\t * Tab actived state.\n\t * @return {bool} [actived = false] - If true, it repsents tab is selected currently.\n\t */\n\tset actived( actived = false ) {\n\t\tconst isActived = ( actived === true );\n\t\tconst prop = { actived: isActived };\n\n\t\tconst onStateChange = this.props.onStateChange;\n\t\tonStateChange && onStateChange( this.id, prop );\n\n\t\tthis.setState( prop );\n\t}\n\n\t/**\n\t * Tab's children panels\n\t * @return {[RibbonPanelData]} - Ribbon panel data.\n\t */\n\tget panels() {\n\t\treturn this[Panels];\n\t}\n\n\t/**\n\t * Add new panel by given data.\n\t * @param {RibbonPanelData} panelData - Ribbon panel data for creating new panel.\n\t * @return {RibbonPanel} - Rendered RibbonPanel component.\n\t */\n\taddPanel( panelData ) {\n\t\tconst idx = this.panels.findIndex( ( panel ) => ( panel.id == panelData.id || panel.name === panelData.name ) );\n\t\tif( !(panelData instanceof RibbonPanelData) || idx !== -1 )\n\t\t\treturn console.log( '%c[RibbonTab] Input panelData is invalid or duplicate.', 'color:red;' );\n\n\t\tpanelData.seperator = ( this.panels.length !== 0 );\n\t\tconst panels = this.state.panels.concat( panelData );\n\n\t\tconst prop = { panels };\n\t\tconst onStateChange = this.props.onStateChange;\n\t\tonStateChange && onStateChange( this.id, prop );\n\n\t\tthis.setState( prop );\n\n\t\treturn this.panels[ this.panels.length -1 ];\n\t}\n\n\tcomponentWillUpdate( nextProps, nextState ) {\n\t\tthis[Panels].length = 0;\n\t}\n\n\t/**\n\t * Tab clicking event handler\n\t */\n\thandleClick() {\n\t\tif( this.type === 'ui-ribbon-tab-application' ) return;\n\n\t\tconst onClick = this.props.onClick;\n\t\tonClick && onClick( this.id );\n\t}\n\n\trender() {\n\t\tconst scope = this;\n\t\tconst panels = this.state.panels;\n\t\tconst dynCSS = ClassNames({\n\t\t\t'ui-ribbon-active': this.actived,\n\t\t\t'ui-ribbon-disabled': ( this.enabled === false ),\n\t\t\t'ui-ribbon-invisible': this.hidden,\n\t\t\t'ui-ribbon-inline': ( this.hidden === false )\n\t\t});\n\n\t\tconst updatePanel = ( id, data ) => {\n\t\t\tlet panels = scope.state.panels;\n\t\t\tconst panel = panels.find( ( panel ) => panel.id === id );\n\t\t\tif( !panel ) return;\n\n\t\t\tObject.assign( panel, data );\n\n\t\t\tconst prop = { panels };\n\t\t\tconst onStateChange = scope.props.onStateChange;\n\t\t\tonStateChange && onStateChange( scope.id, prop );\n\n\t\t\tscope.setState( prop );\n\t\t};\n\n\t\tconst createPanel = ( panel ) => {\n\t\t\treturn (\n\t\t\t\t<RibbonPanel\n\t\t\t\t\tkey={ panel.id }\n\t\t\t\t\tid={ panel.id }\n\t\t\t\t\tname={ panel.name }\n\t\t\t\t\tdisplayName={ panel.displayName }\n\t\t\t\t\tenabled={ panel.enabled }\n\t\t\t\t\thidden={ panel.hidden }\n\t\t\t\t\tseperator={ panel.seperator }\n\t\t\t\t\titems={ panel.items }\n\t\t\t\t\tonStateChange={ updatePanel }\n\t\t\t\t\tref={ ( c ) => { if( c ) scope.panels.push( c ) } } />\n\t\t\t);\n\t\t};\n\n\t\treturn (\n\t\t\t<li\n\t\t\t\tkey={ this.id }\n\t\t\t\tid={ this.id }\n\t\t\t\tclassName={ this.type + \" \" + dynCSS }\n\t\t\t\trole=\"ui-ribbon-tab\"\n\t\t\t\tonClick={ this.handleClick } >\n\n\t\t\t\t<span className=\"ui-ribbon-uppercase\">{ this.displayName }</span>\n\t\t\t\t<div className=\"ui-ribbon-tab-contents ui-ribbon-absolute\">\n\t\t\t\t\t{ panels.map( createPanel ) }\n\t\t\t\t</div>\n\t\t\t</li>\n\t\t);\n\t}\n}\n\nRibbonTab.propTypes = {\n\tid: React.PropTypes.string.isRequired,\n\ttype: React.PropTypes.string.isRequired,\n\tactived: React.PropTypes.bool,\n\tpanels: React.PropTypes.arrayOf( React.PropTypes.instanceOf( RibbonPanelData ) ),\n\tonStateChange: React.PropTypes.func\n};\n\nRibbonTab.defaultProps = {\n\tid: newGUID(),\n\ttype: 'ui-ribbon-tab-normal',\n\tactived: false,\n\tpanels: []\n};\n","import Ribbon from './Ribbon';\n\nconst RibbonInst = Symbol( 'ribbon' );\nconst Options = Symbol( 'options' );\n\n/**\n * RibbonTask\n * @class\n * @classdesc For bulk creating or modifying Ribbon contents.\n */\nexport default class RibbonTask {\n\t/**\n\t * RibbonTask constructor.\n\t * @param {Ribbon} ribbon - Rendered Ribbon component.\n\t * @param {object} options - Task options.\n\t */\n\tconstructor( ribbon, options ) {\n\t\tif( !(ribbon instanceof Ribbon ) ) throw 'No Ribbon instance available.';\n\n\t\tthis[RibbonInst] = ribbon;\n\t\tthis[Options] = options;\n\t}\n\n\t/**\n\t * Rendered Ribbon component.\n\t * @return {Ribbon}\n\t */\n\tget ribbon() {\n\t\treturn this[RibbonInst];\n\t}\n\n\t/**\n\t * Task options.\n\t * @return {object}\n\t */\n\tget options() {\n\t\treturn this[Options];\n\t}\n\n\t/**\n\t * Execute task content.\n\t * @return {bool} If true, it represents this task was executed by the Ribbon.\n\t */\n\texecute() {\n\t\treturn true;\n\t}\n\n\t/**\n\t * Discard all changes.\n\t * @return {bool} If true, it represents changes made by this task was removed from the Ribbon.\n\t */\n\tdiscard() {\n\t\treturn true;\n\t}\n}\n","import Ribbon from './Ribbon';\nimport RibbonTaskManager from './RibbonTaskManager';\n\nconst RibbonInst = Symbol( 'ribbon' );\nconst Tasks = Symbol( 'tasks' );\nconst TaskManager = Symbol( 'taskManager' );\n\n/**\n * RibbonTaskExecuter\n * @class\n * @classdesc\tClass for executing tasks to create or modify Ribbon contents.\n */\nexport default class RibbonTaskExecuter {\n\t/**\n\t * RibbonTaskExecuter constructor.\n\t * @param {Ribbon} ribbon - Rendered Ribbon component.\n\t * @param {RibbonTaskManager} taskManager -\tRibbonTaskManager instance.\n\t */\n\tconstructor( ribbon, taskManager ) {\n\t\tif( !(ribbon instanceof Ribbon ) ) throw 'No Ribbon instance available.';\n\t\tif( !(taskManager instanceof RibbonTaskManager ) ) throw 'No RibbonTaskManager instance available.';\n\n\t\tthis[RibbonInst] = ribbon;\n\t\tthis[TaskManager] = taskManager;\n\t\tthis[Tasks] = {};\n\t}\n\n\t/**\n\t * Rendered Ribbon component.\n\t * @return {Ribbon}\n\t */\n\tget ribbon() {\n\t\treturn this[RibbonInst];\n\t}\n\n\t/**\n\t * Task\tmanager instance.\n\t * @return {RibbonTaskManager}\n\t */\n\tget manager() {\n\t\treturn this[TaskManager];\n\t}\n\n\t/**\n\t * All executed tasks.\n\t * @return {RibbonTask[]}\n\t */\n\tget tasks() {\n\t\treturn this[Tasks];\n\t}\n\n\t/**\n\t * Execute registered task.\n\t * @param {string} taskId - Task Identification.\n\t * @return {bool} - If task is not registered or failed to execute, it will return false.\n\t */\n\texecute( taskId, options ) {\n\t\tlet result = false;\n\n\t\tif( !this.getTask( taskId ) ) {\n\t\t\tconst taskClass = this.manager.getTask( taskId );\n\n\t\t\tif( taskClass ) {\n\t\t\t\tconst task = new taskClass( this.ribbon, options );\n\t\t\t\tresult = task.execute();\n\n\t\t\t\tif( result === true ) {\n\t\t\t\t\tthis[Tasks][taskId] = task;\n\n\t\t\t\t\tconsole.log( '[RibbonTaskExecuter] Task executed: `%s`.', taskId );\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tconsole.log( '[RibbonTaskExecuter] Task not found: `%s`.', taskId );\n\t\t\t}\n\t\t} else {\n\t\t\tconsole.log( '[RibbonTaskExecuter] Task already executed: `%s`.', taskId );\n\t\t}\n\n\t\treturn result;\n\t}\n\n\t/**\n\t * Discard executed task.\n\t * @param {string} taskId - Task Identification.\n\t * @return {bool} - If task is not registered or failed to discard changes, it will return false.\n\t */\n\tdiscard( taskId ) {\n\t\tlet result = false;\n\t\tconst task = this.getTask( taskId );\n\n\t\tif( !task ) {\n\t\t\tconsole.log( '[RibbonTaskExecuter] Task not found: `%s`.', taskId );\n\t\t} else {\n\t\t\tresult = task.discard();\n\t\t\tif( !result ) throw 'Failed to discard chnages in task: `' + taskId + '`.';\n\n\t\t\tdelete this[Tasks][taskId];\n\t\t\tconsole.log( '[RibbonTaskExecuter] Task content discarded: `%s`.', taskId );\n\t\t}\n\n\t\treturn result;\n\t}\n\n\t/**\n\t * Get executed task by given id.\n\t * @param {string} taskId - Task Identification.\n\t * @return {null | RibbonTask} - Return task definition if task is existed.\n\t */\n\tgetTask( taskId ) {\n\t\tif( this.tasks.hasOwnProperty( taskId ) ) {\n\t\t\treturn this.tasks[ taskId ];\n\t\t}\n\n\t\treturn null;\n\t}\n}\n","import RibbonTask from './RibbonTask';\n\n/**\n * Registered RibbonTask.\n * @private {RibbonTask[]}\n */\nconst Tasks = Symbol( 'tasks' );\n\n/**\n * Check wether input class is instance of RibbonTask or not.\n * @param {RibbonTask} task\n * @return {bool} - If true, it reprents task is a instance of the RibbonTask.\n */\nconst checkTaskType = ( task ) => {\n\tif( task.prototype instanceof RibbonTask ) return true;\n\treturn false;\n};\n\n/**\n * RibbonTaskManager\n * @class\n * @classdesc Task manager class for Ribbon UI.\n */\nexport default class RibbonTaskManager {\n\t/**\n\t * RibbonTaskManager constructor\n\t */\n\tconstructor() {\n\t\tthis[Tasks] = {};\n\n\t\tcheckTaskType.bind( this );\n\t}\n\n\t/**\n\t * All registered RibbonTask.\n\t * @return {RibbonTask[]}\n\t */\n\tget tasks() {\n\t\treturn this[Tasks];\n\t}\n\n\t/**\n\t * Register RibbonTask.\n\t * @param {string} taskId - Task Identification.\n\t * @param {RibbonTask} task - Content instance of RibbonTask.\n\t * @return {bool} - If task is not type of RibbonTask or registered, it will return false.\n\t */\n\tregister( taskId, task ) {\n\t\tif( !checkTaskType( task ) || this.getTask( taskId ) ) return false;\n\n\t\tthis[Tasks][taskId] = task;\n\n\t\treturn true;\n\t}\n\n\t/**\n\t * Unregister RibbonTask.\n\t * @param {string} taskId - Task Identification.\n\t * @return {bool} - If task is not registered, it will return false.\n\t */\n\tunregister( taskId ) {\n\t\tif( !this.getTask( taskId ) ) return false;\n\n\t\tdelete this[Tasks][taskId];\n\n\t\treturn true;\n\t}\n\n\t/**\n\t * Get registered task by given id.\n\t * @param {string} taskId - Task Identification.\n\t * @return {null | RibbonTask} - Return task definition if task is existed.\n\t */\n\tgetTask( taskId ) {\n\t\tif( this.tasks.hasOwnProperty( taskId ) ) {\n\t\t\treturn this.tasks[ taskId ];\n\t\t}\n\t\treturn null;\n\t}\n}\n","import React from 'react';\nimport ClassNames from 'classnames';\nimport RibbonBase from './RibbonBase';\n\n/**\n * RibbonTitlebar\n * @class\n */\nexport default class RibbonTitlebar extends RibbonBase {\n\t/**\n\t * RibbonTitlebar constructor\n\t * @param {object} props - React component properties\n\t */\n\tconstructor( props ) {\n\t\tsuper( props );\n\t}\n\n\t/**\n\t * Ribbon main title\n\t * @return {string} - Ribbon title\n\t */\n\tget title() {\n\t\treturn this.displayName;\n\t}\n\n\t/**\n\t * Ribbon main title\n\t * @param {string} title - Ribbon title\n\t */\n\tset title( title ) {\n\t\tif( typeof title !== 'string' ) throw 'Input type should be a string.';\n\n\t\tthis.displayName = title;\n\t}\n\n\t/**\n\t * Toggle titlebar be displayed or hiden.\n\t */\n\ttoggleDisplay() {\n\t\tthis.hidden = ( !this.hidden );\n\t}\n\n\trender() {\n\t\tconst dynCSS = ClassNames({\n\t\t\t'ui-ribbon-invisible': this.hidden\n\t\t});\n\n\t\treturn (\n\t\t\t<div className={ \"ui-ribbon-title \" + dynCSS }>\n\t\t\t\t<span>{ this.title }</span>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nRibbonTitlebar.propTypes = {\n\tonStateChange: React.PropTypes.func\n};\n","import React from 'react';\nimport ClassNames from 'classnames';\nimport RibbonPushButton from './RibbonPushButton';\n\n/**\n * RibbonToggleButton\n * @class\n */\nexport default class RibbonToggleButton extends RibbonPushButton {\n\t/**\n\t * RibbonToggleButton constructor\n\t * @param {object} props - React component properties\n\t */\n\tconstructor( props ) {\n\t\tsuper( props );\n\n\t\tthis.handleClick = this.handleClick.bind( this );\n\t}\n\n\t/**\n\t * Button clicking event handler.\n\t * @override\n\t */\n\thandleClick( event ) {\n\t\tif( !this.enabled ) return;\n\n\t\tif( this.toggleable ) {\n\t\t\tconst isActived = !this.actived;\n\n\t\t\tconst prop = { actived: isActived };\n\t\t\tconst onStateChange = this.props.onStateChange;\n\t\t\tonStateChange && onStateChange( this.id, prop );\n\n\t\t\t// For de/activating button by changing button's actived property.\n\t\t\tconst onGroupCurrentChange = this.props.onGroupCurrentChange;\n\t\t\tonGroupCurrentChange && onGroupCurrentChange();\n\n\t\t\tthis.setState( prop );\n\t\t}\n\n\t\tconst clickHandler = this.props.clickHandler;\n\t\tclickHandler && clickHandler( event );\n\t}\n}\n\nRibbonToggleButton.propTypes = {\n\ttype: React.PropTypes.string.isRequired,\n\trole: React.PropTypes.string.isRequired,\n\tonGroupCurrentChange: React.PropTypes.func,\n\tonStateChange: React.PropTypes.func\n};\n\nRibbonToggleButton.defaultProps = {\n\trole: 'ui-ribbon-button-toggle',\n\ttype: 'ui-ribbon-button-big'\n};\n","import React from 'react';\nimport ClassNames from 'classnames';\nimport RibbonBase from './RibbonBase';\n\n/**\n * RibbonTooltip\n * @class\n */\nexport default class RibbonTooltip extends RibbonBase {\n\t/**\n\t * RibbonTooltip constructor\n\t * @param {object} props - React component properties\n\t */\n\tconstructor( props ) {\n\t\tsuper( props );\n\n\t\tthis.state = Object.assign( this.state,\n\t\t\t{\n\t\t\t\tcontent: props.content\n\t\t\t});\n\t}\n\n\t/**\n\t * Tooltip title.\n\t * @return {string} - Ribbon tooltip title.\n\t */\n\tget title() {\n\t\treturn this.displayName;\n\t}\n\n\t/**\n\t * Tooltip title.\n\t * @return {string} title - Ribbon tooltip title.\n\t */\n\tset title( title ) {\n\t\tif( typeof title !== 'string' ) throw 'Input type should be a string.';\n\n\t\tthis.displayName = title;\n\t}\n\n\t/**\n\t * Tooltip content.\n\t * @return {string} - Tooltip content.\n\t */\n\tget content() {\n\t\treturn this.state.content;\n\t}\n\n\t/**\n\t * Tooltip content.\n\t * @return {string} - Tooltip content.\n\t */\n\tset content( content = '' ) {\n\t\tif( typeof content !== 'string' ) throw 'Input content should be a string.';\n\n\t\tconst prop = { content };\n\t\tconst onStateChange = this.props.onStateChange;\n\t\tonStateChange && onStateChange( this.id, prop );\n\n\t\tthis.setState( prop );\n\t}\n\t\n\t/**\n\t * Instance is hidden or not.\n\t * @return {bool} - If false, instance is going to disppear on the UI.\n\t * @override\n\t */\n\tget hidden() {\n\t\treturn this.state.hidden;\n\t}\n\t\n\t/**\n\t * Instance is hidden or not.\n\t * @return {bool} [hidden = false]- If false, instance is going to disppear on the UI.\n\t * @override\n\t */\n\tset hidden( hidden = false ) {\n\t\tconst isHidden = ( hidden === true );\n\n\t\tconst prop = { hidden: isHidden };\n\t\tconst onStateChange = this.props.onStateChange;\n\t\tonStateChange && onStateChange( this.id, prop );\n\n\t\tthis.setState( prop );\n\t}\n\n\t/**\n\t * Make this tooltip appear.\n\t */\n\tshow() {\n\t\tthis.hidden = false;\n\t}\n\n\t/**\n\t * Make this tooltip disappear.\n\t */\n\thide() {\n\t\tthis.hidden = true;\n\t}\n\n\trender() {\n\t\tconst dynCSS = ClassNames({\n\t\t\t'ui-ribbon-tooltip-visible': ( this.hidden === false )\n\t\t});\n\n\t\tconst createTitle = () => {\n\t\t\tif( this.title )\n\t\t\t\treturn ( <strong>{ this.title }</strong> );\n\t\t};\n\n\t\tconst createContent = () => {\n\t\t\tif( this.content )\n\t\t\t\treturn ( <p>{ this.content }</p> );\n\t\t};\n\n\t\treturn (\n\t\t\t<div id={ this.id } className={ \"ui-ribbon-tooltip \" + dynCSS }>\n\t\t\t\t{ createTitle() }\n\t\t\t\t{ createContent() }\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nRibbonTooltip.propTypes = {\n\tcontent: React.PropTypes.string,\n\tonStateChange: React.PropTypes.func\n};\n","import RibbonTabData from './RibbonTabData';\n\n/**\n * RibbonAppTabData\n * @class\n */\nexport default class RibbonAppTabData extends RibbonTabData {\n\t/**\n\t * RibbonAppTabData constructor\n\t * @param {string} [displayName = 'File'] - The name of this instance shown on the user interface, might be a localized string.\n\t */\n\tconstructor( displayName = 'File' ) {\n\t\tsuper( 'AppTab', displayName );\n\t}\n\n\t/**\n\t * Tab type.\n\t * @return {string} - Tab type for identification.\n\t * @override\n\t */\n\tget type() {\n\t\treturn 'ui-ribbon-tab-application';\n\t}\n}\n","import { newGUID } from '../utility';\n\nconst Id = Symbol( 'id' );\nconst Name = Symbol( 'name' );\nconst DisplayName = Symbol( 'displayName' );\nconst Enabled = Symbol( 'enabled' );\nconst Hidden = Symbol( 'hidden' );\n\n/**\n * RibbonBaseData\n * @class\n */\nexport default class RibbonBaseData {\n\t/**\n\t * RibbonBaseData constructor\n\t * @param {string} name - The name of this instance used by the internal mechanism.\n\t * @param {string} displayName - The name of this instance shown on the user interface, might be a localized string.\n\t */\n\tconstructor( name, displayName ) {\n\t\tif( typeof name !== 'string' ) throw 'name is required.';\n\n\t\tthis[Id] = newGUID();\n\t\tthis[Name] = name;\n\t\tthis[DisplayName] = ( typeof name !== 'string' ) ? name : displayName;\n\t\tthis[Enabled] = true;\n\t\tthis[Hidden] = false;\n\t}\n\n\t/**\n\t * Instance uuid used by the internal mechanism.\n\t * @return {string} - The UUID.\n\t */\n\tget id() {\n\t\treturn this[Id];\n\t}\n\n\t/**\n\t * Instance name used by the internal mechanism.\n\t * @return {string} - Instance name.\n\t */\n\tget name() {\n\t\treturn this[Name];\n\t}\n\n\t/**\n\t * Instance name shown on the user interface, might be a localized string.\n\t * @return {string} - Instance name.\n\t */\n\tget displayName() {\n\t\treturn this[DisplayName];\n\t}\n\n\t/**\n\t * Instance name shown on the user interface, might be a localized string.\n\t * @param {string} [name] - Instance name.\n\t */\n\tset displayName( name ) {\n\t\tif( typeof name !== 'string' ) throw 'Input type should be a string.';\n\n\t\tthis[DisplayName] = name;\n\t}\n\n\t/**\n\t * Instance edis/en-able status.\n\t * @return {bool} - If false, make instance be disabled.\n\t */\n\tget enabled() {\n\t\treturn this[Enabled];\n\t}\n\n\t/**\n\t * Instance edis/en-able status.\n\t * @return {bool} [enabled = true] - If false, make instance be disabled.\n\t */\n\tset enabled( enabled = true ) {\n\t\tthis[Enabled] = ( enabled === true );\n\t}\n\n\t/**\n\t * Instance is hidden or not.\n\t * @return {bool} - If false, instance is going to disppear on the UI.\n\t */\n\tget hidden() {\n\t\treturn this[Hidden];\n\t}\n\n\t/**\n\t * Instance edis/en-able status.\n\t * @return {bool} [hidden = false] - If false, instance is going to disppear on the UI.\n\t */\n\tset hidden( hidden = false ) {\n\t\tthis[Hidden] = ( hidden === true );\n\t}\n}\n","import RibbonItemData from './RibbonItemData';\nimport RibbonTooltipData from './RibbonTooltipData';\n\nconst\tIcon = Symbol( 'icon' );\nconst Tooltip = Symbol( 'tooltip' );\nconst Toggleable = Symbol( 'toggleable' );\nconst ClickHandler = Symbol( 'clickHandler' );\n\n/**\n * RibbonButtonData\n * @extends RibbonItemData\n * @class\n */\nexport default class RibbonButtonData extends RibbonItemData {\n\t/**\n\t * RibbonButtonData constructor\n\t * @param {string} name - The name of this instance used by the internal mechanism.\n\t * @param {string} displayName - The name of this instance shown on the user interface, might be a localized string.\n\t */\n\tconstructor( name, displayName ) {\n\t\tsuper( name, displayName );\n\n\t\tthis[Icon] = '';\n\t\tthis[Tooltip] = undefined;\n\t\tthis[Toggleable] = false;\n\t\tthis[ClickHandler] = undefined;\n\t}\n\n\t/**\n\t * Button role.\n\t * @return {string}\n\t * @override\n\t */\n\tget role() {\n\t\treturn 'ui-ribbon-button';\n\t}\n\n\t/**\n\t * Button icon path.\n\t * @return {string} - Button icon full path or relative path.\n\t */\n\tget icon() {\n\t\treturn this[Icon];\n\t}\n\n\t/**\n\t * Button icon path.\n\t * @param {string} icon - Button icon full path or relative path.\n\t */\n\tset icon( icon ) {\n\t\tif( typeof icon !== 'string' ) throw 'Input type should be a string.';\n\n\t\tthis[Icon] = icon;\n\t}\n\n\t/**\n\t * Button tooltip data.\n\t * @return {RibbonTooltipData} - Ribbon button tooltip data.\n\t */\n\tget tooltip() {\n\t\treturn this[Tooltip];\n\t}\n\n\t/**\n\t * Button tooltip data.\n\t * @param {RibbonTooltipData} tooltip - Ribbon button tooltip data.\n\t */\n\tset tooltip( tooltip ) {\n\t\tif( !(tooltip instanceof RibbonTooltipData) )\n\t\t\tthrow 'Input data is not a type of RibbonTooltipData.';\n\n\t\tthis[Tooltip] = tooltip;\n\t}\n\n\t/**\n\t * Button toggleable state.\n\t * @return {bool} - If true, it repsents button is toggled currently.\n\t */\n\tget toggleable() {\n\t\treturn this[Toggleable];\n\t}\n\n\t/**\n\t * Button toggleable state.\n\t * @return {bool} [toggleable = false] - If true, it repsents button is toggled currently.\n\t */\n\tset toggleable( toggleable = false ) {\n\t\tthis[Toggleable] = ( toggleable === true );\n\t}\n\n\t/**\n\t * Button\tclick eveent handler.\n\t * @return {Function} - Click eveent handler.\n\t */\n\tget clickHandler() {\n\t\treturn this[ClickHandler];\n\t}\n\n\t/**\n\t * Button\tclick eveent handler.\n\t * @param {Function} handler - Click eveent handler.\n\t */\n\tset clickHandler( handler ) {\n\t\tif( !(handler instanceof Function) )\n\t\t\tthrow 'Input clicking handler is invalid.';\n\n\t\tthis[ClickHandler] = handler;\n\t}\n}\n","import RibbonItemData from './RibbonItemData';\n\nconst Items = Symbol( 'items' );\n\n/**\n * RibbonGroupData\n * @extends RibbonItemData\n * @class\n */\nexport default class RibbonGroupData extends RibbonItemData {\n\t/**\n\t * RibbonGroupData constructor\n\t * @param {string} name - The name of this instance used by the internal mechanism.\n\t * @param {string} displayName - The name of this instance shown on the user interface, might be a localized string.\n\t */\n\tconstructor( name, displayName ) {\n\t\tsuper( name, displayName );\n\n\t\tthis[Items] = [];\n\t}\n\t\n\t/**\n\t * Button type.\n\t * @return {string} -\tButton type for identification.\n\t * @override\n\t */\n\tget type() {\n\t\treturn 'ui-ribbon-group';\n\t}\n\t\n\t/**\n\t * Panel's children items.\n\t * @return {RibbonItemData[]} - Ribbon item data.\n\t */\n\tget items() {\n\t\treturn this[Items];\n\t}\n\n\t/**\n\t * Panel's children items.\n\t * @return {RibbonItemData[]} [items = []]- Ribbon item data.\n\t */\n\tset items( items = [] ) {\n\t\tthis[Items] = items;\n\t}\n}\n","import RibbonBaseData from './RibbonBaseData';\n\nconst\tActived = Symbol( 'actived' );\n\n/**\n * RibbonItemData\n * @extends RibbonBaseData\n * @class\n */\nexport default class RibbonItemData extends RibbonBaseData {\n\t/**\n\t * RibbonItemData constructor\n\t * @param {string} name - The name of this instance used by the internal mechanism.\n\t * @param {string} displayName - The name of this instance shown on the user interface, might be a localized string.\n\t */\n\tconstructor( name, displayName ) {\n\t\tsuper( name, displayName );\n\n\t\tthis[Actived] = false;\n\t}\n\n\t/**\n\t * Item type.\n\t * @return {string} - Item type for identification.\n\t */\n\tget type() {\n\t\treturn 'ui-ribbon-panel-item';\n\t}\n\n\t/**\n\t * Item actived state.\n\t * @return {bool} - If true, it repsents item is actived currently.\n\t */\n\tget actived() {\n\t\treturn this[Actived]\n\t}\n\n\t/**\n\t * Item actived state.\n\t * @return {bool} [actived = false] - If true, it repsents item is actived currently.\n\t */\n\tset actived( actived = false ) {\n\t\tthis[Actived] = ( actived === true );\n\t}\n}\n","import RibbonBaseData from './RibbonBaseData';\n\nconst Seperator = Symbol( 'seperator' );\nconst Items = Symbol( 'items' );\n\n/**\n * RibbonPanelData\n * @extends RibbonBaseData\n * @class\n */\nexport default class RibbonPanelData extends RibbonBaseData {\n\t/**\n\t * RibbonPanelData constructor\n\t * @param {string} name - The name of this instance used by the internal mechanism.\n\t * @param {string} displayName - The name of this instance shown on the user interface, might be a localized string.\n\t */\n\tconstructor( name, displayName ) {\n\t\tsuper( name, displayName );\n\n\t\tthis[Seperator] = true;\n\t\tthis[Items] = [];\n\t}\n\n\t/**\n\t * Panel has seperator or not.\n\t * @return {bool} - If true, panel will be seperated with other panels by a panel seperator.\n\t */\n\tget seperator() {\n\t\treturn this[Seperator];\n\t}\n\n\t/**\n\t * Panel has seperator or not.\n\t * @param {bool} [seperator = true] - If true, panel will be seperated with other panels by a panel seperator.\n\t */\n\tset seperator( seperator = true ) {\n\t\tthis[Seperator] = ( seperator === true );\n\t}\n\n\t/**\n\t * Panel's children items.\n\t * @return {RibbonItemData[]} - Ribbon item data.\n\t */\n\tget items() {\n\t\treturn this[Items];\n\t}\n\n\t/**\n\t * Panel's children items.\n\t * @return {RibbonItemData[]} [items = []]- Ribbon item data.\n\t */\n\tset items( items = [] ) {\n\t\tthis[Items] = items;\n\t}\n}\n","import RibbonButtonData from './RibbonButtonData';\n\n/**\n * RibbonPushButtonData\n * @extends RibbonButtonData\n * @class\n */\nexport default class RibbonPushButtonData extends RibbonButtonData {\n\t/**\n\t * RibbonPushButtonData constructor\n\t * @param {string} name - The name of this instance used by the internal mechanism.\n\t * @param {string} displayName - The name of this instance shown on the user interface, might be a localized string.\n\t */\n\tconstructor( name, displayName ) {\n\t\tsuper( name, displayName );\n\t}\n\n\t/**\n\t * Button type.\n\t * @return {string} -\tButton type for identification.\n\t * @override\n\t */\n\tget type() {\n\t\treturn 'ui-ribbon-button-big';\n\t}\n}\n","import RibbonGroupData from './RibbonGroupData';\n\n/**\n * RibbonRadioButtonGroupData\n * @extends RibbonGroupData\n * @class\n */\nexport default class RibbonRadioButtonGroupData extends RibbonGroupData {\n\t/**\n\t * RibbonRadioButtonGroupData constructor\n\t * @param {string} name - The name of this instance used by the internal mechanism.\n\t * @param {string} displayName - The name of this instance shown on the user interface, might be a localized string.\n\t */\n\tconstructor( name, displayName ) {\n\t\tsuper( name, displayName );\n\t}\n\t\n\t/**\n\t * Button type.\n\t * @return {string} -\tButton type for identification.\n\t * @override\n\t */\n\tget type() {\n\t\treturn 'ui-ribbon-radio-group';\n\t}\n}\n","import RibbonBaseData from './RibbonBaseData';\n\nconst\tActived = Symbol( 'actived' );\nconst Panels = Symbol( 'panels' );\n\n/**\n * RibbonTabData\n * @extends RibbonBaseData\n * @class\n */\nexport default class RibbonTabData extends RibbonBaseData {\n\t/**\n\t * RibbonTabData constructor\n\t * @param {string} name - The name of this instance used by the internal mechanism.\n\t * @param {string} displayName - The name of this instance shown on the user interface, might be a localized string.\n\t */\n\tconstructor( name, displayName ) {\n\t\tsuper( name, displayName );\n\n\t\tthis[Actived] = false;\n\t\tthis[Panels] = [];\n\t}\n\n\t/**\n\t * Tab type.\n\t * @return {string} - Tab type for identification.\n\t */\n\tget type() {\n\t\treturn 'ui-ribbon-tab-normal';\n\t}\n\n\t/**\n\t * Tab actived state.\n\t * @return {bool} - If true, it repsents tab is selected currently.\n\t */\n\tget actived() {\n\t\treturn this[Actived]\n\t}\n\t\n\t/**\n\t * Tab actived state.\n\t * @return {bool} [actived = false] - If true, it repsents tab is selected currently.\n\t */\n\tset actived( actived = false ) {\n\t\tthis[Actived] = ( actived === true );\n\t}\n\n\t/**\n\t * Tab's children panels\n\t * @return {RibbonPanelData[]} - Ribbon panel data.\n\t */\n\tget panels() {\n\t\treturn this[Panels];\n\t}\n\n\t/**\n\t * Tab's children panels\n\t * @param {RibbonPanelData[]} [panels = []] - Ribbon panel data.\n\t */\n\tset panels( panels = [] ) {\n\t\tthis[Panels] = panels;\n\t}\n}\n","import RibbonBaseData from './RibbonBaseData';\n\n/**\n * RibbonTitlebarData\n * @class\n */\nexport default class RibbonTitlebarData extends RibbonBaseData {\n\t/**\n\t * RibbonTitlebarData constructor\n\t * @param {string} title - The name of this instance shown on the user interface, might be a localized string.\n\t */\n\tconstructor( title ) {\n\t\tif( typeof title !== 'string' ) title = 'Ribbon UI';\n\n\t\tsuper( 'AppTitlebar', title );\n\t}\n\n\t/**\n\t * App title.\n\t * @return {string}\n\t */\n\tget title() {\n\t\treturn this.displayName;\n\t}\n\n\t/**\n\t * App title\n\t * @param {string} title\n\t */\n\tset title( title ) {\n\t\tthis.displayName = title;\n\t}\n}\n","import RibbonPushButtonData from './RibbonPushButtonData';\n\n/**\n * RibbonToggleButtonData\n * @extends RibbonPushButtonData\n * @class\n */\nexport default class RibbonToggleButtonData extends RibbonPushButtonData {\n\t/**\n\t * RibbonToggleButtonData constructor\n\t * @param {string} name - The name of this instance used by the internal mechanism.\n\t * @param {string} displayName - The name of this instance shown on the user interface, might be a localized string.\n\t */\n\tconstructor( name, displayName ) {\n\t\tsuper( name, displayName );\n\t}\n\n\t/**\n\t * Button role.\n\t * @return {string}\n\t * @override\n\t */\n\tget role() {\n\t\treturn 'ui-ribbon-button-toggle';\n\t}\n\n\t/**\n\t * Button toggleable state.\n\t * @return {bool} - If true, it repsents button is toggled currently.\n\t * @override\n\t */\n\tget toggleable() {\n\t\treturn true;\n\t}\n}\n","import RibbonBaseData from './RibbonBaseData';\nimport { newGUID } from '../utility';\n\nconst Content = Symbol( 'content' );\n\n/**\n * RibbonTooltipData\n * @extends RibbonBaseData\n * @class\n */\nexport default class RibbonTooltipData extends RibbonBaseData {\n\t/**\n\t * RibbonTooltipData constructor\n\t * @param {string} name - The name of this instance used by the internal mechanism.\n\t * @param {string} displayName - The name of this instance shown on the user interface, might be a localized string.\n\t */\n\tconstructor( title, content ) {\n\t\tif( typeof title !== 'string' ) throw 'Tooltip title cannot be empty.';\n\n\t\tsuper( 'RibbonTooltip', title );\n\n\t\tthis[Content] = ( typeof content !== 'string' ) ? undefined : content;\n\t\tthis.hidden = true;\n\t}\n\t\n\t/**\n\t * App title.\n\t * @return {string}\n\t */\n\tget title() {\n\t\treturn this.displayName;\n\t}\n\n\t/**\n\t * App title\n\t * @param {string} title\n\t */\n\tset title( title ) {\n\t\tthis.displayName = title;\n\t}\n\n\t/**\n\t * Tooltip content.\n\t * @return {string} - Tooltip content.\n\t */\n\tget content() {\n\t\treturn this[Content];\n\t}\n\n\t/**\n\t * Tooltip content.\n\t * @return {string} - Tooltip content.\n\t */\n\tset content( content ) {\n\t\tif( typeof content !== 'string' ) throw 'Input content should be a type of string.';\n\n\t\tthis[Content] = content;\n\t}\n}\n","import RibbonBaseData from './RibbonBaseData';\nimport RibbonTitlebarData from './RibbonTitlebarData';\nimport RibbonTabData from './RibbonTabData';\nimport RibbonAppTabData from './RibbonAppTabData';\nimport RibbonPanelData from './RibbonPanelData';\nimport RibbonItemData from './RibbonItemData';\nimport RibbonButtonData from './RibbonButtonData';\nimport RibbonPushButtonData from './RibbonPushButtonData';\nimport RibbonToggleButtonData from './RibbonToggleButtonData';\nimport RibbonTooltipData from './RibbonTooltipData';\nimport RibbonGroupData from './RibbonGroupData';\nimport RibbonRadioButtonGroupData from './RibbonRadioButtonGroupData';\n\nconst Data = {\n\tRibbonBaseData,\n\tRibbonTitlebarData,\n\tRibbonTabData,\n\tRibbonAppTabData,\n\tRibbonPanelData,\n\tRibbonItemData,\n\tRibbonButtonData,\n\tRibbonPushButtonData,\n\tRibbonToggleButtonData,\n\tRibbonTooltipData,\n\tRibbonGroupData,\n\tRibbonRadioButtonGroupData\n};\n\nexport default Data;\n","import Ribbon from './Ribbon';\nimport RibbonBase from './RibbonBase';\nimport RibbonTab from './RibbonTab';\nimport RibbonPanel from './RibbonPanel';\nimport RibbonTitlebar from './RibbonTitlebar';\nimport RibbonItem from './RibbonItem';\nimport RibbonButton from './RibbonButton';\nimport RibbonTooltip from './RibbonTooltip';\nimport RibbonPushButton from './RibbonPushButton';\nimport RibbonToggleButton from './RibbonToggleButton';\nimport RibbonGroup from './RibbonGroup';\nimport RibbonRadioButtonGroup from './RibbonRadioButtonGroup';\nimport RibbonCtrl from './RibbonCtrl';\nimport RibbonTask from './RibbonTask';\nimport RibbonTaskManager from './RibbonTaskManager';\nimport RibbonTaskExecuter from './RibbonTaskExecuter';\nimport Utility from './utility';\nimport Data from './data';\n\nconst RibbonUI = {\n\tRibbon,\n\tRibbonBase,\n\tRibbonTab,\n\tRibbonPanel,\n\tRibbonTitlebar,\n\tRibbonItem,\n\tRibbonButton,\n\tRibbonTooltip,\n\tRibbonPushButton,\n\tRibbonToggleButton,\n\tRibbonGroup,\n\tRibbonRadioButtonGroup,\n\tRibbonCtrl,\n\tRibbonTask,\n\tRibbonTaskManager,\n\tRibbonTaskExecuter,\n\tUtility,\n\tData\n};\n\n/**\n * Expose to global.\n */\nUtility.namespace( 'React.Windows' );\nReact.Windows = RibbonUI;\n\n/**\n * Module exposure.\n */\nexport default RibbonUI;\nexport {\n\tRibbonCtrl,\n\tRibbonTask,\n\tUtility,\n\tData\n};\n","import { Utility } from '../';\nimport { RibbonCtrl } from '../';\n\nlet ns = Utility.namespace( 'React.Windows' );\n\nif( !ns.ribbonCtrlInst )\n\tns.ribbonCtrlInst = new RibbonCtrl();\n\nexport default ns.ribbonCtrlInst;\n","import ribbonCtrl, { Utility } from './modules';\nimport DemoTask from './tasks/DemoTask';\n\nconst init = () => {\n\tribbonCtrl.container = document.getElementById( 'ribbon-root' );\n\tribbonCtrl.run()\n\t\t\t\t\t\t.then( ( self ) => {\n\t\t\t\t\t\t\t// Execute demo task.\n\t\t\t\t\t\t\tself.executeTask( 'React.Windows.RibbonDemoTask', null );\n\t\t\t\t\t\t})\n\t\t\t\t\t\t.catch( ( error ) => {\n\t\t\t\t\t\t\tconsole.warn( error );\n\t\t\t\t\t\t});\n};\n\nwindow.onload = () => {\n\tinit();\n};\n","export { RibbonTask, Utility, Data } from '../';\nimport ribbonCtrl from './RibbonCtrl';\n\nif( !ribbonCtrl ) console.error( '[RibbonTest] Failed to create ribbonCtrl instance.' );\n\nexport default ribbonCtrl;\n\n","import $ from 'jquery';\nimport ribbonCtrl, { RibbonTask, Data, Utility } from '../modules';\n\nconst {\n\tRibbonTabData,\n\tRibbonPanelData,\n\tRibbonPushButtonData,\n\tRibbonToggleButtonData,\n\tRibbonTooltipData,\n\tRibbonRadioButtonGroupData\n} = Data;\n\n/**\n * RibbonDemoTask\n * @extends RibbonTask\n * @class\n */\nexport default class RibbonDemoTask extends RibbonTask {\n\t/**\n\t * RibbonDemoTask constructor.\n\t * @param {Ribbon} ribbon - Rendered Ribbon component.\n\t * @param {object} options - Task options.\n\t */\n\tconstructor( ribbon, options ) {\n\t\tsuper( ribbon, options );\n\t}\n\n\t/**\n\t * Execute task content.\n\t * @return {bool} If true, it represents this task was executed by the Ribbon.\n\t */\n\texecute() {\n\t\ttry {\n\t\t\t// Create tab.\n\t\t\tconst ribbon = this.ribbon;\n\t\t\tconst tabData = new RibbonTabData( 'DemoBasicTab', 'Basic' );\n\t\t\tconst tab = ribbon.addTab( tabData );\n\n\t\t\tconst testTabData = new RibbonTabData( 'DemoTestTab', 'Test' );\n\t\t\tconst testTab = ribbon.addTab( testTabData );\n\n\t\t\t// Create panel.\n\t\t\tconst spatialPanelData = new RibbonPanelData( 'DemoSpatialPanel', 'Spatial' );\n\t\t\tconst spatialPanel = tab.addPanel( spatialPanelData );\n\n\t\t\t// Create buttons.\n\t\t\tconst dwnBtnData = new RibbonPushButtonData( 'DemoSpatialDwnBtn', 'Download' );\n\t\t\tconst dwnBtn = spatialPanel.addItem( dwnBtnData );\n\t\t\tdwnBtn.icon = 'img/db_download.png';\n\t\t\tdwnBtn.clickHandler = () => { alert( 'DemoSpatialDwnBtn Clicked!' ); };\n\n\t\t\tconst clsBtnData = new RibbonPushButtonData( 'DemoSpatialCleanBtn', 'Clean' );\n\t\t\tconst clsBtn = spatialPanel.addItem( clsBtnData );\n\t\t\tclsBtn.icon = 'img/db_remove.png';\n\t\t\tclsBtn.clickHandler = () => { alert( 'DemoSpatialCleanBtn Clicked!' ); };\n\n\t\t\t// Create panel.\n\t\t\tconst navPanelData = new RibbonPanelData( 'DemoNavPanel', 'Navigation' );\n\t\t\tconst navPanel = tab.addPanel( navPanelData );\n\n\t\t\t// Create button gruop.\n\t\t\tconst radioBtnGroupData = new RibbonRadioButtonGroupData( 'DemoNavBtnGroup', 'NavBtnGroup' );\n\t\t\tconst radioBtnGroup = navPanel.addItem( radioBtnGroupData );\n\n\t\t\t// Add buttons to gruop.\n\t\t\tconst panBtnData = new RibbonToggleButtonData( 'DemoPanBtn', 'Pan' );\n\t\t\tconst panBtn = radioBtnGroup.addItem( panBtnData );\n\t\t\tpanBtn.icon = 'img/pan.png';\n\t\t\tpanBtn.clickHandler = () => { alert( 'DemoPanBtn Clicked!' ); };\n\n\t\t\tconst orbitBtnData = new RibbonToggleButtonData( 'DemoOrbitBtn', 'Orbit' );\n\t\t\tconst orbitBtn = radioBtnGroup.addItem( orbitBtnData );\n\t\t\torbitBtn.icon = 'img/orbit.png';\n\t\t\torbitBtn.clickHandler = () => { alert( 'DemoOrbitBtn Clicked!' ); };\n\n\t\t\t$('#demo-active-tab-basic').click( () => {\n\t\t\t\ttab.actived = true;\n\t\t\t\tconsole.log( 'Set tab actived status to true: ', tab.actived === true );\n\t\t\t});\n\n\t\t\t$('#demo-deactive-tab-basic').click( () => {\n\t\t\t\ttab.actived = false;\n\t\t\t\tconsole.log( 'Set tab actived status to false: ', tab.actived === false );\n\t\t\t});\n\n\t\t\t$('#demo-active-tab-test').click( () => {\n\t\t\t\ttestTab.actived = true;\n\t\t\t\tconsole.log( 'Set tab actived status to true: ', testTab.actived === true );\n\t\t\t});\n\n\t\t\t$('#demo-deactive-tab-test').click( () => {\n\t\t\t\ttestTab.actived = false;\n\t\t\t\tconsole.log( 'Set tab actived status to false: ', testTab.actived === false );\n\t\t\t});\n\n\t\t\t$('#demo-active-button-download').click( () => {\n\t\t\t\tdwnBtn.actived = true;\n\t\t\t\tconsole.log( 'Set button actived status to true: ', dwnBtn.actived === true );\n\t\t\t});\n\n\t\t\t$('#demo-deactive-button-download').click( () => {\n\t\t\t\tdwnBtn.actived = false;\n\t\t\t\tconsole.log( 'Set button actived status to false: ', dwnBtn.actived === false );\n\t\t\t});\n\n\t\t\t$('#demo-enable-button-download').click( () => {\n\t\t\t\tdwnBtn.enabled = true;\n\t\t\t\tconsole.log( 'Set button enabled status to true: ', dwnBtn.enabled === true );\n\t\t\t});\n\n\t\t\t$('#demo-disable-button-download').click( () => {\n\t\t\t\tdwnBtn.enabled = false;\n\t\t\t\tconsole.log( 'Set button enabled status to false: ', dwnBtn.enabled === false );\n\t\t\t});\n\t\t} catch( error ) {\n\t\t\tconsole.warn( error );\n\t\t\treturn false;\n\t\t}\n\n\t\treturn true;\n\t}\n\n\t/**\n\t * Discard all changes.\n\t * @return {bool} If true, it represents changes made by this task was removed from the Ribbon.\n\t */\n\tdiscard() {\n\t\treturn true;\n\t}\n};\n\nribbonCtrl.registerTask( 'React.Windows.RibbonDemoTask', RibbonDemoTask );\n","'use strict';\n\n/**\n * Create new GUID based on timeStamp.\n * @return {string}\t- New guid\n */\nexport const newGUID = () => {\n\tvar d = new Date().getTime();\n\n\tvar guid = 'xxxx-xxxx-xxxx-xxxx-xxxx'.replace(\n\t\t/[xy]/g,\n\t\t( c ) => {\n\t\t\tvar r = ( d + Math.random() * 16 ) % 16 | 0;\n\t\t\td = Math.floor( d / 16 );\n\t\t\treturn ( c == 'x' ? r : ( r & 0x7 | 0x8 ) ).toString( 16 );\n\t\t});\n\n\treturn guid;\n};\n\n/**\n * Find proper (first) item suited with input condition in an array.\n * @param {array} items -\tArray of searching target.\n * @param {func} predicate - Predicate function for describe which item is goingo to return.\n * @return {object} - Target item.\n */\nexport const findItem = ( items = [], predicate ) => {\n\tpredicate = ( predicate instanceof Function ) ? predicate : ( item ) => { return true };\n\n\tfor( let i = 0; i < items.length; i++ ) {\n\t\tlet item = items[i];\n\t\tif( predicate( item ) ) return item;\n\t}\n};\n\n/**\n * Create namespace.\n * @param {string} s - namespace (e.g. 'RiibonUI.Ribbon').\n * @return {Object} - Namespace,\n */\t\nexport const namespace = ( s ) => {\n\tvar ns = typeof window !== 'undefined' && window !== null ? window : self;\n\n\tvar parts = s.split( '.' );\n\tfor( var i = 0; i < parts.length; i++ ) {\n\t\tns[ parts[i] ] = ns[ parts[i] ] || {};\n\t\tns = ns[ parts[i] ];\n\t}\n\n\treturn ns;\n};\n\nconst utility = {\n\tnewGUID,\n\tfindItem,\n\tnamespace\n};\n\nexport default utility;\n"]}